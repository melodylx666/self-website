{"config":{"lang":["zh","en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4f60\u597d","text":""},{"location":"#_2","title":"\u4e2a\u4eba\u7b80\u4ecb","text":"<p>\u8fd9\u91cc\u662flx\u7684\u4e2a\u4eba\u535a\u5ba2</p> <ol> <li>\u4e2a\u4eba\u65b9\u5411\uff1a\u6570\u636e\u5f00\u53d1</li> <li>\u4e3b\u529b\u8bed\u8a00\uff1aScala Java</li> <li>\u6280\u672f\u6808\uff1a\u79bb\u7ebf\u6570\u4ed3\uff0c\u5b9e\u65f6\u5f15\u64ce</li> </ol>"},{"location":"#_3","title":"\u535a\u5ba2\u5185\u5bb9","text":"<p>\u4e3b\u8981\u8bb0\u5f55\u4e00\u4e9b\u8bfe\u7a0b\u7684\u590d\u4e60\uff0c\u4ee5\u53ca\u5f00\u53d1\u7684\u76f8\u5173\u8bb0\u5f55\u3002</p> <p>todo-list</p> <ol> <li>\u5c06\u4e2a\u4ebagitee\u7684\u90e8\u5206\u9879\u76ee\u8fc1\u79fb\u5230github</li> <li>\u4e3a\u6709\u4ef7\u503c\u7684\u9879\u76ee\u505a\u4e00\u4e9b\u601d\u8def\u5206\u6790\u4e0e\u89e3\u8bfb</li> </ol>"},{"location":"LANG/","title":"\u8bed\u8a00\u57fa\u7840","text":"<p>\u5185\u5bb9\u53ef\u4ee5\u5728\u4fa7\u8fb9\u680f\u9009\u62e9</p>"},{"location":"LANG/DS-leetcode/","title":"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5","text":"<p>\u90e8\u5206\u76ee\u5f55\u7f3a\u5931</p> <p></p>"},{"location":"LANG/DS-leetcode/#_2","title":"\u5de5\u5177\u7c7b\uff1a","text":"<p>\u5168\u90e8\u90fd\u662f\u9759\u6001\u65b9\u6cd5</p>"},{"location":"LANG/DS-leetcode/#arrays","title":"Arrays\uff1a","text":"<ol> <li> <p>\u6570\u7ec4\u5143\u7d20\u62fc\u63a5\uff1a</p> </li> <li> <p>static String toString(Object[] a) \uff1a\u5bf9\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528toString\u6253\u5370\uff0c\u5e76\u7528\",\"\u62fc\u63a5</p> </li> <li>\u6392\u5e8f\uff1a</li> <li>static void sort(int[] a, int fromIndex, int toIndex) \uff1a\u5bf9\u6570\u636e\u8fdb\u884c\u90e8\u5206\u5347\u5e8f\u6392\u5e8f</li> <li>static void sort(T[] a, Comparator&lt;? super T&gt; c)\uff1a\u5bf9\u6570\u636e\u5143\u7d20\u8fdb\u884c\u5b9a\u5236\u6392\u5e8f</li> <li>static void sort(Object[] a) \uff1a\u5bf9\u6570\u7ec4\u5143\u7d20\u8fdb\u884c\u81ea\u7136\u6392\u5e8f</li> <li>\u6570\u7ec4\u590d\u5236\uff1a</li> <li>static T[] copyOf(T[] original,int newLength)\uff1a\u4ece\u539f\u6570\u7ec4\u590d\u5236\u957f\u5ea6\u4e3anewLength\u7684\u6570\u7ec4\u5e76\u8fd4\u56de\u65b0\u6570\u7ec4</li> <li>static T[] copyOfRange(T[] original,int from,int to)\uff1a\u590d\u5236\u539f\u6570\u7ec4\u7684[from,to\uff09\u7684\u6570\u7ec4\u5143\u7d20\u5e76\u8fd4\u56de\u65b0\u6570\u7ec4</li> <li>\u6bd4\u8f83\uff1a</li> <li>static boolean equals(Object[] a,Object[] a2)\uff1a\u5224\u65ad\u4e24\u4e2a\u6570\u7ec4\u5143\u7d20\u4ee5\u53ca\u957f\u5ea6\u662f\u5426\u5b8c\u5168\u76f8\u540c\u3002</li> <li>\u586b\u5145\u6570\u7ec4\uff1a</li> <li>static void fill(Object[] a,Object val)\uff1a\u5c06\u6240\u6709\u4f4d\u7f6e\u8bbe\u7f6e\u4e3aval</li> <li>static void fill(Object[] a, int fromIndex, int toIndex, Object val) \uff1a[from,to)\u4f4d\u7f6e\u8bbe\u7f6e\u4e3aval</li> </ol>"},{"location":"LANG/DS-leetcode/#collections","title":"Collections\uff1a","text":"<ol> <li> <p>\u6392\u5e8f\u64cd\u4f5c\uff1a</p> </li> <li> <p>sort(List)\uff1a\u5bf9\u5217\u8868\u5143\u7d20\u8fdb\u884c\u81ea\u7136\u5347\u5e8f\u6392\u5e8f</p> </li> <li>sort(List\uff0cComparator):\u5b9a\u5236\u6392\u5e8f</li> <li>reverse(List)\uff1a\u7ffb\u8f6c\u5217\u8868\u5143\u7d20\u4f4d\u7f6e</li> <li>swap(List\uff0cint\uff0c int)\uff1a\u5c06List\u7684i\u4f4d\u7f6e\u548cj\u4f4d\u7f6e\u5143\u7d20\u4ea4\u6362</li> <li>\u67e5\u627e\uff1a</li> <li>Object max(Collection)\uff1a\u81ea\u7136\u6392\u5e8f\u4e0b\u7684\u6700\u5927\u503c\u3002\u4e5f\u53ef\u4ee5\u4f20\u5165Compatator\u8fdb\u884c\u5b9a\u5236\u6392\u5e8f</li> <li>int frequency(Collection c\uff0cObject o)\uff1a\u8fd4\u56de\u5217\u8868\u4e2d\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570</li> <li>\u6dfb\u52a0\uff1a</li> <li>boolean addAll(Collection c,T... elements):\u5c06\u6240\u6709\u6307\u5b9a\u5143\u7d20\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d</li> </ol>"},{"location":"LANG/DS-leetcode/#_3","title":"\u96c6\u5408\u6846\u67b6\uff1a","text":""},{"location":"LANG/DS-leetcode/#collection","title":"Collection\u63a5\u53e3\uff1a","text":""},{"location":"LANG/DS-leetcode/#_4","title":"\u63a5\u53e3\u7684\u65b9\u6cd5","text":"<ol> <li>\u6dfb\u52a0\uff1aadd(E obj)\uff1a\u6dfb\u52a0\u5143\u7d20\u5bf9\u8c61\u5230\u5f53\u524d\u96c6\u5408\u4e2d\u3002addAll(Collection other)\uff1athis = this \u222a other</li> <li>\u5224\u65ad\uff1a</li> <li>int size()\uff1a\u957f\u5ea6</li> <li>boolean isEmpty()\uff1a\u662f\u5426\u4e3a\u7a7a</li> <li>boolean contains(Object obj)\uff1a\u901a\u8fc7equals\u8fdb\u884c\u5224\u65ad</li> <li>boolean containsAll(Collection coll)\uff1a\u5224\u65ad\u5143\u7d20\u662f\u5426\u90fd\u5305\u542b</li> <li>\u5220\u9664\uff1a</li> <li>clear()\uff1a\u6e05\u7a7a</li> <li>remove(),removeAll()\uff1a\u5220\u9664\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u5143\u7d20\u3002\u5220\u9664\u5168\u90e8\u5339\u914d\u7684\u5143\u7d20\u3002</li> </ol>"},{"location":"LANG/DS-leetcode/#list","title":"List","text":"<p>\u4e3b\u8981\u4f7f\u7528ArrayList\uff0c\u4ee5\u53caLinkedList</p> <ol> <li> <p>\u63d2\u5165:</p> </li> <li> <p>void add(int index, Object ele):\u5728 index \u4f4d\u7f6e\u63d2\u5165 ele \u5143\u7d20</p> </li> <li>\u83b7\u53d6\uff1a</li> <li>Object get(int index):\u83b7\u53d6\u6307\u5b9a index \u4f4d\u7f6e\u7684\u5143\u7d20</li> <li>List subList(int fromIndex, int toIndex):\u8fd4\u56de\u4ece fromIndex \u5230 toIndex \u4f4d\u7f6e\u7684\u5b50\u96c6\u5408</li> <li>\u4f4d\u7f6e\uff1a</li> <li>int indexOf(Object obj):\u8fd4\u56de obj \u5728\u96c6\u5408\u4e2d\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e</li> <li>int lastIndexOf(Object obj):\u8fd4\u56de obj \u5728\u5f53\u524d\u96c6\u5408\u4e2d\u672b\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e</li> <li>\u5220\u9664\u66ff\u6362\uff1a</li> <li>Object remove(int index):\u79fb\u9664\u6307\u5b9a index \u4f4d\u7f6e\u7684\u5143\u7d20</li> <li>Object set(int index, Object ele):\u8bbe\u7f6e\u6307\u5b9a index \u4f4d\u7f6e\u7684\u5143\u7d20\u4e3aele</li> </ol>"},{"location":"LANG/DS-leetcode/#set","title":"Set","text":"<p>\u4e3b\u8981\u4f7f\u7528HashSet</p>"},{"location":"LANG/DS-leetcode/#map","title":"Map\u63a5\u53e3\uff1a","text":""},{"location":"LANG/DS-leetcode/#_5","title":"\u63a5\u53e3\u7684\u65b9\u6cd5","text":"<ol> <li> <p>\u6dfb\u52a0</p> </li> <li> <p>Object put(Object key,Object value)\uff1a\u5c06\u6307\u5b9a key-value \u6dfb\u52a0\u5230(\u6216\u4fee\u6539)\u5f53\u524d\u7684Map\u5bf9\u8c61\u4e2d\u3002</p> </li> <li>void putAll(Map m):\u5c06 m \u4e2d\u7684\u6240\u6709 key-value \u5bf9\u5b58\u653e\u5230\u5f53\u524d map \u4e2d</li> <li>\u5220\u9664</li> <li>Object remove(Object key)\uff1a\u79fb\u9664\u6307\u5b9a key \u7684 key-value \u5bf9\uff0c\u5e76\u8fd4\u56de value</li> <li>void clear()\uff1a\u6e05\u7a7a\u5f53\u524d map \u4e2d\u7684\u6240\u6709\u6570\u636e</li> <li>\u67e5\u8be2</li> </ol>"},{"location":"LANG/DS-leetcode/#2hashmap","title":"2.HashMap\u6700\u5e38\u7528","text":"<ol> <li>\u7ebf\u7a0b\u4e0d\u5b89\u5168</li> <li>\u5141\u8bb8key\u548cvalue\u662fnull\u503c</li> <li>key\u76f8\u7b49\uff1a\u901a\u8fc7hashcode\u5224\u65ad\u3002value\u76f8\u7b49\uff1a\u901a\u8fc7equals\u65b9\u6cd5\u5224\u65ad\u3002</li> </ol>"},{"location":"LANG/DS-leetcode/#_6","title":"\u6570\u636e\u7ed3\u6784\uff1a","text":""},{"location":"LANG/DS-leetcode/#_7","title":"\u6808","text":"<ol> <li>\u7c7b\uff1aStack</li> <li>\u65b9\u6cd5\uff1a</li> <li>peek()\uff1a\u67e5\u770b\u6808\u9876\u5143\u7d20</li> <li>pop()\uff1a\u5f39\u51fa\u5e76\u8fd4\u56de\u6808\u9876\u5143\u7d20</li> <li>push()\uff1a\u5c06\u5143\u7d20\u538b\u6808</li> </ol>"},{"location":"LANG/DS-leetcode/#_8","title":"\u961f\u5217\u4e0e\u53cc\u7aef\u961f\u5217\u4e0e\u4f18\u5148\u961f\u5217","text":"<ol> <li>\u7c7b\uff1a\u63a5\u53e3\uff1a</li> <li>\u961f\u5217\uff1aQueue\uff0c\u5b9e\u73b0\u7c7bLinkedList</li> <li>\u53cc\u7aef\u961f\u5217\uff1aDeque deque = new ArrayDeque&lt;&gt;(); <li>\u4f18\u5148\u961f\u5217\uff1aPriorityQueue heap = new PriorityQueue&lt;&gt;((a,b)-&gt;a[1]-b[1]) <li>\u65b9\u6cd5\uff1a</li> <li>\u6dfb\u52a0\uff1aadd,offer</li> <li>\u67e5\u770b\u961f\u5217\u5934\u90e8\uff1apeek</li> <li>\u83b7\u53d6\u5e76\u51fa\u961f\u5934\u90e8:poll</li>"},{"location":"LANG/DS-leetcode/#_9","title":"\u6570\u636e\u91cf\u4e0e\u5bf9\u5e94\u7b97\u6cd5","text":"<ol> <li>\u5e73\u53f0\u8fd0\u884c\u8981\u6c42\uff1a</li> <li>c/c++\u8fd0\u884c\u65f6\u95f41s\uff0cjava/python/go\u7b49\u8bed\u8a00\u8fd0\u884c\u65f6\u95f41-2s</li> <li>\u5bf9\u5e94\u7684\u5e38\u6570\u6307\u4ee4\u64cd\u4f5c\u91cf\u662f10^8\u4ee5\u5185\uff0c\u5fc5\u987b\u9650\u5236\u5728\u8fd9\u4e2a\u6570\u91cf\u7ea7\uff0c\u548c\u5e73\u53f0\u65e0\u5173</li> <li>\u5047\u8bben = 10^6,\u5219O(n^2)\u7b97\u6cd5\u5fc5\u7136TLE</li> <li>\u5bf9\u5e94\u7b97\u6cd5</li> </ol> <p>2^n\u5e38\u5bf9\u5e94\u9012\u5f52\u5c55\u5f00(\u6bcf\u4e2a\u4f4d\u7f6e\u66b4\u529b\u679a\u4e3e)</p> <p></p> <p></p>"},{"location":"LANG/DS-leetcode/#_10","title":"\u9009\u62e9\u6392\u5e8f\uff1a","text":"<p>i\\~n-1\u8303\u56f4\u4e0a\uff0c\u627e\u5230\u6700\u5c0f\u503c\u5e76\u653e\u5728i\u4f4d\u7f6e\uff0c\u7136\u540ei+1\\~n-1\u8303\u56f4\u4e0a\u7ee7\u7eed</p> Text Only<pre><code>     //\u9009\u62e9\u6392\u5e8f\n    public static void selectionSort(int[] arr) {\n        if (arr == null || arr.length &lt; 2) {\n            return;\n        }\n        for (int minIndex, i = 0; i &lt; arr.length - 1; i++) {\n            minIndex = i;\n            for (int j = i + 1; j &lt; arr.length; j++) {\n                if (arr[j] &lt; arr[minIndex]) {\n                    minIndex = j;\n                }\n            }\n            swap(arr, i, minIndex);\n        }\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_11","title":"\u5192\u6ce1\u6392\u5e8f\uff1a","text":"<p>0\\~i\u8303\u56f4\u4e0a\uff0c\u76f8\u90bb\u4f4d\u7f6e\u8f83\u5927\u7684\u6570\u6eda\u4e0b\u53bb\uff0c\u6700\u5927\u503c\u6700\u7ec8\u6765\u5230i\u4f4d\u7f6e\uff0c\u7136\u540e0\\~i-1\u8303\u56f4\u4e0a\u7ee7\u7eed</p> Text Only<pre><code>    public static void bubbleSort(int[] arr) {\n        if (arr == null || arr.length &lt; 2) {\n            return;\n        }\n        for (int end = arr.length - 1; end &gt; 0; end--) {\n            for (int i = 0; i &lt; end; i++) {\n                if (arr[i] &gt; arr[i + 1]) {\n                    swap(arr, i, i + 1);\n                }\n            }\n        }\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_12","title":"\u63d2\u5165\u6392\u5e8f\uff1a","text":"<p>0\\~i\u8303\u56f4\u4e0a\u5df2\u7ecf\u6709\u5e8f\uff0c\u65b0\u6765\u7684\u6570\u4ece\u53f3\u5230\u5de6\u6ed1\u5230\u4e0d\u518d\u5c0f\u7684\u4f4d\u7f6e\u63d2\u5165\uff0c\u7136\u540e\u7ee7\u7eed</p> Text Only<pre><code>    public static void insertionSort(int[] arr) {\n        if (arr == null || arr.length &lt; 2) {\n            return;\n        }\n        for (int i = 1; i &lt; arr.length; i++) {\n        //\u4ece0\u5230i-1\u90e8\u5206\uff0c\u8fdb\u884c\u6ed1\u52a8\u63d2\u5165\n        //\u6bcf\u6b21\u90fd\u80fd\u4fdd\u8bc10\u5230i-1\u90e8\u5206\u6709\u5e8f\uff0c\u65b0\u6765\u7684\u662farr[i],\u5728\u4e0b\u9762\u7684\u5faa\u73af\u4e2d\u65b0\u6765\u7684\u6570\u4e00\u76f4\u662farr[j+1].\n            for (int j = i - 1; j &gt;= 0 &amp;&amp; arr[j] &gt; arr[j + 1]; j--) {\n                swap(arr, j, j + 1);\n            }\n        }\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_13","title":"\u5feb\u901f\u6392\u5e8f","text":"<ol> <li>\u57fa\u672c\u601d\u8def\uff1a</li> <li>\u5c06\u6570\u5217\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u7b2c\u4e00\u6b65\u8981\u662f\u8981\u628a\u6570\u5217\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff0c\u7136\u540e\u4fdd\u8bc1\u524d\u4e00\u4e2a\u5b50\u6570\u5217\u4e2d\u7684\u6570\u90fd\u5c0f\u4e8e\u540e\u4e00\u4e2a\u5b50\u6570\u5217\u4e2d\u7684\u6570\u3002\u4e5f\u5c31\u662f\u5212\u5206\u4e3a\u524d\u4e00\u90e8\u5206&lt;=nums[x],\u540e\u4e00\u90e8\u5206&gt;nums[x]\u3002\u5219\u6b64\u65f6\u5c06x\u4f4d\u7f6e\u7684\u6570\u79fb\u52a8\u5230&lt;=\u4f4d\u7f6e\u7684\u6700\u540e\u4e00\u4e2a\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a\u5e8f\u5217\u4e2d\u95f4\uff0c\u610f\u5473\u7740nums[x]\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\u3002</li> <li>\u9012\u5f52\u5230\u4e24\u4e2a\u5b50\u5e8f\u5217\u4e2d\u8fdb\u884ca\u64cd\u4f5c\u3002\u6bcf\u4e00\u6b21\u5212\u5206\u5c31\u4f1a\u6392\u5e8f\u597d\u4e00\u4e2a\u6570</li> <li>\u4e0d\u7528\u5408\u5e76\uff0c\u6b64\u65f6\u5e8f\u5217\u5df2\u7ecf\u5b8c\u5168\u6709\u5e8f</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n*logn),\u6700\u5deeO(n^2)</li> <li>\u7ecf\u5178\u6a21\u677f\uff1a</li> </ol> Text Only<pre><code>class Solution {\n    public int[] sortArray(int[] nums) {\n        quickSort(nums, 0, nums.length-1);\n        return nums;\n    }\n    public static void quickSort(int[] nums, int l, int r){\n        if(l&gt;=r) return;\n        int x = nums[l + (int)(Math.random()*(r-l+1))];\n        int mid = partition(nums, x,l,r);\n        quickSort(nums, l,mid-1);\n        quickSort(nums, mid+1,r);\n    }\n    public static int partition(int[] nums, int x,int l, int r){\n        //[l,cnt)\u662f&lt;=x\u7684\u6570\u7ec4\n        int cnt = l;\n        int xIndex = 0;\n        for(int i=l; i&lt;=r;i++){\n            if(nums[i] &lt;= x){\n                swap(nums,i,cnt);\n                //\u88ab\u4ea4\u6362\u5230\u4e86cnt\u4f4d\u7f6e\n                if(nums[cnt] == x) xIndex = cnt;\n                cnt++;\n            }\n        }\n        swap(nums,xIndex,cnt-1);\n        return cnt-1;\n    }\n    public static void swap(int[] nums, int a, int b){\n        int temp = nums[a];\n        nums[a] = nums[b];\n        nums[b] = temp;\n    }\n}\n</code></pre> <ol> <li>\u4f18\u5316(\u4e09\u8def\u5feb\u901f\u6392\u5e8f\uff0c\u57fa\u4e8e\u8377\u5170\u56fd\u65d7\u95ee\u9898)\uff1a</li> <li>\u601d\u8def\uff1a\u5c06\u6570\u7ec4\u5212\u5206\u4e3ax\u4e09\u4e2a\u90e8\u5206\u3002\u76f4\u63a5\u786e\u5b9a\u4e86=x\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u4e00\u6b21\u786e\u5b9a\u3002\u5728\u6709\u91cd\u590d\u503c\u6570\u636e\u4e0a\u8868\u73b0\u66f4\u597d\u3002 <li>\u65f6\u95f4\u590d\u6742\u5ea6:O(n*logn)\uff0c\u6700\u4f18\u4e3aO(n)\uff0c\u6700\u5dee\u60c5\u51b5O(n^2)</li> <li>\u5212\u5206\u6b65\u9aa4\uff1a<ol> <li>\u4f7f\u7528\u4e24\u4e2a\u53d8\u91cffirst\uff0clast\u8bb0\u5f55x\u7684\u66f4\u65b0\u7684\u6570\u7ec4\u4f4d\u7f6e <li>\u5982\u679cnums[i]&lt;x\uff0c\u5219\u8fdb\u884cswap(nums,i,first),\u5e76\u5c06first++,\u7136\u540ei++;</li> <li>\u5982\u679cnums[i]&gt;x\uff0c\u5219\u8fdb\u884cswap(nums,i,last),\u5e76\u5c06last--,\u4f46\u662fi\u4e0d\u53d8 \uff0c\u9700\u8981\u518d\u6b21\u8fdb\u884c\u8fdb\u884c\u5224\u65ad\u662f\u5426\u9700\u8981\u8fdb\u884c\u4ea4\u6362\u3002</li> <li>\u6574\u4f53\u5c31\u662f\u4ece\u5de6\u5f80\u53f3\uff0c\u6bcf\u4e00\u4e2a\u6570\u5b57\u4f9d\u6b21\u90fd\u662f\u7ecf\u8fc7\u68c0\u67e5\u7684\uff0c\u4ece\u540e\u9762\u4ea4\u6362\u7684\u6ca1\u6709check\u8fc7\uff0c\u6240\u4ee5i\u4e0d\u53d8\u3002</li> Text Only<pre><code>class Solution {\n    public int[] sortArray(int[] nums) {\n        quickSort(nums, 0, nums.length-1);\n        return nums;\n    }\n    public static void quickSort(int[] nums, int l, int r){\n        if(l&gt;=r) return;\n        int x = nums[l + (int)(Math.random()*(r-l+1))];\n        int[] bound = partition(nums, x,l,r);\n        int lmid = bound[0], rmid = bound[1];\n        quickSort(nums, l,lmid-1);\n        quickSort(nums, rmid+1,r);\n    }\n    //partition\u90e8\u5206\u662fO(n)\n    public static int[] partition(int[] nums, int x,int l, int r){\n        int first = l;\n        int last = r;\n        int i = l;\n        while(i&lt;=last){\n            if(nums[i] &lt; x){\n                swap(nums, first, i);\n                first++;\n                i++;\n            }else if(nums[i] &gt; x){\n                swap(nums, i, last);\n                last--;\n            }else{\n                i++;\n            }\n        }\n        return new int[]{first,last};\n    }\n    public static void swap(int[] nums, int a, int b){\n        int temp = nums[a];\n        nums[a] = nums[b];\n        nums[b] = temp;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_14","title":"\u968f\u673a\u9009\u62e9\u7b97\u6cd5","text":"<ol> <li> <p>\u539f\u7406\uff1a</p> </li> <li> <p>\u57fa\u4e8e\u968f\u673a\u5feb\u901f\u6392\u5e8f</p> </li> <li>\u5982\u679cpartition\u4e4b\u540e=x\u7684\u90e8\u5206\u662f[first,last]\uff0c\u8fd9\u4e00\u90e8\u5206\u662f\u6392\u5e8f\u597d\u7684\u3002\u5982\u679c\u8fd9\u4e00\u90e8\u5206\u4e0b\u6807\u5305\u542btarget\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u3002</li> <li>\u5982\u679c\u6ca1\u6709\u547d\u4e2d\uff0c\u53ef\u4ee5\u6839\u636e\u5927\u5c0f\u5173\u7cfb\u53ea\u8fdb\u884c\u4e00\u4fa7\u7684\u9012\u5f52\u67e5\u627e</li> <li>\u590d\u6742\u5ea6\uff1a</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6O(n)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6O(1)</li> <li>\u4f8b\u9898\uff1aleetcode215 \u7b2ck\u5927\u7684\u6570</li> <li>\u601d\u8def\uff1a\u6392\u5e8f\uff1aO(n*logn)\u3002\u968f\u673a\u9009\u62e9\uff1aO(n)</li> </ol> Text Only<pre><code>class Solution {\n    public int findKthLargest(int[] nums, int k) {\n        return randomSelect(nums, nums.length-k);\n    }\n    //nums\u6392\u5e8f\uff0c\u5728i\u4f4d\u7f6e\u4e0a\u7684\u6570\u662f\u4ec0\u4e48\n    public static int randomSelect(int[] nums,int i){\n        int l = 0, r = nums.length-1;\n        int ans = 0;\n        while(l&lt;=r){\n            int x = nums[l+(int)(Math.random()*(r-l+1))];\n            int[] bound = partition(nums, x, l, r);\n            int lmid = bound[0], rmid = bound[1];\n            if(i &lt; lmid){\n                r = lmid-1;\n            }else if( i &gt; rmid){\n                l = rmid+1;\n            }else{\n                ans = nums[i];\n                break;\n            }\n        }\n        return ans;\n    }\n    public static int[] partition(int[] nums, int x, int l, int r){\n        int first = l;\n        int last = r;\n        int i = l;\n        while(i&lt;=last){\n            if(nums[i] &lt; x){\n                swap(nums, first,i);\n                first++;\n                i++;\n            }else if(nums[i] &gt; x){\n                swap(nums,i,last);\n                last--;\n            }else{\n                i++;\n            }\n        }\n        return new int[]{first,last};\n    }\n    public static void swap(int[] nums, int l, int r){\n        int temp = nums[l];\n        nums[l] = nums[r];\n        nums[r] = temp;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_15","title":"\u5bf9\u6570\u5668\uff1a","text":"<p>\u573a\u666f\uff1a\u5bf9\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u4e0d\u591f\u7684\u573a\u666f\uff0c\u7528\u6765\u81ea\u6211\u9a8c\u8bc1</p> <p>\u57fa\u672c\u601d\u8def\uff1a\u5148\u5b9e\u73b0\u66b4\u529b\u89e3\uff0c\u518d\u5b9e\u73b0\u6700\u4f18\u89e3\uff0c\u7136\u540e\u751f\u6210\u968f\u673a\u6570\u636e\uff0c\u7136\u540e \u9a8c\u8bc1\u66b4\u529b\u89e3\u548c\u6700\u4f18\u89e3\u7684\u7ed3\u679c\u662f\u5426\u4e00\u81f4\uff0c\u8fd9\u5c31\u662f\u5bf9\u6570\u5668\u3002</p> <p>\u5bf9\u6570\u5668\u7684\u95e8\u69db\u5176\u5b9e\u662f\u6bd4\u8f83\u9ad8\u7684\uff0c\u56e0\u4e3a\u5f80\u5f80\u9700\u8981\u5728\u4e24\u79cd\u4e0d\u540c\u601d\u8def\u4e0b\u5b9e\u73b0\u529f\u80fd\u76f8\u540c\u7684\u4e24\u4e2a\u65b9\u6cd5\uff0c\u66b4\u529b\u4e00\u4e2a\u3001\u60f3\u8c61\u4e2d\u7684\u6700\u4f18\u89e3\u662f\u53e6\u4e00\u4e2a\u3002</p> <p>\u4ee5\u540e\u7684\u5f88\u591a\u9898\u76ee\u90fd\u4f1a\u7528\u5230\u5bf9\u6570\u5668\uff0c\u51e0\u4e4e\u53ef\u4ee5\u9a8c\u8bc1\u4efb\u4f55\u65b9\u6cd5\uff0c\u5c24\u5176\u5728\u9a8c\u8bc1\u8d2a\u5fc3\u3001\u89c2\u5bdf\u89c4\u5f8b\u65b9\u9762\u5f88\u6709\u7528</p> <p>\u5230\u65f6\u5019\u4f1a\u4e30\u5bcc\u5f88\u591a\u5bf9\u6570\u5668\u7684\u5b9e\u6218\u7528\u6cd5\uff0c\u8fd9\u91cc\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u6613\u61c2\u7684\u793a\u4f8b</p>"},{"location":"LANG/DS-leetcode/#_16","title":"\u4e8c\u5206\u641c\u7d22\uff1a","text":"<p>\ud83d\udc4b</p> <p>\u524d\u4e09\u79cd\u60c5\u51b5\u5fc5\u987b\u8981\u6570\u7ec4\u4f53\u73b0\u6709\u5e8f\u624d\u53ef\u4ee5\u4f7f\u7528</p>"},{"location":"LANG/DS-leetcode/#num-target","title":"\u60c5\u51b5\u4e00\uff1anum == target","text":"Text Only<pre><code>    public static boolean exist(int[] arr, int num) {\n        if (arr == null || arr.length == 0) {\n            return false;\n        }\n        int l = 0, r = arr.length - 1, m = 0;\n        while (l &lt;= r) {\n            m = (l + r) / 2;\n            if (arr[m] == num) {\n                return true;\n            } else if (arr[m] &gt; num) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return false;\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#num-target_1","title":"\u60c5\u51b5\u4e8c: num &gt;= target\u7684\u6700\u5de6\u8fb9\u4f4d\u7f6e","text":"Text Only<pre><code>    public static int findLeft(int[] arr, int num) {\n        int l = 0, r = arr.length - 1, m = 0;\n        int ans = -1;\n        while (l &lt;= r) {\n            // m = (l + r) / 2;\n            // m = l + (r - l) / 2;\n            m = l + ((r - l) &gt;&gt; 1);\n\n            if (arr[m] &gt;= num) {\n                ans = m;\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return ans;\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#num-target_2","title":"\u60c5\u51b5\u4e09\uff1a num &lt;= target\u7684\u6700\u53f3\u8fb9\u4f4d\u7f6e","text":"Text Only<pre><code>    public static int findRight(int[] arr, int num) {\n        int l = 0, r = arr.length - 1, m = 0;\n        int ans = -1;\n        while (l &lt;= r) {\n            //\u9632\u6b62\u7cbe\u5ea6\u6ea2\u51fa\n            m = l + ((r - l) &gt;&gt; 1); \n            if (arr[m] &lt;= num) {\n                ans = m;\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return ans;\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_17","title":"\u60c5\u51b5\u56db\uff1a \u5cf0\u503c\u95ee\u9898\uff1a","text":"<p>\u601d\u8def\uff1a</p> <ol> <li>\u9a8c\u8bc10\u4f4d\u7f6e\u548cn-1\u4f4d\u7f6e\u7684\u6570\uff0c\u5982\u679c\u6709\u7b26\u5408\u5cf0\u503c\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u8fd4\u56de</li> <li>\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u5f00\u5934\u662f\u4e0a\u5347\u7684\uff0c\u7ed3\u5c3e\u662f\u4e0b\u964d\u7684\uff0c\u4e00\u5b9a\u5b58\u5728\u8f6c\u6298\u70b9\uff0c\u4e5f\u5c31\u662f\u5cf0\u503c\u3002</li> <li>\u4e8c\u5206\u67e5\u627e\u5230\u4e2d\u70b9\uff0c\u770b\u4e0e\u5de6\u53f3\u8fb9\u754c\u6784\u6210\u7684\u533a\u95f4\u5982\u679c\u662f\u4e0a\u5347+\u4e0b\u964d\u7ec4\u5408\uff0c\u90a3\u4e48\u5cf0\u503c\u5fc5\u7136\u5728\u533a\u95f4\u5185\uff0c\u5728\u533a\u95f4\u5185\u4e8c\u5206\u5373\u53ef\u3002</li> </ol> <p>\u793a\u4f8b\uff1a</p> Text Only<pre><code>// \u5cf0\u503c\u5143\u7d20\u662f\u6307\u5176\u503c\u4e25\u683c\u5927\u4e8e\u5de6\u53f3\u76f8\u90bb\u503c\u7684\u5143\u7d20\n// \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums\uff0c\u5df2\u77e5\u4efb\u4f55\u4e24\u4e2a\u76f8\u90bb\u7684\u503c\u90fd\u4e0d\u76f8\u7b49\n// \u627e\u5230\u5cf0\u503c\u5143\u7d20\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\n// \u6570\u7ec4\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u5cf0\u503c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56de \u4efb\u4f55\u4e00\u4e2a\u5cf0\u503c \u6240\u5728\u4f4d\u7f6e\u5373\u53ef\u3002\n// \u4f60\u53ef\u4ee5\u5047\u8bbe nums[-1] = nums[n] = \u65e0\u7a77\u5c0f\n// \u4f60\u5fc5\u987b\u5b9e\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(log n) \u7684\u7b97\u6cd5\u6765\u89e3\u51b3\u6b64\u95ee\u9898\u3002\npublic class Code04_FindPeakElement {\n\n    // \u6d4b\u8bd5\u94fe\u63a5 : https://leetcode.cn/problems/find-peak-element/\n    class Solution {\n\n        public static int findPeakElement(int[] arr) {\n            int n = arr.length;\n            if (arr.length == 1) {\n                return 0;\n            }\n            if (arr[0] &gt; arr[1]) {\n                return 0;\n            }\n            if (arr[n - 1] &gt; arr[n - 2]) {\n                return n - 1;\n            }\n            int l = 1, r = n - 2, m = 0, ans = -1;\n            while (l &lt;= r) {\n                m = (l + r) / 2;\n                if (arr[m - 1] &gt; arr[m]) {\n                    r = m - 1;\n                } else if (arr[m] &lt; arr[m + 1]) {\n                    l = m + 1;\n                } else {\n                    ans = m;\n                    break;\n                }\n            }\n            return ans;\n        }\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_18","title":"\u4e8c\u5206\u7b54\u6848\u6cd5\uff1a","text":""},{"location":"LANG/DS-leetcode/#_19","title":"\u6b65\u9aa4","text":"<ol> <li>\u4f30\u8ba1\u6700\u7ec8\u7b54\u6848\u53ef\u80fd\u7684\u8303\u56f4\u662f\u4ec0\u4e48</li> <li>\u5206\u6790\u95ee\u9898\u548c\u7ed9\u5b9a\u6761\u4ef6\u4e4b\u95f4\u7684\u5355\u8c03\u6027</li> <li>\u5efa\u7acb\u4e00\u4e2acheck\u51fd\u6570\uff0c\u5728\u7b54\u6848\u56fa\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u5224\u65ad\u7ed9\u5b9a\u7684\u6761\u4ef6\u662f\u5426\u8fbe\u6807(\u4e5f\u5c31\u662f\u7b54\u6848\u9700\u8981\u6ee1\u8db3\u7684\u6027\u8d28)</li> <li>\u4e0d\u65ad\u8c03\u6574\u8303\u56f4\uff0c\u76f4\u5230\u4e8c\u5206\u7ed3\u675f\u627e\u5230\u7b54\u6848</li> </ol>"},{"location":"LANG/DS-leetcode/#_20","title":"\u4f8b\u9898","text":"<ol> <li>leetcode 875</li> </ol> <p>\u73c2\u73c2\u559c\u6b22\u5403\u9999\u8549\u3002\u8fd9\u91cc\u6709 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;n&lt;/span&gt;&lt;/span&gt;</code> \u5806\u9999\u8549\uff0c\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;</code> \u5806\u4e2d\u6709 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;piles[i]&lt;/span&gt;&lt;/span&gt;</code> \u6839\u9999\u8549\u3002\u8b66\u536b\u5df2\u7ecf\u79bb\u5f00\u4e86\uff0c\u5c06\u5728 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;h&lt;/span&gt;&lt;/span&gt;</code> \u5c0f\u65f6\u540e\u56de\u6765\u3002</p> <p>\u73c2\u73c2\u53ef\u4ee5\u51b3\u5b9a\u5979\u5403\u9999\u8549\u7684\u901f\u5ea6 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \uff08\u5355\u4f4d\uff1a\u6839/\u5c0f\u65f6\uff09\u3002\u6bcf\u4e2a\u5c0f\u65f6\uff0c\u5979\u5c06\u4f1a\u9009\u62e9\u4e00\u5806\u9999\u8549\uff0c\u4ece\u4e2d\u5403\u6389 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \u6839\u3002\u5982\u679c\u8fd9\u5806\u9999\u8549\u5c11\u4e8e <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \u6839\uff0c\u5979\u5c06\u5403\u6389\u8fd9\u5806\u7684\u6240\u6709\u9999\u8549\uff0c\u7136\u540e\u8fd9\u4e00\u5c0f\u65f6\u5185\u4e0d\u4f1a\u518d\u5403\u66f4\u591a\u7684\u9999\u8549\u3002  \u73c2\u73c2\u559c\u6b22\u6162\u6162\u5403\uff0c\u4f46\u4ecd\u7136\u60f3\u5728\u8b66\u536b\u56de\u6765\u524d\u5403\u6389\u6240\u6709\u7684\u9999\u8549\u3002\u8fd4\u56de\u5979\u53ef\u4ee5\u5728 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;h&lt;/span&gt;&lt;/span&gt;</code> \u5c0f\u65f6\u5185\u5403\u6389\u6240\u6709\u9999\u8549\u7684\u6700\u5c0f\u901f\u5ea6 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code>\uff08<code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \u4e3a\u6574\u6570\uff09\u3002</p> <ul> <li>\u601d\u8def\uff1a\u8981\u6c42\u7684\u662f\u6700\u5c0f\u901f\u5ea6\uff0c\u601d\u8003\u901f\u5ea6\u7684\u8303\u56f4[l,r]\u3002</li> <li>r\u6700\u5927\u53ea\u9700\u8981\u5c31\u53ea\u7528\u6570\u7ec4\u4e2d\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u518d\u5927\u4e86\u5c31\u6ca1\u6536\u76ca\uff0c\u548cr\u7684\u6548\u679c\u4e00\u6837\u3002</li> <li>l\u6700\u5c0f\u7684\u60c5\u51b5\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5224\u65ad\u3002</li> <li>\u5355\u8c03\u6027\uff1a\u5982\u679c\u901f\u5ea6\u589e\u52a0\uff0c\u5219\u6240\u7528\u7684\u8017\u65f6\u53ea\u4f1a\u51cf\u5c0f\u6216\u8005\u4e0d\u53d8\u3002</li> <li>\u63a5\u7740\u4e8c\u5206\uff1a\u5728\u901f\u5ea6\u6570\u7ec4\u4e2d\u8fdb\u884c\u4e8c\u5206\uff0c\u4e0d\u65ad\u7f29\u5c0f\u8303\u56f4\u3002\u5982\u679cx\u901f\u5ea6\u6ee1\u8db3\uff0c\u5219\u53ea\u7528\u5728[l,x-1]\u8303\u56f4\u5185\u7ee7\u7eed\u4e8c\u5206\u5c31\u53ef\u4ee5\u3002</li> </ul> <p>\ud83d\udd14</p> <p>\u8fd9\u91cc\u7684\u6574\u4f53\u6a21\u578b\u5c31\u662f\u6ee1\u8db3\u6027\u8d28\u7684\u6700\u5de6\u4f4d\u7f6e\uff0c\u662f\u4e0a\u9762\u7684\u4e8c\u5206\u641c\u7d22\u60c5\u51b5\u4e8c\u7684\u63a8\u5e7f\u3002</p> Text Only<pre><code>class Solution {\n    //\u533a\u95f4\u957f\u5ea610^9,\u5982\u679c\u4f7f\u7528O(n)\u5fc5\u7136\u8d85\u65f6\uff0c\u9700\u8981\u4e8c\u5206\n    public int minEatingSpeed(int[] piles, int h) {\n        int l = 1, r = 0;\n        for(int pile : piles){\n            r = Math.max(r,pile);\n        }   \n        int ans = Integer.MIN_VALUE;\n        while(l&lt;=r){\n            int mid = l + (r-l)/2;\n            if(check(piles,mid,h)){\n                ans = mid;\n                r = mid-1;\n            }else{\n                l = mid+1;\n            }\n        }\n        return ans;\n    }\n    public static boolean check(int[]piles, int mid, int h){\n        //\u6ce8\u610f\u6570\u636e\u91cf\u5230\u4e8610^9\u4e86\u3002int\u7c7b\u578b\u8303\u56f4\u5230[-2\u4ebf\uff0c2\u4ebf]\uff0c\u6362\u4e3along\u66f4\u4fdd\u9669\n        long cost = 0L;\n        for(int pile : piles){\n            cost += Math.ceilDiv(pile, mid);\n        }\n        return cost &lt;= h;\n    }\n}\n</code></pre> <ol> <li>leetcode 410\u753b\u5320\u95ee\u9898</li> </ol> <p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;nums&lt;/span&gt;&lt;/span&gt;</code> \u548c\u4e00\u4e2a\u6574\u6570 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6570\u7ec4\u5206\u6210 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \u4e2a\u975e\u7a7a\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u3002</p> <p>\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u4f7f\u5f97\u8fd9 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \u4e2a\u5b50\u6570\u7ec4\u5404\u81ea\u548c\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002</p> <p>\u62bd\u8c61\u4e3a\u753b\u5320\u95ee\u9898\u5c31\u662f\u6bcf\u4e2a\u753b\u5bb6\u8d1f\u8d23\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u5e76\u884c\u8fdb\u884c\u753b\u4f5c\uff0c\u6700\u540e\u7ed3\u675f\u7684\u65f6\u95f4\u5c31\u662f\u753b\u5bb6\u4e2d\u8017\u65f6\u6700\u4e45\u7684\u65f6\u95f4\u3002\u6c42\u6700\u7ec8\u4efb\u52a1\u7ed3\u675f\u7684\u6700\u5c0f\u65f6\u95f4\u3002</p> <ol> <li>\u601d\u8def\uff1a</li> <li>s\u95ee\u9898\uff1a\u6bcf\u90e8\u5206\u7684\u7d2f\u52a0\u548c\u6c42\u51fa\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002</li> <li>[l,r]\u8ba1\u7b97\uff1a\u7b54\u6848\u7684\u53ef\u80fd\u503c\u7684\u6700\u5c0f\u503c\u662f0\uff0c\u6700\u5927\u503c\u53ef\u4ee5\u5b9a\u7684\u6bd4\u8f83\u7c97\uff0c\u53ef\u4ee5\u5047\u8bbe\u4e3a\u6574\u4e2a\u6570\u7ec4\u7684\u7d2f\u52a0\u548c\u3002</li> <li>check\u51fd\u6570\uff1a\u5728\u6bcf\u4e2a\u90e8\u5206\u7684\u503c\u4e0d\u8d85\u8fc7mid\u7684\u60c5\u51b5\u4e0b\uff0c\u5219k\u6700\u5c0f\u503c\u4e3a\u591a\u5c11\u5c31\u53ef\u4ee5\u505a\u5230\u3002</li> <li>\u5355\u8c03\u6027\uff1a<ol> <li>\u6bcf\u4e00\u90e8\u5206limit\u7684\u589e\u52a0\uff0c\u5bf9\u5e94\u7740k\u7684\u6700\u5c0f\u503c\u51cf\u5c0f\u3002\u6211\u4eec\u8981\u8003\u8651\u7684\u80af\u5b9a\u662f\u6700\u503c\u60c5\u51b5\uff0c\u800c\u4e0d\u662f\u4e2d\u95f4\u503c\u7684\u60c5\u51b5\u3002</li> <li>\u5982\u679c\u6bcf\u4e00\u90e8\u5206\u8981\u6c42\u7684\u7ed3\u679c\u7684\u6700\u5927\u503climit\u589e\u52a0\uff0c\u5219\u5bf9\u5e94\u7684k\u503c\u7684\u6700\u5c0f\u503c\u5fc5\u7136\u51cf\u5c0f\u3002</li> </ol> </li> </ol> <p>\u5219\u5982\u679c\u76ee\u524d\u7684mid\u5bf9\u5e94\u7684k\u7684\u6700\u5c0f\u503c\u6ee1\u8db3\u6027\u8d28(\u81f3\u591ak\u6bb5)\uff0c\u5219\u53ef\u4ee5\u5411mid\u51cf\u5c0f\u7684\u65b9\u5411\u7f29\u5c0f\u8303\u56f4\u7ee7\u7eed\u4e8c\u5206\u3002</p> <p>\u5426\u5219\u9700\u8981\u5411mid\u589e\u52a0\u7684\u65b9\u5411\u7f29\u5c0f\u3002</p> <p>\ud83d\udca1</p> <p>\u9898\u76ee\u8981\u6c42\u5212\u5206\u6210 k \u6bb5\uff0c\u4f46\u5176\u5b9e\u5982\u679c\u80fd\u5212\u5206\u6210\u5c0f\u4e8e k \u6bb5\uff0c\u4e5f\u53ef\u4ee5\u5212\u5206\u6210 k \u6bb5\u3002\u6bd4\u5982\u5212\u5206\u6210 k\u22121 \u6bb5\uff0c\u90a3\u4e48\u628a\u5176\u4e2d\u7684\u4e00\u4e2a\u957f\u5ea6\u81f3\u5c11\u4e3a 2 \u7684\u6bb5\u5206\u6210\u4e24\u6bb5\uff0c\u8fd9\u4e24\u6bb5\u7684\u5143\u7d20\u548c\u90fd\u6bd4\u539f\u6765\u7684\u4e00\u6bb5\u5c0f\uff0c\u4e5f\u6ee1\u8db3\u8981\u6c42\u3002\u6240\u4ee5\u9898\u76ee\u76f8\u5f53\u4e8e\uff1a\u628a\u6570\u7ec4\u5212\u5206\u6210\u81f3\u591a k \u6bb5\uff0c\u5206\u522b\u8ba1\u7b97\u6bcf\u4e00\u6bb5\u7684\u5143\u7d20\u548c\uff0c\u6700\u5c0f\u5316\u5143\u7d20\u548c\u7684\u6700\u5927\u503c</p> <p>\u9047\u5230\u6700\u5927\u5316\u6700\u5c0f\u503c\u6216\u6700\u5c0f\u5316\u6700\u5927\u503c\uff0c\u5c31\u662f\u4e8c\u5206\u9898\u578b\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6O(n * logsum)\u3002</p> Text Only<pre><code>class Solution {\n    public int splitArray(int[] nums, int k) {\n        int sum = 0;\n        for(int item : nums){\n            sum += item;\n        }\n        int l = 0, r = sum;\n        int ans = 0;\n        while(l&lt;=r){\n            int mid = l + (r-l)/2;\n            if(check(nums,mid,k)){\n                ans = mid;\n                r = mid-1;\n            }else{\n                l = mid+1;\n            }\n        }\n        return ans;\n    }\n    public static boolean check(int[] nums, int limit, int k){\n        int cnt = 1;\n        int cur = 0;\n        for(int item : nums){\n            if(item &gt; limit) return false;\n            if(cur + item &gt; limit){\n                cnt++;\n                cur = item;\n            }else{\n                cur += item;\n            }\n        }\n        return cnt&lt;=k;\n    }\n}\n</code></pre> <ol> <li>leetcode 719 \u7b2ck\u5c0f\u7684\u6570\u5bf9\u8ddd\u79bb</li> <li>\u9898\u76ee\uff1a\u6570\u5bf9 <code>&lt;span&gt;(a,b)&lt;/span&gt;</code> \u7531\u6574\u6570 <code>&lt;span&gt;a&lt;/span&gt;</code> \u548c <code>&lt;span&gt;b&lt;/span&gt;</code> \u7ec4\u6210\uff0c\u5176\u6570\u5bf9\u8ddd\u79bb\u5b9a\u4e49\u4e3a <code>&lt;span&gt;a&lt;/span&gt;</code> \u548c <code>&lt;span&gt;b&lt;/span&gt;</code> \u7684\u7edd\u5bf9\u5dee\u503c\u3002\u8fd4\u56de\u7b2ck\u5c0f\u7684\u6570\u5bf9\u8ddd\u79bb\u3002</li> <li>\u601d\u8def\uff1a<ol> <li>\u66b4\u529b\uff1a\u5b58\u50a8\u6240\u6709\u7684\u6570\u5bf9\uff0c\u7136\u540e\u4f7f\u7528\u5feb\u901f\u9009\u62e9\u7b97\u6cd5\u8fdb\u884c\u9009\u62e9\u7b2ck\u5c0f\u3002\u7a7a\u95f4\u4f1a\u88ab\u5361\u3002</li> <li>\u4e8c\u5206+\u7a7a\u95f4\u4f18\u5316\uff1a<ol> <li>\u6570\u7ec4\uff1a\u4efb\u610f\u4e24\u4e2a\u6570\u7684\u8ddd\u79bb</li> <li>\u8303\u56f4[l,r]: l=0, r = max-min</li> <li>check:\u8ddd\u79bb&lt;=mid\u7684\u6570\u91cf\u6709\u51e0\u4e2a</li> <li>\u5355\u8c03\u6027\uff1a\u8ddd\u79bb\u589e\u52a0\uff0c\u5219\u6ee1\u8db3\u7684\u6570\u91cf\u5fc5\u7136\u589e\u52a0\u3002\u56e0\u4e3a\u662f\u6c42&lt;=\u67d0\u4e2a\u8ddd\u79bb\u7684\u6570\u91cf\u3002 \u5982\u679c\u5dee\u503c&lt;=mid\uff0c\u6570\u91cf\u4e0d\u8db3k\u4e2a\uff0c\u5219\u9700\u8981\u5411[mid+1,r]\u641c\u7d22\u3002\u5426\u5219\u5982\u679c\u6570\u91cf&gt;=k\u4e2a\uff0c\u5219\u8bf4\u660e&gt;=mid\u7684\u8303\u56f4\u5747\u6ee1\u8db3\uff0c\u5219\u5411[l,mid-1]\u8303\u56f4\u641c\u7d22\u3002\u5219\u6700\u540e\u7ed3\u675f\u5c31\u662fdis&lt;=mid \u521a\u597d\u4e3ak\u4e2a\u7684\u8ddd\u79bb\u3002</li> </ol> </li> </ol> </li> </ol>"},{"location":"LANG/DS-leetcode/#_21","title":"\u94fe\u8868","text":""},{"location":"LANG/DS-leetcode/#_22","title":"\u6309\u503c\u4f20\u9012\u548c\u6309\u5f15\u7528\u4f20\u9012\uff1a","text":"<p>int ,byte,short,long,char,float double,boolean \u4ee5\u53caString\u662f\u6309\u503c\u4f20\u9012</p> <p>\u5176\u4ed6\u662f\u6309\u7167\u5f15\u7528\u4f20\u9012\uff0c\u6bd4\u5982\u6240\u6709\u7684\u5f15\u7528\u7c7b\u578b(\u6570\u7ec4\uff0c\u7c7b\uff0c\u7b49)</p>"},{"location":"LANG/DS-leetcode/#_23","title":"\u5355\u94fe\u8868\u7ffb\u8f6c\uff1a","text":"<p>\u4e09\u6b65\u66f2\uff1a\u5bf9\u4e8e\u5f53\u524d\u8282\u70b9cur\uff0c</p> <ol> <li>\u4fdd\u5b58cur.next\u7684\u4f4d\u7f6e</li> <li>\u6539\u53d8\u6307\u9488\u4e5f\u5c31\u662fnext\u6307\u5411\uff0c\u6307\u5411pre</li> <li>pre\u5411\u540e\u79fb\u52a8</li> </ol> Text Only<pre><code>//\u5355\u94fe\u8868\u7ffb\u8f6c\uff1a\n        public static ListNode reverseList(ListNode head) {\n            ListNode pre = null;\n            ListNode next = null;\n            while (head != null) {\n                next = head.next;\n//head.next = pre \u6700\u5f00\u59cb\u8868\u793a\u7684\u662f\u8ba9head\u6307\u5411null\n                head.next = pre;\n                pre = head;\n//head\u968f\u7740\u6bcf\u4e00\u6b65\u5f80\u540e\u79fb\u52a8\n                head = next;\n            }\n            return pre;\n        }\n//\u4e5f\u5c31\u662f\u6709pre = null,next = null;\u7136\u540e\u7684\u8bdd\u8ba9\u4e24\u8005\u540c\u65f6\u5e73\u79fb\u5230head\u548chead.next\n</code></pre>"},{"location":"LANG/DS-leetcode/#_24","title":"\u53cc\u94fe\u8868\u7ffb\u8f6c\uff1a","text":"Text Only<pre><code>    public static class DoubleListNode {\n        public int value;\n        public DoubleListNode last; //\u4e0a\u4e00\u4e2a\n        public DoubleListNode next; //\u4e0b\u4e00\u4e2a\n\n        public DoubleListNode(int v) {\n            value = v;\n        }\n    }\n\n    public static DoubleListNode reverseDoubleList(DoubleListNode head) {\n        DoubleListNode pre = null;\n        DoubleListNode next = null;\n        while (head != null) {\n            next = head.next;\n            head.next = pre;\n            head.last = next;\n            pre = head;\n\n            head = next;\n        }\n        return pre;\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_25","title":"\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868\uff1a","text":"<p>\u4e00\u5171\u4e09\u4e2a\u53d8\u91cf\uff1a</p> <ol> <li>pre\u6307\u5411\u7684\u662f\u5f53\u524d\u6700\u65b0\u7684\u6392\u597d\u7684\u8282\u70b9\u3002</li> <li>c1\u6307\u5411\u7b2c\u4e00\u4e2a\u7b49\u5f85\u6392\u5e8f\u7684\u94fe\u8868\u5934</li> <li>c2\u6307\u5411\u7b2c\u4e8c\u4e2a\u7b49\u5f85\u6392\u5e8f\u7684\u94fe\u8868\u5934</li> </ol> Text Only<pre><code>public static ListNode mergeTwoLists(ListNode head1, ListNode head2) {\n            if (head1 == null || head2 == null) {\n                return head1 == null ? head2 : head1;\n            }\n            ListNode head = head1.val &lt;= head2.val ? head1 : head2;\n            ListNode cur1 = head.next;\n            ListNode cur2 = head == head1 ? head2 : head1;\n            ListNode pre = head;\n            while (cur1 != null &amp;&amp; cur2 != null) {\n                if (cur1.val &lt;= cur2.val) {\n                    pre.next = cur1;\n                    cur1 = cur1.next;\n                } else {\n                    pre.next = cur2;\n                    cur2 = cur2.next;\n                }\n                pre = pre.next;\n            }\n            pre.next = cur1 != null ? cur1 : cur2;\n            return head;\n        }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_26","title":"\u94fe\u8868\u76f8\u52a0\uff1a","text":"<p>\u5176\u5b9e\u5c31\u662f\u9ad8\u7cbe\u5ea6\u5927\u6570\u76f8\u52a0\uff0c\u662f\u4e00\u9053\u6a21\u62df</p> <p>\u6ce8\u610f\u7559\u5728\u672c\u4f4d\u7684\u6570\u5b57\u662fsum % 10,\u800c\u8fdb\u4f4d\u7684\u662fcarry = sum / 10;</p> <p>\u6700\u540e\u7684\u8fdb\u4f4d\u7531\u4e8e\u90fd\u65f6\u7a7a\u503c\u5df2\u7ecf\u9000\u51fa\u5faa\u73af\u4e86\u3002\u6240\u4ee5\u9700\u8981\u7279\u5224\u3002</p> Text Only<pre><code>public static ListNode addTwoNumbers(ListNode h1, ListNode h2) {\n            ListNode ans = null, cur = null;\n            int carry = 0;\n            for (int sum, val; // \u58f0\u660e\u53d8\u91cf\n                    h1 != null || h2 != null; // \u7ec8\u6b62\u6761\u4ef6\n                    h1 = h1 == null ? null : h1.next, // \u6bcf\u4e00\u6b65h1\u7684\u8df3\u8f6c\n                    h2 = h2 == null ? null : h2.next // \u6bcf\u4e00\u6b65h2\u7684\u8df3\u8f6c\n                    ) {\n\n                sum = (h1 == null ? 0 : h1.val)\n                        + (h2 == null ? 0 : h2.val)\n                        + carry;\n\n                val = sum % 10;\n                carry = sum / 10;\n                if (ans == null) {\n                    ans = new ListNode(val);\n                    cur = ans;\n                } else {\n                    cur.next = new ListNode(val);\n                    cur = cur.next;\n                }\n            }\n            if (carry == 1) {\n                cur.next = new ListNode(1);\n            }\n            return ans;\n        }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_27","title":"\u94fe\u8868\u5212\u5206\uff1a","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9 head \u548c\u4e00\u4e2a\u7279\u5b9a\u503c x</p> <p>\u8bf7\u4f60\u5bf9\u94fe\u8868\u8fdb\u884c\u5206\u9694\uff0c\u4f7f\u5f97\u6240\u6709 \u5c0f\u4e8e x \u7684\u8282\u70b9\u90fd\u51fa\u73b0\u5728 \u5927\u4e8e\u6216\u7b49\u4e8e x \u7684\u8282\u70b9\u4e4b\u524d\u3002</p> <p>\u4f60\u5e94\u5f53 \u4fdd\u7559 \u4e24\u4e2a\u5206\u533a\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u521d\u59cb\u76f8\u5bf9\u4f4d\u7f6e</p> <p>\u6838\u5fc3\u601d\u8def\uff1a\u5f00\u4e24\u4e2a\u94fe\u8868\uff0c\u4e00\u4e2a\u4fdd\u5b58\u5c0f\u7684\u90e8\u5206\uff0c\u4e00\u4e2a\u4fdd\u5b58\u5927\u7684\u90e8\u5206\uff0c\u6700\u540e\u524d\u4e00\u90e8\u5206\u7684next\u6307\u5411\u540e\u4e00\u90e8\u5206\u4f60\u7684\u5934\u3002\u4f7f\u7528\u4e86\u4e00\u4e2anext\u53d8\u91cf\u6765\u4fdd\u5b58\u904d\u5386\u5230\u8282\u70b9\u7684next\u6307\u9488\u3002</p> Text Only<pre><code>public static ListNode partition(ListNode head, int x) {\n            ListNode leftHead = null, leftTail = null; // &lt; x\u7684\u533a\u57df\n            ListNode rightHead = null, rightTail = null; // &gt;=x\u7684\u533a\u57df\n            ListNode next = null;\n            while (head != null) {\n                next = head.next;\n                head.next = null;\n                if (head.val &lt; x) {\n                    if (leftHead == null) {\n                        leftHead = head;\n                    } else {\n                        leftTail.next = head;\n                    }\n                    leftTail = head;\n                } else {\n                    if (rightHead == null) {\n                        rightHead = head;\n                    } else {\n                        rightTail.next = head;\n                    }\n                    rightTail = head;\n                }\n                head = next;\n            }\n            if (leftHead == null) {\n                return rightHead;\n            }\n            // &lt; x\u7684\u533a\u57df\u6709\u5185\u5bb9\uff01\n            leftTail.next = rightHead;\n            return leftHead;\n        }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_28","title":"***\u94fe\u8868\u7684\u9ad8\u9891\u9898\u76ee\u603b\u7ed3","text":"<ol> <li> <p>\u6ce8\u610f\u70b9\uff1a</p> </li> <li> <p>\u4e00\u822c\u901a\u8fc7\u6838\u5fc3\u4ee3\u7801\u6a21\u5f0f\u8fdb\u884c</p> </li> <li>\u5982\u679c\u7a7a\u95f4\u4e0d\u4e25\u683c\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5bb9\u5668\u8fdb\u884c\u89e3\u51b3\u3002</li> <li>\u5982\u679c\u7a7a\u95f4\u4e25\u683c\uff0c\u9700\u8981\u4f18\u5316\u7a7a\u95f4\uff0c\u6bd4\u5982O(1)\u3002</li> <li>\u6700\u5e38\u89c1\u6280\u5de7\uff1a\u5feb\u6162\u6307\u9488</li> <li>\u6838\u5fc3\u8003\u5bdf\u70b9\uff1acoding\u80fd\u529b</li> <li>\u9898\u76ee\uff1a</li> <li>\u8fd4\u56de\u4e24\u4e2a\u65e0\u73af\u94fe\u8868\u76f8\u4ea4\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9 </li> <li>\u9898\u76ee\uff1a\u7ed9\u5b9a\u4e24\u4e2a\u94fe\u8868\uff0c\u5224\u65ad\u7ed3\u6784\u4e0a\u662f\u4e0d\u662f\u6709\u76f8\u4ea4\u3002</li> <li>\u601d\u8def\uff1a</li> <li>\u53ea\u5224\u65ad\u662f\u5426\u76f8\u4ea4\uff1a\u56e0\u4e3a\u65e0\u73af\uff0c\u6240\u4ee5\u7ed3\u5c3e\u5fc5\u7136\u662f\u76f8\u4ea4\u7684(\u540c\u4e00\u4e2a\u8282\u70b9).\u5355\u94fe\u8868\u53ea\u6709\u4e00\u4e2anext\u6307\u9488\uff0c\u4e5f\u4e0d\u4f1a\u6709\u4eba\u5b57\u5f62\u7684\u7ed3\u6784\u51fa\u73b0\u3002</li> <li>\u5224\u65ad\u76f8\u4ea4\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\uff1a\u5982\u679c\u957f\u5ea6\u5206\u522b\u662fa,b \u5e76\u4e14(b&gt;a)\u3002\u5219\u53ef\u4ee5\u4f7fb\u5148\u8d70b-a\u6b65\u3002\u7136\u540e\u4e24\u4e2a\u94fe\u8868\u540c\u6b65\u8d70\uff0c\u5fc5\u7136\u4f1a\u540c\u65f6\u8d70\u5230\u76f8\u4ea4\u7684\u4f4d\u7f6e\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528HashSet\u6765\u8fdb\u884c\u5bf9\u8c61\u662f\u5426\u76f8\u7b49\u7684\u5224\u65ad\uff0c\u65b9\u6cd5\u662f\u5148\u5c06\u4e00\u4e2a\u7ed3\u70b9\u5168\u90e8\u5b58\u5165HashSet\u4e2d\u3002\u5728\u904d\u5386\u53e6\u4e00\u4e2a\u7684\u65f6\u5019\u8fdb\u884c\u5224\u65ad\u3002</li> <li>k\u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868</li> <li>\u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868\uff0c\u6bcfk\u4e2a\u8282\u70b9\u4e00\u7ec4\u8fdb\u884c\u8c03\u6574\u3002</li> <li>\u601d\u8def\uff1a</li> <li>\u4f7f\u7528\u5bb9\u5668\uff1a\u5c06\u94fe\u8868\u6240\u6709\u8282\u70b9\u7684\u503c\u653e\u5165\u6570\u7ec4\u4e2d\uff0c\u7136\u540e\u5bf9\u6570\u7ec4\u8fdb\u884c\u6bcfk\u4e2a\u7ffb\u8f6c\uff0c\u6700\u540e\u518d\u6784\u5efa\u94fe\u8868\u3002</li> <li>\u4e0d\u4f7f\u7528\u5bb9\u5668\uff1a\u5047\u8bbe\u94fe\u8868\u5934\u90e8\u4e3aa-&gt;b-&gt;c-&gt;d...\uff0c\u540c\u65f6k=3\u5219\u8fc7\u7a0b\uff1a\u5148\u8bb0\u4f4f\u5934c\uff0c\u53cd\u8f6c\u540e\u8bb0\u4f4f\u5c3ea,\u5e76\u5c06a-&gt;d\u3002\u6bcf\u6b21\u90fd\u8981\u8bb0\u4f4f\u4e0a\u4e00\u6b21\u7684\u5c3e\uff0c\u56e0\u4e3a\u4e0a\u4e00\u4e2a\u7684\u5c3e\u4f1a\u6307\u5411\u4e0b\u4e00\u4e2a\u65b0\u8c03\u6574\u7684\u5934\u3002</li> </ol> <p></p> <ol> <li> <p>\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\u7684\u94fe\u8868</p> </li> <li> <p>\u9898\u76ee\u80cc\u666f\uff1a\u539f\u6765\u7684\u5355\u94fe\u8868\u8282\u70b9\u7684\u6307\u9488\u591a\u4e86\u4e00\u4e2arandom\u6307\u9488\uff0c\u53ef\u4ee5\u6307\u5411\u8be5\u94fe\u8868\u7684\u4efb\u4f55\u8282\u70b9\u6216\u8005null\u3002\u8981\u6c42\u5bf9\u8be5\u94fe\u8868\u8fdb\u884c\u6df1\u62f7\u8d1d\u3002</p> </li> <li>\u601d\u8def\uff1a<ol> <li>\u4f7f\u7528\u5bb9\u5668\uff1a\u4f7f\u7528map\u7ed3\u6784\u3002\u5bf9\u539f\u6765\u7684\u94fe\u8868\u7684\u8282\u70b9\u4f5c\u4e3akey\uff0c\u65b0\u6784\u9020\u7684\u8282\u70b9\u4f5c\u4e3avalue\u3002\u7136\u540e\u904d\u5386map\u5728\uff0c\u5bf9\u4e8e\u4e00\u4e2ak-v\u6765\u8bf4\uff0c\u65b0\u6784\u9020\u8282\u70b9\u7684next\u548crandom\u6307\u9488\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u627ekey\u6765\u786e\u5b9a\u3002\u5229\u7528map\u5bf9v\u7684\u6307\u9488\u57df\u8d4b\u503c\u4e0a\u5bf9\u5e94\u7684\u65b0\u6784\u9020\u7684\u8282\u70b9\u5730\u5740\uff0c\u4ece\u800c\u8fbe\u5230\u6df1\u62f7\u8d1d\u3002</li> </ol> </li> <li>\u5224\u65ad\u94fe\u8868\u662f\u5426\u662f\u56de\u6587\u7ed3\u6784</li> <li>\u56de\u6587\u94fe\u8868\u793a\u4f8b\uff1a30-&gt;100-&gt;30-&gt;null</li> <li>\u601d\u8def\uff1a</li> <li>\u4f7f\u7528\u6808\u8fdb\u884c\u5224\u65ad\uff1a\u73b0\u5c06\u8282\u70b9\u5168\u90e8\u5165\u6808\uff0c\u540c\u65f6\u5f39\u51fa\u8282\u70b9\u548c\u904d\u5386\u94fe\u8868\uff0c\u4e00\u4e00\u5224\u65ad\u3002</li> <li>\u4f7f\u7528\u5feb\u6162\u6307\u9488\uff1a</li> <li>\u8fd4\u56de\u4e00\u4e2a\u94fe\u8868\u7684\u5165\u73af\u8282\u70b9</li> <li>\u601d\u8def\uff1a</li> <li>\u4f7f\u7528\u5bb9\u5668\uff1a\u4f7f\u7528HashSet\u3002\u53d8\u91cf\u94fe\u8868\uff0c\u5982\u679c\u4e0d\u5728\u5c31\u6dfb\u52a0\u8fdb\u53bb\uff0c\u5f53\u518d\u6b21\u904d\u5386\u7684\u65f6\u5019\u5728\u4e86\uff0c\u5c31\u8fd4\u56de\u8be5\u8282\u70b9</li> <li>\u4e0d\u4f7f\u7528\u5bb9\u5668(\u7ed3\u8bba)\uff1a</li> <li>\u5148\u4f7f\u7528\u5feb\u6162\u6307\u9488(\u4e00\u4e2a\u8d70\u4e24\u6b65\uff0c\u4e00\u4e2a\u8d70\u4e00\u6b65)\uff0c\u5230\u8fbe\u7b2c\u4e00\u4e2a\u76f8\u9047\u7684\u70b9</li> <li>\u7136\u540e\u5feb\u6307\u9488\u56de\u5230\u5f00\u5934\uff0c\u5feb\u6162\u6307\u9488\u540c\u65f6\u8d70(\u540c\u65f6\u8d70\u4e00\u6b65)\uff0c\u5219\u5fc5\u7136\u5728\u5165\u73af\u8282\u70b9\u5904\u76f8\u9047\u3002</li> </ol>"},{"location":"LANG/DS-leetcode/#_29","title":"\u961f\u5217\u548c\u6808","text":"<p>\u961f\u5217\u548c\u6808\u90fd\u662f\u4e00\u79cd\u903b\u8f91\u7ed3\u6784\uff0c\u7269\u7406\u7ed3\u6784\u53ef\u4ee5\u7528\u6570\u7ec4\u6216\u8005\u94fe\u8868\u8fdb\u884c\u5b9e\u73b0\u3002</p> <p>\u961f\u5217\uff1a\u5148\u8fdb\u5148\u51fa,\u4ece\u5c3e\u8fdb\uff0c\u4ece\u5934\u51fa\u3002</p> <p>\u6808\uff1a\u5148\u8fdb\u540e\u51fa</p> <p>\u63d2\u5165\u5220\u9664\u90fd\u662fO(1)\u7684\u65f6\u95f4\u590d\u6742\u5ea6</p>"},{"location":"LANG/DS-leetcode/#_30","title":"\u961f\u5217\u7684\u5b9e\u73b0\uff1a","text":"Text Only<pre><code>public static class Queue1 {\n\n        // java\u4e2d\u7684\u53cc\u5411\u94fe\u8868LinkedList\n        // \u5355\u5411\u94fe\u8868\u5c31\u8db3\u591f\u4e86\n        public Queue&lt;Integer&gt; queue = new LinkedList&lt;&gt;();\n\n        // \u8c03\u7528\u4efb\u4f55\u65b9\u6cd5\u4e4b\u524d\uff0c\u5148\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u5224\u65ad\u961f\u5217\u5185\u662f\u5426\u6709\u4e1c\u897f\n        public boolean isEmpty() {\n            return queue.isEmpty();\n        }\n\n        // \u5411\u961f\u5217\u4e2d\u52a0\u5165num\uff0c\u52a0\u5230\u5c3e\u5df4\n        public void offer(int num) {\n            queue.offer(num);\n        }\n\n        // \u4ece\u961f\u5217\u62ff\uff0c\u4ece\u5934\u62ff\n        public int poll() {\n            return queue.poll();\n        }\n\n        // \u8fd4\u56de\u961f\u5217\u5934\u7684\u5143\u7d20\u4f46\u662f\u4e0d\u5f39\u51fa\n        public int peek() {\n            return queue.peek();\n        }\n\n        // \u8fd4\u56de\u76ee\u524d\u961f\u5217\u91cc\u6709\u51e0\u4e2a\u6570\n        public int size() {\n            return queue.size();\n        }\n\n    }\n\n//\u6570\u7ec4\u5b9e\u73b0\uff1a\n// \u5b9e\u9645\u5237\u9898\u65f6\u66f4\u5e38\u89c1\u7684\u5199\u6cd5\uff0c\u5e38\u6570\u65f6\u95f4\u597d\n    // \u5982\u679c\u53ef\u4ee5\u786e\u5b9a\u52a0\u5165\u64cd\u4f5c\u7684\u603b\u6b21\u6570\u4e0d\u8d85\u8fc7n\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\n    // \u4e00\u822c\u7b14\u8bd5\u3001\u9762\u8bd5\u90fd\u4f1a\u6709\u4e00\u4e2a\u660e\u786e\u6570\u636e\u91cf\uff0c\u6240\u4ee5\u8fd9\u662f\u6700\u5e38\u7528\u7684\u65b9\u5f0f\n    // \u961f\u5217\u7684\u5b58\u50a8\u8303\u56f4\u662f[l,r)\n    public static class Queue2 {\n\n        public int[] queue;\n        public int l;\n        public int r;\n\n        // \u52a0\u5165\u64cd\u4f5c\u7684\u603b\u6b21\u6570\u4e0a\u9650\u662f\u591a\u5c11\uff0c\u4e00\u5b9a\u8981\u660e\u786e\n        public Queue2(int n) {\n            queue = new int[n];\n            l = 0;\n            r = 0;\n        }\n\n        // \u8c03\u7528\u4efb\u4f55\u65b9\u6cd5\u4e4b\u524d\uff0c\u5148\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u5224\u65ad\u961f\u5217\u5185\u662f\u5426\u6709\u4e1c\u897f\n        public boolean isEmpty() {\n            return l == r;\n        }\n\n        public void offer(int num) {\n            queue[r++] = num;\n        }\n\n        public int poll() {\n            return queue[l++];\n        }\n        // ?\n        // l...r-1 r\n        // [l..r)\n        public int head() {\n            return queue[l];\n        }\n\n        public int tail() {\n            return queue[r - 1];\n        }\n\n        public int size() {\n            return r - l;\n        }\n\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_31","title":"\u6808\u7684\u5b9e\u73b0","text":"Text Only<pre><code>// \u76f4\u63a5\u7528java\u5185\u90e8\u7684\u5b9e\u73b0\n    // \u5176\u5b9e\u5c31\u662f\u52a8\u6001\u6570\u7ec4\uff0c\u4e0d\u8fc7\u5e38\u6570\u65f6\u95f4\u5e76\u4e0d\u597d\n    public static class Stack1 {\n\n        public Stack&lt;Integer&gt; stack = new Stack&lt;&gt;();\n\n        // \u8c03\u7528\u4efb\u4f55\u65b9\u6cd5\u4e4b\u524d\uff0c\u5148\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u5224\u65ad\u6808\u5185\u662f\u5426\u6709\u4e1c\u897f\n        public boolean isEmpty() {\n            return stack.isEmpty();\n        }\n\n        public void push(int num) {\n            stack.push(num);\n        }\n\n        public int pop() {\n            return stack.pop();\n        }\n\n        public int peek() {\n            return stack.peek();\n        }\n\n        public int size() {\n            return stack.size();\n        }\n\n    }\n\n// \u5b9e\u9645\u5237\u9898\u65f6\u66f4\u5e38\u89c1\u7684\u5199\u6cd5\uff0c\u5e38\u6570\u65f6\u95f4\u597d\n    // \u5982\u679c\u53ef\u4ee5\u4fdd\u8bc1\u540c\u65f6\u5728\u6808\u91cc\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7n\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\n    // \u4e5f\u5c31\u662f\u53d1\u751f\u5f39\u51fa\u64cd\u4f5c\u4e4b\u540e\uff0c\u7a7a\u95f4\u53ef\u4ee5\u590d\u7528\n    // \u4e00\u822c\u7b14\u8bd5\u3001\u9762\u8bd5\u90fd\u4f1a\u6709\u4e00\u4e2a\u660e\u786e\u6570\u636e\u91cf\uff0c\u6240\u4ee5\u8fd9\u662f\u6700\u5e38\u7528\u7684\u65b9\u5f0f\n    public static class Stack2 {\n\n        public int[] stack;\n        public int size;\n\n        // \u540c\u65f6\u5728\u6808\u91cc\u7684\u5143\u7d20\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7n\n        public Stack2(int n) {\n            stack = new int[n];\n            size = 0;\n        }\n\n        // \u8c03\u7528\u4efb\u4f55\u65b9\u6cd5\u4e4b\u524d\uff0c\u5148\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u6765\u5224\u65ad\u6808\u5185\u662f\u5426\u6709\u4e1c\u897f\n        public boolean isEmpty() {\n            return size == 0;\n        }\n\n        public void push(int num) {\n            stack[size++] = num;\n        }\n\n        public int pop() {\n            return stack[--size];\n        }\n\n        public int peek() {\n            return stack[size - 1];\n        }\n\n        public int size() {\n            return size;\n        }\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_32","title":"\u73af\u5f62\u961f\u5217\u7684\u5b9e\u73b0","text":"<p>\u5e95\u5c42\u8fd8\u662f\u4f7f\u7528\u6570\u7ec4\u3002\u5171\u67094\u4e2a\u53d8\u91cf\uff1al,r,size,limit\u3002\u4f7f\u7528size\u6765\u9650\u5236\u52a0\u5165\u548c\u5f39\u51fa\u7684\u64cd\u4f5c</p> <p>\u5982\u679csize &gt;0,\u53ef\u4ee5\u5f39\u51fa\u3002\u5982\u679csize &lt; limit\uff0c\u53ef\u4ee5\u52a0\u5165\u3002</p> <p>\u961f\u5217\u7684\u8303\u56f4\u8fd8\u662f\u59cb\u7ec8\u662f[l,r)</p> Text Only<pre><code>class MyCircularQueue {\n\n        public int[] queue;\n\n        public int l, r, size, limit;\n\n        // \u540c\u65f6\u5728\u961f\u5217\u91cc\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u4e0d\u8981\u8d85\u8fc7k\n        public MyCircularQueue(int k) {\n            queue = new int[k];\n            l = r = size = 0;\n            limit = k;\n        }\n\n        // \u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0c\u8fd4\u56defalse\n        // \u5982\u679c\u961f\u5217\u6ca1\u6ee1\uff0c\u52a0\u5165value\uff0c\u8fd4\u56detrue\n        public boolean enQueue(int value) {\n            if (isFull()) {\n                return false;\n            } else {\n                queue[r] = value;\n                // r++, \u7ed3\u675f\u4e86\uff0c\u8df3\u56de0\n                r = r == limit - 1 ? 0 : (r + 1);\n                size++;\n                return true;\n            }\n        }\n\n        // \u5982\u679c\u961f\u5217\u7a7a\u4e86\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0c\u8fd4\u56defalse\n        // \u5982\u679c\u961f\u5217\u6ca1\u7a7a\uff0c\u5f39\u51fa\u5934\u90e8\u7684\u6570\u5b57\uff0c\u8fd4\u56detrue\n        public boolean deQueue() {\n            if (isEmpty()) {\n                return false;\n            } else {\n                // l++, \u7ed3\u675f\u4e86\uff0c\u8df3\u56de0\n                l = l == limit - 1 ? 0 : (l + 1);\n                size--;\n                return true;\n            }\n        }\n\n        // \u8fd4\u56de\u961f\u5217\u5934\u90e8\u7684\u6570\u5b57\uff08\u4e0d\u5f39\u51fa\uff09\uff0c\u5982\u679c\u6ca1\u6709\u6570\u8fd4\u56de-1\n        public int Front() {\n            if (isEmpty()) {\n                return -1;\n            } else {\n                return queue[l];\n            }\n        }\n        //\u8fd4\u56de\u961f\u5217\u5c3e\u90e8\u7684\u6570\u5b57\uff0c\u4e0d\u5f39\u51fa\n        public int Rear() {\n            if (isEmpty()) {\n                return -1;\n            } else {\n                int last = r == 0 ? (limit - 1) : (r - 1);\n                return queue[last];\n            }\n        }\n\n        public boolean isEmpty() {\n            return size == 0;\n        }\n\n        public boolean isFull() {\n            return size == limit;\n        }\n\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_33","title":"\u6808\u548c\u961f\u5217\u76f8\u4e92\u5b9e\u73b0","text":""},{"location":"LANG/DS-leetcode/#_34","title":"\u4f7f\u7528\u6808\u5b9e\u73b0\u961f\u5217\uff1a","text":"<p>\u65b9\u6cd5\uff1a\u4f7f\u7528in, out\u4e24\u4e2a\u6808</p> <ol> <li>out \u5fc5\u987b\u4e3a\u7a7a\uff0cin\u624d\u80fd\u5012\u5165\u6570\u636e</li> <li>in\u53ea\u8981\u5012\u5165\u6570\u636e\uff0c\u5c31\u5fc5\u987b\u5012\u5b8c</li> <li>\u81ea\u5df1\u5c01\u88c5\u7684\u65f6\u5019\uff0c\u65e0\u8bba\u662fpush,pop\u8fd8\u662fpeek\u90fd\u8c03\u7528inToOut\uff0c\u80fd\u4e0d\u80fd\u6267\u884c\u65b9\u6cd5\u4f53\u53d6\u51b3\u4e8e\u4e0a\u9762\u4e24\u4e2a\u6761\u4ef6\u3002push\u7684\u65b9\u6cd5\u5728in\u4e2d\u64cd\u4f5c\uff0cpop\u548cpeek\u5728out\u4e2d\u64cd\u4f5c\u3002</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6bcf\u4e2a\u6570\u9876\u591a\u90fd\u53ea\u4f1a\u6267\u884c4\u6b21\u64cd\u4f5c\u3002\u6240\u4ee5\u4e3aO(1)</li> </ol> Text Only<pre><code>class MyQueue {\n\n        public Stack&lt;Integer&gt; in;\n\n        public Stack&lt;Integer&gt; out;\n\n        public MyQueue() {\n            in = new Stack&lt;Integer&gt;();\n            out = new Stack&lt;Integer&gt;();\n        }\n\n        // \u5012\u6570\u636e\n        // \u4ecein\u6808\uff0c\u628a\u6570\u636e\u5012\u5165out\u6808\n        // 1) out\u7a7a\u4e86\uff0c\u624d\u80fd\u5012\u6570\u636e\n        // 2) \u5982\u679c\u5012\u6570\u636e\uff0cin\u5fc5\u987b\u5012\u5b8c\n        private void inToOut() {\n            if (out.empty()) {\n                while (!in.empty()) {\n                    out.push(in.pop());\n                }\n            }\n        }\n\n        public void push(int x) {\n            in.push(x);\n            inToOut();\n        }\n\n        public int pop() {\n            inToOut();\n            return out.pop();\n        }\n\n        public int peek() {\n            inToOut();\n            return out.peek();\n        }\n\n        public boolean empty() {\n            return in.isEmpty() &amp;&amp; out.isEmpty();\n        }\n\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_35","title":"\u961f\u5217\u5b9e\u73b0\u6808\uff1a","text":"<p>\u961f\u5217\uff1a\u5c3e\u8fdb\u5934\u51fa</p> <p>\u6838\u5fc3\u601d\u60f3\uff1a\u961f\u5217\u51fa\u961f\u662f\u987a\u5e8f\u7684\uff0c\u800c\u6808\u5f39\u51fa\u7684\u8bdd\u4e3a\u5012\u5e8f\u3002\u6240\u4ee5\u6bcf\u6b21\u90fd\u628a\u961f\u5217\u65b0\u52a0\u5165\u7684\u6570\u524d\u9762\u7684\u6570\u5168\u90e8\u4ece\u961f\u5217\u5934\u5f39\u51fa\uff0c\u518d\u4ece\u5c3e\u90e8\u8fdb\u5165\uff0c\u4e5f\u5c31\u662f\u9006\u5e8f\u3002</p> <p>\u5355\u6b21push\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n)\uff1b</p> Text Only<pre><code>class MyStack {\n\n        Queue&lt;Integer&gt; queue;\n\n        public MyStack() {\n            queue = new LinkedList&lt;Integer&gt;();\n        }\n\n        // O(n)\n        public void push(int x) {\n            int n = queue.size();\n            queue.offer(x);\n            for (int i = 0; i &lt; n; i++) {\n                queue.offer(queue.poll());\n            }\n        }\n\n        public int pop() {\n            return queue.poll();\n        }\n\n        public int top() {\n            return queue.peek();\n        }\n\n        public boolean empty() {\n            return queue.isEmpty();\n        }\n\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_36","title":"\u6700\u5c0f\u6808","text":"<p>\u9664\u4e86\u5b9e\u73b0\u5e38\u89c4\u7684\u6808\u529f\u80fd\uff0c\u8fd8\u9700\u8981\u5b9e\u73b0getmin\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u9700\u8981\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u7528O(1)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u627e\u5230\u6700\u5c0f\u503c</p> <p>\u65b9\u6cd5</p> <ol> <li>\u4f7f\u7528\u4e24\u4e2a\u6808 data \u548c min</li> <li>min\u968f\u7740data\u7684\u538b\u5165\u6570\u636e\uff0c\u6bcf\u4e00\u6b21\u548c\u6700\u5c0f\u6808\u7684\u6808\u9876\u5bf9\u6bd4\u3002</li> <li>\u5982\u679c\u5f53\u524d\u6570\u5b57\u5927\u4e8emin\u6808\u9876\uff0c\u91cd\u590d\u538b\u5165min\u7684\u6808\u9876\u3002\u5982\u679c\u5c0f\u4e8emin\u6808\u9876\uff0c\u5219\u538b\u5165data\u4e2d\u65b0\u52a0\u5165\u7684\u6570\u636e\u3002</li> <li>\u521d\u59cb\u60c5\u51b5\uff1a\u5982\u679cmin\u4e3a\u7a7a\uff0c\u5219data\u6808\u4e5f\u5fc5\u7136\u4e3a\u7a7a\uff0c\u540c\u6b65\u538b\u5165\u6570\u636e\u5c31\u53ef\u4ee5\u3002</li> <li>\u6bcf\u6b21\u5f39\u51fa\u7684\u65f6\u5019\uff0cdata\u548cmin\u540c\u6b65\u5f39\u51fa</li> </ol> Text Only<pre><code>//\u4f7f\u7528\u6570\u7ec4\u5b9e\u73b0\u7684\u90e8\u5206\nclass MinStack2 {\n        // leetcode\u7684\u6570\u636e\u5728\u6d4b\u8bd5\u65f6\uff0c\u540c\u65f6\u5728\u6808\u91cc\u7684\u6570\u636e\u4e0d\u8d85\u8fc7\u8fd9\u4e2a\u503c\n        // \u8fd9\u662f\u51e0\u6b21\u63d0\u4ea4\u5b9e\u9a8c\u51fa\u6765\u7684\uff0c\u54c8\u54c8\n        // \u5982\u679cleetcode\u8865\u6d4b\u8bd5\u6570\u636e\u4e86\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u91cf\u5bfc\u81f4\u51fa\u9519\uff0c\u5c31\u8c03\u5927\n        public final int MAXN = 8001;\n\n        public int[] data;\n        public int[] min;\n        int size;\n\n        public MinStack2() {\n            data = new int[MAXN];\n            min = new int[MAXN];\n            size = 0;\n        }\n\n        public void push(int val) {\n            data[size] = val;\n            if (size == 0 || val &lt;= min[size - 1]) {\n                min[size] = val;\n            } else {\n                min[size] = min[size - 1];\n            }\n            size++;\n        }\n\n        public void pop() {\n            size--;\n        }\n\n        public int top() {\n            return data[size - 1];\n        }\n\n        public int getMin() {\n            return min[size - 1];\n        }\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_37","title":"\u53cc\u7aef\u961f\u5217\uff1a","text":"<p>\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5185\u90e8\u7684LinkedList\u5b9e\u73b0Deque\u63a5\u53e3\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u5b9e\u73b0\u3002</p> <p>\u6570\u7ec4\u5b9e\u73b0\u7684\u6548\u7387\u6bd4\u8f83\u9ad8\uff0cLinkedList\u5b9e\u73b0\u6bd4\u8f83\u7b80\u6d01\u3002</p> Text Only<pre><code>class MyCircularDeque1 {\n\n        public Deque&lt;Integer&gt; deque = new LinkedList&lt;&gt;(); //\n        public int size;\n        public int limit;\n\n        public MyCircularDeque1(int k) {\n            size = 0;\n            limit = k;\n        }\n\n        public boolean insertFront(int value) {\n            if (isFull()) {\n                return false;\n            } else {\n                deque.offerFirst(value);\n                size++;\n                return true;\n            }\n        }\n\n        public boolean insertLast(int value) {\n            if (isFull()) {\n                return false;\n            } else {\n                deque.offerLast(value);\n                size++;\n                return true;\n            }\n        }\n\n        public boolean deleteFront() {\n            if (isEmpty()) {\n                return false;\n            } else {\n                size--;\n                deque.pollFirst();\n                return true;\n            }\n        }\n\n        public boolean deleteLast() {\n            if (isEmpty()) {\n                return false;\n            } else {\n                size--;\n                deque.pollLast();\n                return true;\n            }\n        }\n\n        public int getFront() {\n            if (isEmpty()) {\n                return -1;\n            } else {\n                return deque.peekFirst();\n            }\n        }\n\n        public int getRear() {\n            if (isEmpty()) {\n                return -1;\n            } else {\n                return deque.peekLast();\n            }\n        }\n\n        public boolean isEmpty() {\n            return size == 0;\n        }\n\n        public boolean isFull() {\n            return size == limit;\n        }\n\n//\u4f7f\u7528\u6570\u7ec4\u5b9e\u73b0\uff1a\nclass MyCircularDeque2 {\n\n        public int[] deque;\n        public int l, r, size, limit;\n\n        public MyCircularDeque2(int k) {\n            deque = new int[k];\n            l = r = size = 0;\n            limit = k;\n        }\n\n        public boolean insertFront(int value) {\n            if (isFull()) {\n                return false;\n            } else {\n                if (isEmpty()) {\n                    l = r = 0;\n                    deque[0] = value;\n                } else {\n                    l = l == 0 ? (limit - 1) : (l - 1);\n                    deque[l] = value;\n                }\n                size++;\n                return true;\n            }\n        }\n\n        public boolean insertLast(int value) {\n            if (isFull()) {\n                return false;\n            } else {\n                if (isEmpty()) {\n                    l = r = 0;\n                    deque[0] = value;\n                } else {\n                    r = r == limit - 1 ? 0 : (r + 1);\n                    deque[r] = value;\n                }\n                size++;\n                return true;\n            }\n        }\n\n        public boolean deleteFront() {\n            if (isEmpty()) {\n                return false;\n            } else {\n                l = (l == limit - 1) ? 0 : (l + 1);\n                size--;\n                return true;\n            }\n        }\n\n        public boolean deleteLast() {\n            if (isEmpty()) {\n                return false;\n            } else {\n                r = r == 0 ? (limit - 1) : (r - 1);\n                size--;\n                return true;\n            }\n        }\n\n        public int getFront() {\n            if (isEmpty()) {\n                return -1;\n            } else {\n                return deque[l];\n            }\n        }\n\n        public int getRear() {\n            if (isEmpty()) {\n                return -1;\n            } else {\n                return deque[r];\n            }\n        }\n\n        public boolean isEmpty() {\n            return size == 0;\n        }\n\n        public boolean isFull() {\n            return size == limit;\n        }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_38","title":"\u4e8c\u53c9\u6811\uff1a","text":""},{"location":"LANG/DS-leetcode/#_39","title":"\u9012\u5f52\u904d\u5386\uff1a","text":"<p>\u524d\u5e8f\uff0c\u4e2d\u5e8f\uff0c\u540e\u5e8f\uff1a</p> Text Only<pre><code>public static void preOrder(TreeNode head) {\n        if (head == null) {\n            return;\n        }\n        System.out.print(head.val + \" \");\n        preOrder(head.left);\n        preOrder(head.right);\n    }\n\n    // \u4e2d\u5e8f\u6253\u5370\u6240\u6709\u8282\u70b9\uff0c\u9012\u5f52\u7248\n    public static void inOrder(TreeNode head) {\n        if (head == null) {\n            return;\n        }\n        inOrder(head.left);\n        System.out.print(head.val + \" \");\n        inOrder(head.right);\n    }\n\n    // \u540e\u5e8f\u6253\u5370\u6240\u6709\u8282\u70b9\uff0c\u9012\u5f52\u7248\n    public static void posOrder(TreeNode head) {\n        if (head == null) {\n            return;\n        }\n        posOrder(head.left);\n        posOrder(head.right);\n        System.out.print(head.val + \" \");\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_40","title":"\u975e\u9012\u5f52\u904d\u5386\uff1a","text":"<ol> <li>\u5bf9\u4e8e\u5148\u5e8f\u904d\u5386\uff1a</li> <li>\u4f7f\u7528\u4e00\u4e2a\u6808</li> <li>\u6ce8\u610f\u5224\u7a7a</li> <li>\u6bcf\u6b21\u5bf9\u4e8e\u5f39\u51fa\u7684\u8282\u70b9\uff0c\u5f39\u51fa\u5c31\u6267\u884c\u76f8\u5173\u64cd\u4f5c\uff0c\u7136\u540e\u5148\u538b\u5165\u53f3\u5b50\u8282\u70b9\uff0c\u518d\u538b\u5165\u5de6\u5b50\u8282\u70b9\u3002</li> <li>\u5bf9\u4e8e\u4e2d\u5e8f\u904d\u5386\uff1a</li> <li>\u9996\u5148\uff0c\u8ba9\u6574\u4e2a\u5de6\u6811\u7684\u5de6\u8fb9\u754c\u5168\u90e8\u8fdb\u5165\u6808\uff0c\u76f4\u5230\u4e3a\u7a7a</li> <li>\u7136\u540e\u5f00\u59cb\u5f39\u51fa\uff0c\u6bcf\u5f39\u51fa\u4e00\u4e2a\u8282\u70b9\u6267\u884c\u76f8\u5173\u64cd\u4f5c\uff0c\u7136\u540e\u5bf9\u4e8e\u5b83\u7684\u53f3\u6811\uff0c\u91cd\u590d\u6b65\u9aa4a</li> <li>\u91cd\u70b9\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u90fd\u662f\u5904\u7406\u5e72\u51c0\u5de6\u5b50\u6811\uff0c\u7136\u540e\u5bf9\u81ea\u5df1\u8fdb\u884c\u64cd\u4f5c\uff0c\u518d\u8fdb\u884c\u53f3\u5b50\u6811\u91cd\u590d\u3002\u8fd9\u5c31\u662f\u4e2d\u5e8f\u904d\u5386</li> </ol> Text Only<pre><code>// \u5148\u5e8f\u6253\u5370\u6240\u6709\u8282\u70b9\uff0c\u975e\u9012\u5f52\u7248\n    public static void preOrder(TreeNode head) {\n        if (head != null) {\n            Stack&lt;TreeNode&gt; stack = new Stack&lt;&gt;();\n            stack.push(head);\n            while (!stack.isEmpty()) {\n                head = stack.pop();\n                System.out.print(head.val + \" \");\n                if (head.right != null) {\n                    stack.push(head.right);\n                }\n                if (head.left != null) {\n                    stack.push(head.left);\n                }\n            }\n            System.out.println();\n        }\n    }\n\n    // \u4e2d\u5e8f\u6253\u5370\u6240\u6709\u8282\u70b9\uff0c\u975e\u9012\u5f52\u7248\n    public static void inOrder(TreeNode head) {\n        if (head != null) {\n            Stack&lt;TreeNode&gt; stack = new Stack&lt;&gt;();\n            //\u6808\u4e0d\u4e3a\u7a7a\uff0c\u6216\u8005\u5f53\u524d\u7684\u5b50\u6811\u4e0d\u4e3a\u7a7a\n            while (!stack.isEmpty() || head != null) {\n                if (head != null) {\n                    stack.push(head);\n                    head = head.left;\n                } else {\n                    //head\u7b49\u4e8e\u81ea\u5df1\u5f39\u51fa\u7684\u8282\u70b9\n                    head = stack.pop();\n                    System.out.print(head.val + \" \");\n                    head = head.right;\n                }\n            }\n            System.out.println();\n        }\n    }\n\n    // \u540e\u5e8f\u6253\u5370\u6240\u6709\u8282\u70b9\uff0c\u975e\u9012\u5f52\u7248\n    // \u8fd9\u662f\u7528\u4e24\u4e2a\u6808\u7684\u65b9\u6cd5\n    public static void posOrderTwoStacks(TreeNode head) {\n        if (head != null) {\n            Stack&lt;TreeNode&gt; stack = new Stack&lt;&gt;();\n            Stack&lt;TreeNode&gt; collect = new Stack&lt;&gt;();\n            stack.push(head);\n            while (!stack.isEmpty()) {\n                head = stack.pop();\n                collect.push(head);\n                if (head.left != null) {\n                    stack.push(head.left);\n                }\n                if (head.right != null) {\n                    stack.push(head.right);\n                }\n            }\n            while (!collect.isEmpty()) {\n                System.out.print(collect.pop().val + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    // \u540e\u5e8f\u6253\u5370\u6240\u6709\u8282\u70b9\uff0c\u975e\u9012\u5f52\u7248\n    // \u8fd9\u662f\u7528\u4e00\u4e2a\u6808\u7684\u65b9\u6cd5\n    public static void posOrderOneStack(TreeNode h) {\n        if (h != null) {\n            Stack&lt;TreeNode&gt; stack = new Stack&lt;&gt;();\n            stack.push(h);\n            // \u5982\u679c\u59cb\u7ec8\u6ca1\u6709\u6253\u5370\u8fc7\u8282\u70b9\uff0ch\u5c31\u4e00\u76f4\u662f\u5934\u8282\u70b9\n            // \u4e00\u65e6\u6253\u5370\u8fc7\u8282\u70b9\uff0ch\u5c31\u53d8\u6210\u6253\u5370\u8282\u70b9\n            // \u4e4b\u540eh\u7684\u542b\u4e49 : \u4e0a\u4e00\u6b21\u6253\u5370\u7684\u8282\u70b9\n            while (!stack.isEmpty()) {\n                TreeNode cur = stack.peek();\n                if (cur.left != null &amp;&amp; h != cur.left &amp;&amp; h != cur.right) {\n                    // \u6709\u5de6\u6811\u4e14\u5de6\u6811\u6ca1\u5904\u7406\u8fc7\n                    stack.push(cur.left);\n                } else if (cur.right != null &amp;&amp; h != cur.right) {\n                    // \u6709\u53f3\u6811\u4e14\u53f3\u6811\u6ca1\u5904\u7406\u8fc7\n                    stack.push(cur.right);\n                } else {\n                    // \u5de6\u6811\u3001\u53f3\u6811 \u6ca1\u6709 \u6216\u8005 \u90fd\u5904\u7406\u8fc7\u4e86\n                    System.out.print(cur.val + \" \");\n                    h = stack.pop();\n                }\n            }\n            System.out.println();\n        }\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_41","title":"\u4e8c\u53c9\u6811\u9ad8\u9891\u9898","text":""},{"location":"LANG/DS-leetcode/#_42","title":"\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386","text":"<ol> <li>\u601d\u8def1\uff1abfs\u3002\u4f7f\u7528\u961f\u5217\u5b9e\u73b0\uff0c\u4e00\u8282\u8282\u70b9\u5165\u961f\u5e76\u64cd\u4f5c\u4e4b\u540e\uff0c\u5f39\u51fa\uff0c\u6709\u5de6\u52a0\u5de6\uff0c\u6709\u53f3\u52a0\u53f3\u3002\u800c\u6309\u5c42\u6536\u96c6\u8282\u70b9\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u54c8\u5e0c\u8868\u8fdb\u884c\u6536\u96c6\u6bcf\u4e2a\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u5c42\u6570\u3002</li> <li>\u601d\u8def2\uff1abfs\u4f18\u5316\u7248\uff0c\u4f7f\u7528\u6570\u7ec4\u6a21\u62df\u961f\u5217\u3002\u7136\u540e\u4e00\u6b21\u5904\u7406\u4e00\u5c42\u6570\u636e\u3002</li> <li>\u83b7\u5f97\u5f53\u524d\u7684\u961f\u5217\u957f\u5ea6size</li> <li>\u5faa\u73afsize\u6b21\uff0c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u8fdb\u884c\u64cd\u4f5c\uff0c\u5de6\u53f3\u5165\u961f\u3002\u6700\u540e\u6dfb\u52a0\u8be5\u5c42\u7ed3\u679c\u5230\u6700\u7ec8\u7ed3\u679c\u3002</li> <li>\u4ee3\u7801\u5b9e\u73b0\uff1a</li> </ol> Text Only<pre><code>//\u601d\u8def\u4e00\uff1a\nclass Solution {\n    private List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;();\n    public List&lt;List&lt;Integer&gt;&gt; levelOrder(TreeNode root) {\n        if(root == null) return new ArrayList&lt;&gt;();\n\n        Queue&lt;TreeNode&gt; que = new LinkedList&lt;&gt;();\n        HashMap&lt;TreeNode,Integer&gt; map = new HashMap&lt;&gt;();\n        que.offer(root);\n        map.put(root,0);\n        while(!que.isEmpty()){\n            TreeNode cur = que.poll();\n            int level = map.get(cur);\n            if(level == res.size()){\n                res.add(new ArrayList&lt;&gt;());\n            }\n            res.get(level).add(cur.val);\n            if(cur.left != null){\n                que.offer(cur.left);\n                map.put(cur.left,level+1);\n            }\n            if(cur.right != null){\n                que.offer(cur.right);\n                map.put(cur.right,level+1);\n            }\n        }\n        return res;\n    }\n}\n\n//\u601d\u8def\u4e8c\nclass Solution {\n    private List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;();\n    private int MAXN = 2001;\n    public List&lt;List&lt;Integer&gt;&gt; levelOrder(TreeNode root) {\n        if(root == null) return new ArrayList&lt;&gt;();\n\n        TreeNode[] que = new TreeNode[MAXN];\n        int l=0,r=0;\n        que[r++] = root;\n\n        while(l&lt;r){\n            int size = r-l;\n            List&lt;Integer&gt; level = new ArrayList&lt;&gt;();\n            for(int i=0; i&lt;size; i++){\n                TreeNode cur = que[l++];\n                level.add(cur.val);\n                if(cur.left != null){\n                    que[r++] = cur.left;\n                }\n                if(cur.right != null){\n                    que[r++] = cur.right;\n                }\n            }\n            res.add(level);\n        }\n        return res;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_43","title":"\u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u72b6\u904d\u5386\uff1a","text":"<ol> <li>\u8981\u6c42\uff1a\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386\uff0c\u4f46\u662f\u5de6\u53f3\u4ea4\u66ff\u3002</li> <li>\u601d\u8def\uff1a\u53ef\u4ee5\u5728for\u5faa\u73af\u7684\u65f6\u5019\u5904\u7406\u5de6\u53f3\u5faa\u73af\u7684\u65f6\u5019\u63a7\u5236\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u6bcf\u5c42\u7ed3\u679c\u8fdb\u884c\u7ffb\u8f6c\u3002</li> </ol>"},{"location":"LANG/DS-leetcode/#_44","title":"\u4e8c\u53c9\u6811\u7684\u6700\u5927\u7279\u6b8a\u5bbd\u5ea6","text":"<ol> <li>\u4e8c\u53c9\u6811\u6bcf\u5c42\u7684\u5bbd\u5ea6\u5b9a\u4e49\u4e3a\u6700\u5de6\u548c\u6700\u53f3\u975e\u7a7a\u8282\u70b9\u4e4b\u95f4\u7684\u8282\u70b9\u6570\u3002\u4e2d\u95f4\u7684null\u503c\u4e5f\u5360\u636e\u7a7a\u95f4</li> <li>\u4f7f\u7528bfs\u6570\u7ec4\u4f18\u5316\u7248\uff0c\u901a\u8fc7\u5f15\u5165\u7f16\u53f7(i,2*i,2*i+1)\u6765\u907f\u514d\u64cd\u4f5cnull\u8282\u70b9\u3002</li> </ol> <ol> <li>\u4e8c\u53c9\u6811\u7684\u6700\u5927\u548c\u6700\u5c0f\u6df1\u5ea6\uff1a</li> <li>\u601d\u8def\uff1a\u6700\u5927\u6df1\u5ea6\uff1a\u4f7f\u7528\u9012\u5f52\u6c42\u89e3\u3002max(left,right)+1\uff1b</li> <li>\u601d\u8def\uff1a\u6700\u5c0f\u6df1\u5ea6\uff1a\u6ce8\u610f\u9012\u5f52\u7ec8\u6b62\u70b9\u662f\u53f6\u5b50\u7ed3\u70b9\u3002\u9700\u8981\u9632\u6b62null\u503c\u5e72\u6270\u3002\u5e38\u89c4\u64cd\u4f5c\u662f\u73b0\u5c06\u503c\u8bbe\u7f6e\u4e3aMAX_VALUE\uff0c\u5982\u679c\u5b58\u5728\u53f6\u5b50\u8282\u70b9\uff0c\u81ea\u7136\u4f1a\u5728\u6bd4\u8f83\u7684\u4e4b\u540e\u88ab\u66ff\u6362\u6389\u3002</li> </ol> Text Only<pre><code>class Solution {\n    public int minDepth(TreeNode root) {\n        //\u7279\u5224\uff0c\u5e76\u4e0d\u662f\u9012\u5f52\u7ec8\u6b62\u70b9\u3002\n        if(root == null){\n            return 0;\n        }\n        //\u9012\u5f52\u7ec8\u6b62\u70b9\n        if(root.left == null &amp;&amp; root.right == null){\n            return 1;  \n        }\n\n        int ldeep = Integer.MAX_VALUE;\n        int rdeep = Integer.MAX_VALUE;\n\n        if(root.left != null) ldeep = minDepth(root.left);\n        if(root.right != null) rdeep = minDepth(root.right);\n\n        return Math.min(ldeep,rdeep)+1;\n\n\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_45","title":"\u4e8c\u53c9\u6811\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316","text":"<ol> <li>\u5e8f\u5217\u5316\u662f\u5c06\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6216\u8005\u5bf9\u8c61\u8f6c\u6362\u4e3a\u8fde\u7eed\u7684\u6bd4\u7279\u4f4d\u7684\u64cd\u4f5c\uff0c\u8fdb\u800c\u53ef\u4ee5\u5c06\u8f6c\u6362\u540e\u7684\u6570\u636e\u5b58\u50a8\u5728\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u5185\u5b58\u4e2d\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\u5230\u53e6\u4e00\u4e2a\u8ba1\u7b97\u673a\u73af\u5883\uff0c\u91c7\u53d6\u76f8\u53cd\u65b9\u5f0f\u91cd\u6784\u5f97\u5230\u539f\u6570\u636e\u3002</li> <li>\u601d\u8def\uff1a\u54ea\u79cd\u65b9\u5f0f\u904d\u5386(dfs,bfs)\u90fd\u53ef\u4ee5\u3002</li> <li>dfs\u5148\u5e8f\u904d\u5386\uff1a</li> </ol> Text Only<pre><code>public class Codec {\n    private int cnt = 0;\n    // Encodes a tree to a single string.\n    public String serialize(TreeNode root) {\n        StringBuilder str = new StringBuilder();\n        encode(root,str);\n        return str.toString();\n    }\n    private void encode(TreeNode root,StringBuilder s){\n        if(root == null){\n            s.append(\"#,\");\n            return;\n        }\n        s.append(root.val + \",\");\n        encode(root.left,s);\n        encode(root.right,s);\n    }\n\n    // Decodes your encoded data to tree.\n    public TreeNode deserialize(String data) {\n        String[] vals = data.split(\",\");\n        cnt = 0;\n        return decode(vals);\n    }\n\n    private TreeNode decode(String[] vals){\n        String cur = vals[cnt++];\n        if(cur.equals(\"#\")){\n            return null;\n        }\n        //\u524d\u5e8f\u904d\u5386\u89e3\u51b3\n        TreeNode head = new TreeNode(Integer.valueOf(cur));\n        head.left = decode(vals);\n        head.right = decode(vals);\n\n        return head;\n\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_46","title":"\u5229\u7528\u5148\u5e8f\u904d\u5386\u548c\u4e2d\u5e8f\u904d\u5386\u6784\u5efa\u4e8c\u53c9\u6811","text":"<ol> <li>\u539f\u7406\uff1a\u6ca1\u6709\u91cd\u590d\u503c\u7684\u60c5\u51b5\u4e0b(\u4f8b\u59821,1,1)\uff1a\u4e2d\u5e8f\u548c\u5148\u5e8f/\u540e\u5e8f\u4f1a\u552f\u4e00\u786e\u5b9a\u4e00\u9897\u4e8c\u53c9\u6811</li> <li>\u601d\u8def\uff1a\u6784\u9020\u9012\u5f52\u51fd\u6570\uff0c\u901a\u8fc7\u5934\u8282\u70b9\u4f4d\u7f6e\u5212\u5206\u5b50\u533a\u95f4\u8fdb\u884c\u9012\u5f52</li> </ol> Text Only<pre><code>public static TreeNode buildTree(int[] pre, int[] in) {\n        if (pre == null || in == null || pre.length != in.length) {\n            return null;\n        }\n        HashMap&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;();\n        for (int i = 0; i &lt; in.length; i++) {\n            map.put(in[i], i);\n        }\n        return f(pre, 0, pre.length - 1, in, 0, in.length - 1, map);\n    }\n\n    public static TreeNode f(int[] pre, int l1, int r1, int[] in, int l2, int r2, HashMap&lt;Integer, Integer&gt; map) {\n        if (l1 &gt; r1) {\n            return null;\n        }\n        TreeNode head = new TreeNode(pre[l1]);\n        if (l1 == r1) {\n            return head;\n        }\n        int k = map.get(pre[l1]);\n        // pre : l1(........)[.......r1]\n        // in  : (l2......)k[........r2]\n        // (...)\u662f\u5de6\u6811\u5bf9\u5e94\uff0c[...]\u662f\u53f3\u6811\u7684\u5bf9\u5e94\n        head.left = f(pre, l1 + 1, l1 + k - l2, in, l2, k - 1, map);\n        head.right = f(pre, l1 + k - l2 + 1, r1, in, k + 1, r2, map);\n        return head;\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_47","title":"\u9a8c\u8bc1\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a","text":"<ol> <li>\u5224\u65ad\u4e00\u4e2a\u4e8c\u53c9\u6811\u662f\u5426\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u9664\u4e86\u53f6\u5b50\u7ed3\u70b9\u4e4b\u5916\u5168\u90e8\u5c42\u90fd\u6ee1\uff0c\u5e76\u4e14\u53f6\u5b50\u7ed3\u70b9\u4e4b\u95f4\u6ca1\u6709\u8df3\u8fc7\u3002</li> <li>\u539f\u7406\uff1a\u901a\u8fc7bfs\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c</li> <li>\u5982\u679c\u51fa\u73b0\u6709\u53f3\u65e0\u5de6\uff0c\u5219\u8fd4\u56de\u3002</li> <li>\u5982\u679c\u53d1\u73b0\u5b69\u5b50\u8282\u70b9\u4e0d\u5168\u7684\u8282\u70b9\uff0c\u5219\u63a5\u4e0b\u6765\u904d\u5386\u7684\u8282\u70b9\u5fc5\u987b\u5168\u662f\u53f6\u5b50\u8282\u70b9\u3002</li> </ol>"},{"location":"LANG/DS-leetcode/#lca","title":"\u666e\u901a\u4e8c\u53c9\u6811\u5bfb\u627e\u4e24\u4e2a\u8282\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148(LCA)","text":"<ol> <li>\u8be5\u95ee\u9898\u53c8\u53ebLCA\u7b97\u6cd5\u3002\u57fa\u4e8eLCA\u4f1a\u6709\u6279\u91cf\u67e5\u8be2\uff0c\u5728\u7ebf\u67e5\u8be2\u95ee\u9898\u3002</li> <li>\u95ee\u9898\uff1a\u5047\u8bbep\uff0cq\u4e3a\u4e8c\u53c9\u6811\u4e24\u4e2a\u4e0d\u540c\u7684\u8282\u70b9\uff0c\u8981\u6c42\u67e5\u627e\u6700\u8fd1\u516c\u5171\u7956\u5148</li> <li> <p>\u601d\u8def\uff1a\u5206\u4e24\u79cd\u60c5\u51b5\u89e3\u51b3\uff1a</p> </li> <li> <p>\u5305\u542b\u5173\u7cfb(\u5728\u540c\u4e00\u9897\u6811\u4e0a)\uff1a\u6700\u8fd1\u516c\u5171\u7956\u5148\u662fp,q\u4e2d\u7684\u4e00\u4e2a\u3002\u9762\u5bf9\u5305\u542b\u7684\u60c5\u51b5\uff0c\u4e00\u65e6\u9047\u5230\u4e86p\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u5411\u4e0a\u8fd4\u56de\u3002</p> </li> <li>\u65e0\u5305\u542b\u5173\u7cfb(\u5728\u4e24\u9897\u6811\u4e0a)\uff1a\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e0d\u662fp,q\uff0c\u662f\u9012\u5f52\u5f00\u59cb\u7684\u8be5\u8282\u70b9\u4e3aLCA</li> <li>\u4ee3\u7801\uff1a</li> <li>\u56e0\u4e3a\u8981\u627e\u6700\u8fd1\uff0c\u6240\u4ee5\u6df1\u5ea6\u4f18\u5148\u5230\u6700\u5c0f\u8282\u70b9</li> <li>\u5230\u4e86base case\uff0c\u5982\u679c\u5de6\u8fb9\u53f3\u8fb9\u90fdnull\uff0c\u8fd4\u56denull\u3002\u5982\u679c\u53ea\u6709\u4e00\u4fa7\uff0c\u8fd4\u56de\u4ec5\u6709\u7684\u90a3\u4e00\u4fa7\uff0c\u5982\u679c\u4e24\u8fb9\u90fd\u6709\uff0c\u8fd4\u56de\u6839\u8282\u70b9root</li> <li>\u4e5f\u5c31\u662f\u4ece\u6700\u5e95\u90e8\u5411\u4e0a\u5f00\u59cb\u56de\u6eaf\u5224\u65ad\uff0c\u8fd9\u6837\u5728\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684LCA\u4e2d\uff0c\u4e00\u5b9a\u662f\u6700\u5e95\u90e8\u7684LCA\u88ab\u9996\u5148\u8bbf\u95ee\uff0c\u6240\u4ee5\u5c31\u662f\u6df1\u5ea6\u6700\u5927\u7684\u516c\u5171\u7956\u5148\u3002</li> <li>\u590d\u6742\u5ea6:</li> <li>\u65f6\u95f4\uff1aO(n)\uff0c\u6240\u6709\u8282\u70b9\u90fd\u6700\u591a\u4f1a\u88ab\u6267\u884c\u4e00\u6b21\u5224\u65ad\u903b\u8f91\uff0c\u8fdb\u884c\u8ba1\u7b97\u4e00\u6b21</li> <li>\u7a7a\u95f4:O(n)</li> </ol> Text Only<pre><code>    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if(root == null || root == p || root == q){\n            return root;\n        }\n        TreeNode lres = lowestCommonAncestor(root.left,p,q);\n        TreeNode rres = lowestCommonAncestor(root.right,p,q);\n\n        if(lres != null &amp;&amp; rres != null){\n            return root;\n        }else if(lres == null &amp;&amp; rres == null){\n            return null;\n        }else{\n            return lres != null? lres:rres;\n        }\n\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#lca_1","title":"\u641c\u7d22\u4e8c\u53c9\u6811\u4e0a\u7684LCA","text":"<ol> <li>\u641c\u7d22\u4e8c\u53c9\u6811\uff1a\u4e00\u68f5\u6811\u5de6\u5b50\u6811\u7684\u503c\u6c38\u8fdc\u5c0f\u4e8e\u6839\uff0c\u6839\u7684\u503c\u6c38\u8fdc\u5c0f\u4e8e\u53f3\u5b50\u6811\u7684\u503c</li> <li>\u4f18\u5316\u90e8\u5206\uff1a</li> <li>\u5229\u7528\u4e8c\u53c9\u641c\u7d22\u6811\u6027\u8d28\uff0c\u5de6&lt;\u4e2d&lt;\u53f3</li> <li>\u5047\u8bbep=30,q=100\u3002\u4e5f\u5c31\u662fp&lt;q\u5982\u679c\u5f53\u524d\u8282\u70b9cur\uff0c<ol> <li>cur&lt;min(p,q)\u5219\u7ed3\u679c\u5fc5\u7136\u5728\u53f3\u5b50\u6811\uff0c\u8bbf\u95eecur.right\u3002</li> <li>cur&gt;max(p,q)\u5426\u5219\u8bbf\u95eecur.left.</li> <li>cur=p\u6216\u8005cur=q\u76f4\u63a5\u8fd4\u56de\u5c31\u597d(\u8fd9\u70b9\u548c\u666e\u901a\u4e8c\u53c9\u6811\u76f8\u540c)\u3002</li> <li>p&lt;cur&lt;q,\u5219\u5f53\u524d\u7684\u5c31\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148</li> </ol> </li> <li>\u590d\u6742\u5ea6\uff1a</li> <li>\u65f6\u95f4:O(n)</li> <li>\u7a7a\u95f4: O(n),\u6700\u5dee\u60c5\u51b5\u662f\u7ebf\u6027\u60c5\u51b5</li> </ol> Text Only<pre><code>class Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        int x = root.val;\n        if (p.val &lt; x &amp;&amp; q.val &lt; x)\n            return lowestCommonAncestor(root.left, p, q);\n        if (p.val &gt; x &amp;&amp; q.val &gt; x)\n            return lowestCommonAncestor(root.right, p, q);\n        return root;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#aim","title":"\u8def\u5f84\u7efc\u5408==aim","text":"<ol> <li>\u7ed9\u4f60\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 root \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u548c targetSum \uff0c\u627e\u51fa\u6240\u6709 \u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9 \u8def\u5f84\u603b\u548c\u7b49\u4e8e\u7ed9\u5b9a\u76ee\u6807\u548c\u7684\u8def\u5f84\u3002</li> <li>\u6838\u5fc3\uff1a\u72b6\u6001\u6062\u590d\u3002\u5e0c\u671bf\u5bf9\u4e8ea,b,c\u60c5\u51b5\u90fd\u662f\u540c\u6837\u7684\u72b6\u6001\u5f00\u59cb</li> </ol> Text Only<pre><code>class Solution {\n    private List&lt;List&lt;Integer&gt;&gt; ans = new ArrayList&lt;&gt;();\n    private List&lt;Integer&gt; path = new ArrayList&lt;&gt;();\n    public List&lt;List&lt;Integer&gt;&gt; pathSum(TreeNode root, int targetSum) {\n        traverse(root,0,targetSum);\n        return  ans;\n    }\n    public void traverse(TreeNode cur,int curSum, int targetSum){\n        if(cur == null) return ;\n        if(cur.left == null &amp;&amp; cur.right == null){\n            if(curSum+cur.val == targetSum){\n                path.add(cur.val);\n                ans.add(new ArrayList&lt;&gt;(path));\n                path.remove(path.size()-1);\n            }\n            return;\n        }\n\n        if(cur.left != null) {\n            path.add(cur.val);\n            traverse(cur.left,curSum+cur.val,targetSum);\n            path.remove(path.size()-1);\n        }\n        if(cur.right != null) {\n            path.add(cur.val);\n            traverse(cur.right,curSum+cur.val,targetSum);\n            path.remove(path.size()-1);\n        }\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_48","title":"\u9a8c\u8bc1\u5e73\u8861\u4e8c\u53c9\u6811","text":"<ol> <li>\u5e73\u8861\u4e8c\u53c9\u6811\uff1a\u5b9a\u4e49\uff1a\u6bcf\u4e2a\u70b9\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u503c\u7684\u7edd\u5bf9\u503c\u5c0f\u4e8e\u7b49\u4e8e1\uff0c\u5219\u79f0\u4e3a\u5e73\u8861\u4e8c\u53c9\u6811</li> <li>\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u5e03\u5c14\u503c</li> <li>\u5728\u6c42\u6bcf\u4e2a\u8282\u70b9\u7684\u9ad8\u5ea6\u7684\u65f6\u5019\uff0c\u4e00\u65e6\u53d1\u73b0\u5de6\u53f3\u5b50\u6811\u6ee1\u8db3\u5dee\u503c&gt;1\uff0c\u5c31\u76f4\u63a5\u6539\u53d8\u72b6\u6001\u3002</li> </ol> Text Only<pre><code>class Solution {\n    private boolean isBalance = true;\n    public boolean isBalanced(TreeNode root) {\n        int leftHeight = traverse(root);\n        return isBalance;\n    }\n    private int traverse(TreeNode cur){\n        if(cur == null) return 0;\n        if(cur.left == null &amp;&amp; cur.right == null){\n            return 1;\n        }\n        int leftHeight = traverse(cur.left);\n        int rightHeight = traverse(cur.right);\n        if(Math.abs(leftHeight-rightHeight)&gt;1) isBalance = false;\n        return Math.max(leftHeight,rightHeight)+1;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_49","title":"\u9a8c\u8bc1\u641c\u7d22\u4e8c\u53c9\u6811","text":"<ol> <li>\u6027\u8d28\uff1a\u641c\u7d22\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7684\u503c\u4e00\u5b9a\u662f\u6709\u5e8f\u7684\u3002\u4e2d\u5e8f\u904d\u5386\u6709\u5e8f\u7684\u4e8c\u53c9\u6811\u662f\u641c\u7d22\u4e8c\u53c9\u6811\u7684\u5145\u8981\u6761\u4ef6</li> <li>\u601d\u8def\uff1a\u901a\u8fc7\u9012\u5f52\u5230base case\u8fdb\u884c\u5224\u65ad</li> </ol>"},{"location":"LANG/DS-leetcode/#_50","title":"\u4f4d\u8fd0\u7b97","text":"<p>\u4f18\u52bf\uff1a\u5e38\u6570\u65f6\u95f4\u5f88\u597d\uff0c\u51e0\u4e4e\u548c\u8d4b\u503c\u64cd\u4f5c\u4e00\u6837\u3002</p> <p>\ud83d\udccc</p> <p>\u5341\u8fdb\u5236\u548c\u4e8c\u8fdb\u5236\u4e4b\u95f4\u7684\u8f6c\u6362</p> <p>\u5341\u8fdb\u5236\u8f6c\u6362\u4e3ax\u8fdb\u5236\uff1aInteger.toString(n,x);\uff0c\u9700\u8981\u6ce8\u610f\u8865\u5145\u524d\u9762\u76840</p> <p>x\u8fdb\u5236\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236:  Integer.parseInt(str,x);\u8fd8\u6709\u65e0\u7b26\u53f7\u6570\u7684Integer.parseUnsignedInt(str,x);</p> <ol> <li>leetcode 231\uff1a\u5224\u65ad\u4e00\u4e2a\u6574\u6570\u662f\u4e0d\u662f2\u7684\u5e42\u3002</li> <li>\u601d\u8def\uff1a2\u7684\u5e42\uff0c\u5219\u53ea\u6709\u67d0\u4e00\u4f4d\u662f1\uff0c\u5176\u4f59\u90fd\u662f0</li> </ol> <p>\ud83d\udc4b</p> <p>Brian Kernighan\u7b97\u6cd5\uff1a\u7528\u4e8e\u63d0\u53d6\u6700\u53f3\u4fa7\u76841\uff0c\u7ed3\u679c\u662f\u53ea\u6709\u4e4b\u524d\u7684\u6570\u7684\u6700\u9ad8\u4f4d\u76841\u7684\u6570</p> <p>n &amp; -n</p> <ol> <li>leetcode 326 \u5224\u65ad\u662f\u5426\u4e3a3\u7684\u5e42</li> <li>\u601d\u8def:\u901a\u8fc7\u627e\u51faint\u8303\u56f4\u51853\u7684\u6700\u5927\u6b21\u5e42\u662f3^19.\u7136\u540e\u8be5\u6570\u53ea\u542b\u67093\u4e00\u4e2a\u8d28\u6570\u56e0\u5b50\u3002\u6240\u4ee5\u53ea\u8981\u8be5\u6570%x==0,\u5219 x\u5fc5\u7136\u662f3\u7684\u5e42\u3002</li> </ol> <p>\ud83d\udc4b</p> <p>\u5982\u679c\u4e00\u4e2a\u6570m%n == 0\uff0c\u5219n\u4e00\u5b9a\u662fm\u7684\u56e0\u5b50\u3002</p> <ol> <li>leetcode 201\uff1a\u8fd4\u56de[x,y]\u533a\u95f4\u5185\u6240\u6709\u6570\u5b57&amp;\u7684\u7ed3\u679c</li> <li>\u601d\u8def\uff1a<ol> <li>\u5c06y\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\uff0c\u4f7f\u7528BK\u7b97\u6cd5\u8fdb\u884c\u5904\u7406\uff0c\u6bcf\u6b21\u5224\u65ad\u662f\u5426\u5927\u4e8ex\u3002</li> <li>\u5982\u679c\u6ee1\u8db3\uff0c\u5219\u5c06\u6700\u4f4e\u4f4d\u76841\u9664\u53bb\uff0c\u7ee7\u7eed\u5faa\u73af\u3002\u56e0\u4e3a\u5982\u679c\u8fd8\u662f\u5927\u4e8e\u7684\u8bdd\uff0c\u5219\u5fc5\u6709y-1\u4e5f\u5c31\u662f\u4f4e\u4f4d\u76840\u5168\u90e8\u53d8\u4e3a1\u7684\u60c5\u51b5\u5305\u542b\u5728\u533a\u95f4\uff0c\u6b64\u65f6\u8fdb\u884c&amp;\u7684\u7ed3\u679c\u5fc5\u7136\u662f0,\u4fdd\u4e0d\u4f4f1\u3002</li> <li>\u7b80\u5355\u4e00\u53e5\uff0c\u5c31\u662f\u6c42\u533a\u95f4\u8fb9\u4e0a\u7684\u6570\u5b57\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002</li> </ol> </li> </ol> <p></p> Text Only<pre><code>    public static int rangeBitwiseAnd(int left, int right) {\n        while (left &lt; right) {\n            right -= right &amp; -right;\n        }\n        return right;\n    }\n</code></pre> <ol> <li>leetcode 190\u98a0\u5012\u4e8c\u8fdb\u5236\u4f4d</li> </ol> <p>\u601d\u8def\uff1a\u8fd8\u6709\u66f4\u7b80\u5355\u7684API\uff1aInteger.reverse(n)</p> Text Only<pre><code>class Solution {\n    // you need treat n as an unsigned value\n    public int reverseBits(int n) {\n        StringBuilder ans = new StringBuilder();\n        String temp = Integer.toBinaryString(n);\n        for(int i=0; i&lt;32-temp.length();i++){\n            ans.append('0');\n        }\n        ans.append(temp);\n        return Integer.parseUnsignedInt(ans.reverse().toString(),2);\n    }\n}\n</code></pre> <ol> <li>leetcode 461\u6c49\u660e\u8ddd\u79bb</li> <li>\u6c49\u660e\u8ddd\u79bb\u662f\u4f7f\u7528\u5728\u6570\u636e\u4f20\u8f93\u5dee\u9519\u63a7\u5236\u7f16\u7801\u91cc\u9762\u7684\uff0c\u6c49\u660e\u8ddd\u79bb\u662f\u4e00\u4e2a\u6982\u5ff5\uff0c\u5b83\u8868\u793a\u4e24\u4e2a\uff08\u76f8\u540c\u957f\u5ea6\uff09\u5b57\u7b26\u4e32\u5bf9\u5e94\u4f4d\u7f6e\u7684\u4e0d\u540c\u5b57\u7b26\u7684\u6570\u91cf\uff0c\u6211\u4eec\u4ee5d\uff08x,y\uff09\u8868\u793a\u4e24\u4e2a\u5b57x,y\u4e4b\u95f4\u7684\u6c49\u660e\u8ddd\u79bb\u3002\u5bf9\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u5e76\u7edf\u8ba1\u7ed3\u679c\u4e3a1\u7684\u4e2a\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u662f\u6c49\u660e\u8ddd\u79bb\u3002</li> <li>\u601d\u8def\uff1a\u4f7f\u75281&lt;&lt;i\uff0c\u83b7\u53d6x\u4e0ey\u7684\u6bcf\u4e00\u4f4d\u6570\uff0c\u5982\u679c\u4e0d\u540c,cnt++</li> </ol> Text Only<pre><code>class Solution {\n    public int hammingDistance(int x, int y) {\n        int cnt = 0;\n        for(int i=0; i&lt;32;i++){\n            if((x&amp;(1&lt;&lt;i)) != (y&amp;(1&lt;&lt;i))) cnt++;\n        }\n        return cnt;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#master","title":"\u9012\u5f52\u548cmaster\u516c\u5f0f","text":""},{"location":"LANG/DS-leetcode/#_51","title":"\u9012\u5f52\uff1a","text":"<p>\u5177\u4f53\u5185\u5bb9\uff1a\u9012\u5f52 = \u9012\u5f52\u903b\u8f91+ base case\u3002\u591a\u753b\u9012\u5f52\u8c03\u7528\u56fe\u3002</p> <p>\u9012\u5f52\u5fc5\u7136\u53ef\u4ee5\u8f6c\u6362\u4e3a\u975e\u9012\u5f52\uff0c\u8fd9\u65f6\u5019\u5c31\u628a\u7cfb\u7edf\u6808\u7a7a\u95f4\u7684\u4f7f\u7528\u8f6c\u53d8\u4e3a\u5806\u5185\u5b58\u7a7a\u95f4\u3002\u540c\u65f6\u53ef\u4ee5\u66f4\u7ec6\u7c92\u5ea6\u5730\u63a7\u5236\u3002\u5de5\u7a0b\u4e0a\u5fc5\u7136\u8981\u6539\u4e3a\u975e\u9012\u5f52\u3002\u9664\u975e\u5c42\u6570\u7279\u522b\u5c11\u3002</p> <p>\u5e38\u89c1\u7684\u4e0d\u7528\u6539\u7684\u9012\u5f52\u6709:\u5f52\u5e76\u6392\u5e8f\uff0c\u5feb\u901f\u6392\u5e8f\uff0c\u7ebf\u6bb5\u6811\uff0c\u5f88\u591a\u5e73\u8861\u6811\u3002</p> Text Only<pre><code>    public static int f(int[] arr, int l, int r) {\n        //base case\n        if(l == r){\n            return arr[l];\n        }\n        int m = (l + r)/2;\n        int lmax = f(arr,l,m);\n        int rmax = f(arr,m+1, r);\n        return Math.max(lmax,rmax);\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#master_1","title":"master\u516c\u5f0f","text":"<p>\u57fa\u672c\u539f\u7406\uff1a\u540e\u9762\u7684O()\u9879\u5c31\u662f\u5176\u4f59\u4ee3\u7801\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e5f\u5c31\u662f\u9664\u4e86\u9012\u5f52\u8c03\u7528\u7684\u90e8\u5206\u3002\u540c\u65f6\u6700\u7ec8\u662flog(b,a)\u548cc\u8fdb\u884c\u5bf9\u6bd4\uff0c\u8c01\u5927\u8c01\u505a\u6307\u6570\u3002\u5982\u679c\u76f8\u7b49\uff0c\u5219c*logn\u505a\u6307\u6570\u3002</p> <p>\u6ce8\u610f\u4e8b\u9879\uff1a\u4f7f\u7528\u9700\u8981\u6ce8\u610f\u5de6\u53f3\u4e24\u4fa7\u9012\u5f52\u8c03\u7528\u9700\u8981\u89c4\u6a21\u76f8\u540c\uff0c\u90fd\u662fT(n/b)</p> <p></p> <p>\u4f8b\u5b50\uff1a\u5047\u8bbe\u6c42[l,r]\u8303\u56f4\u4e0a\u7684\u6700\u5927\u503c\uff0c\u4e00\u5171n\u4e2a\u6570\u3002</p> <p>\u5219\u5982\u679c\u91c7\u7528\u9012\u5f52\u6c42\u6700\u503c\uff0c\u5219T(N) = 2* T(N/2) + O(1)\u3002\u8fd9\u91cca=2,b=2,c=0</p> <p>\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\uff1aO(n^1) = O(n)</p>"},{"location":"LANG/DS-leetcode/#_52","title":"\u9012\u5f52\u9ad8\u9891\u9898\u76ee\u603b\u7ed3","text":"<p>\u9012\u5f52\u53ef\u4ee5\u5206\u4e3a\u5e26\u8def\u5f84\u7684\u9012\u5f52\u548c\u4e0d\u5e26\u8def\u5f84\u7684\u9012\u5f52\uff0c\u800c\u5927\u90e8\u5206\u7684dp,\u72b6\u6001\u538b\u7f29dp\u90fd\u662f\u8ba4\u4e3a\u662f\u8def\u5f84\u7b80\u5316 \u3002\u4efb\u4f55\u9012\u5f52\u90fd\u662fdfs\u5e76\u4e14\u975e\u5e38\u7075\u6d3b\u3002</p> <ol> <li>\u8fd4\u56de\u5b57\u7b26\u4e32\u6240\u6709\u5b50\u5e8f\u5217\uff0c\u5e76\u4e14\u5b50\u5e8f\u5217\u8981\u6c42\u53bb\u91cd</li> <li>abc\u60c5\u51b5</li> <li>abbc\u60c5\u51b5</li> </ol> Text Only<pre><code>public class Solution {\n\n    public String[] generatePermutation (String s) {\n        // write code here\n        char[] chars = s.toCharArray();\n        StringBuilder path = new StringBuilder();\n        HashSet&lt;String&gt; set = new HashSet&lt;&gt;();\n        f1(chars,0,path,set);\n        String[] ans = new String[set.size()];\n        int i = 0;\n        for(String item : set){\n            ans[i++] = item;\n        } \n        return ans;\n    }\n    //\u6709\u72b6\u6001\u6062\u590d\u7248\u672c\n    private void f1(char[] s, int i, StringBuilder path,HashSet&lt;String&gt; set){\n        if(i == s.length){\n            set.add(path.toString());\n            return;\n        }\n        //\u6709s[i]\n        path.append(s[i]);\n        f1(s,i+1,path,set);\n        path.deleteCharAt(path.length()-1);\n        //\u6ca1\u6709s[i]\n        f1(s,i+1,path,set);\n    }\n    //\u4e0d\u7528\u72b6\u6001\u6062\u590d\u7684\u65b9\u6cd5\uff0c\u5c06path\u53d8\u4e3a\u6570\u7ec4\u8fdb\u884c\u4fdd\u5b58\n    public static void f2(char[] s, int i, char[] path, int size, HashSet&lt;String&gt; set) {\n        if (i == s.length) {\n            set.add(String.valueOf(path, 0, size));\n        } else {\n            path[size] = s[i];\n            f2(s, i + 1, path, size + 1, set);\n            f2(s, i + 1, path, size, set);\n        }\n    }\n}\n</code></pre> <ol> <li>\u8fd4\u56de\u6570\u7ec4\u6240\u6709\u5b50\u96c6</li> <li>\u5b50\u96c6\u5c31\u662f\u4ece\u6570\u7ec4\u4e2d\u968f\u673a\u6311\u9009\u4e00\u4e9b\u5143\u7d20(\u5e42\u96c6)</li> <li>\u601d\u8def\uff1a<ol> <li>\u5148\u6392\u5e8f\uff0c\u4e4b\u540e\u76f8\u540c\u7684\u6570\u5b57\u5728\u4e00\u8d77\u3002</li> <li>\u4ee5\u76f8\u540c\u6570\u5b57\u4e3a\u4e00\u7ec4\uff0c\u5206\u7c7b\u8ba8\u8bba\u8be5\u6570\u7ec4\u4e0d\u540c\u6570\u91cf\u60c5\u51b5\u4e0b\u7684\u60c5\u51b5    3.</li> </ol> </li> </ol>"},{"location":"LANG/DS-leetcode/#_53","title":"\u7b14\u8bd5\u4e2d\u7684\u8f93\u5165\u8f93\u51fa","text":""},{"location":"LANG/DS-leetcode/#_54","title":"\u6838\u5fc3\u4ee3\u7801\u6a21\u5f0f\uff1a","text":"<p>\u7ec4\u6210\uff1a\u4ee3\u7801\uff0cdata\u6587\u4ef6\uff0canswer\u6587\u4ef6</p> <p>\u89c4\u5219\uff1a\u53ea\u7528\u586b\u903b\u8f91\u5c31\u53ef\u4ee5\uff0c\u4e0d\u80fd\u6539\u7c7b\u540d\uff0c\u65b9\u6cd5\u540d\uff0c\u53c2\u6570\u7c7b\u578b</p>"},{"location":"LANG/DS-leetcode/#acm","title":"acm\u6a21\u5f0f\uff1a","text":"<p>\u7ec4\u6210:data\u6587\u4ef6\uff0canswer\u6587\u4ef6\u3002</p> <p>\u89c4\u5219\uff1a\u5199code\u8bfb\u53d6data\u6587\u4ef6\uff0c\u8f93\u51fa\u7ed3\u679c\u5230\u540e\u53f0\u548canswer\u6587\u4ef6\u5bf9\u6bd4\u3002</p> <ol> <li>\u8f93\u5165\uff1a</li> <li>Scanner\uff1a\u4e00\u6b21\u8bfb\u4e00\u884c\u6570\u636e</li> <li>BufferReader\uff1a\u4e00\u6b21\u8bfb\u591a\u884c\u6570\u636e\uff0c\u51cf\u5c11IO\u4ea4\u4e92</li> <li>StreamTokenizer:\u57fa\u4e8eBufferReader\u6784\u5efa\uff0c\u5728BufferReader\u4e2d\u4e00\u4e2a\u4e00\u4e2a\u8bfb\u53d6\u6570\u7ec4\uff0c\u6807\u8bc6\u7b26\uff0c\u5b57\u7b26\u4e32\u7b49\u3002\u4f1a\u81ea\u52a8\u5ffd\u7565\u6389\u6240\u6709\u7684\u7a7a\u683c\u548c\u56de\u8f66\u3002</li> <li>in.nval:\u8bfb\u53d6\u6574\u6570\u503c\u3002in.sval:\u8bfb\u53d6\u5b57\u7b26</li> </ol> Text Only<pre><code>    public static void main(String[] args) throws IOException {\n        // \u628a\u6587\u4ef6\u91cc\u7684\u5185\u5bb9\uff0cload\u8fdb\u6765\uff0c\u4fdd\u5b58\u5728\u5185\u5b58\u91cc\uff0c\u5f88\u9ad8\u6548\uff0c\u5f88\u7ecf\u6d4e\uff0c\u6258\u7ba1\u7684\u5f88\u597d\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        // \u4e00\u4e2a\u4e00\u4e2a\u8bfb\u6570\u5b57\n        StreamTokenizer in = new StreamTokenizer(br);\n        // \u63d0\u4ea4\u7b54\u6848\u7684\u65f6\u5019\u7528\u7684\uff0c\u4e5f\u662f\u4e00\u4e2a\u5185\u5b58\u6258\u7ba1\u533a\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n\n\n        while (in.nextToken() != StreamTokenizer.TT_EOF) { // \u6587\u4ef6\u6ca1\u6709\u7ed3\u675f\u5c31\u7ee7\u7eed\n            //\u4ee3\u7801\u903b\u8f91\n            in.nextToken():\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20(\u81ea\u52a8\u5ffd\u7565\u56de\u8f66\u6362\u884c\u7b26)\n            out.println(maxSumSubmatrix(mat, n, m));\n        }\n        out.flush();\n        br.close();\n        out.close();\n    }\n</code></pre> <ol> <li>\u8f93\u51fa</li> <li>System.out.println():\u4e0d\u63a8\u8350\uff0c\u56e0\u4e3aIO\u6548\u7387\u4f4e\uff0c\u4e00\u6b21\u5bf9\u4e00\u4e2a\u6d4b\u8bd5\u6570\u636e</li> <li>PrintWritter()\uff1a\u6bcf\u6b21\u90fd\u5c06\u6570\u636e\u6253\u5370\u5230\u5185\u5b58\u4e2d\u3002\u5f53\u6570\u636e\u91cf\u8db3\u591f\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528flush\u65b9\u6cd5\u8fdb\u884c\u4e00\u6b21\u6027</li> <li>\u7a7a\u95f4\uff1a</li> <li>\u4e0d\u8bba\u662f\u6570\u636e\u7a7a\u95f4\u8fd8\u662f\u8f85\u52a9\u7a7a\u95f4\uff0c\u90fd\u63a8\u8350\u4f7f\u7528\u9759\u6001\u5f00\u8f9f\uff0c\u6ce8\u610f\u6570\u636e\u91cf\u4e0e\u590d\u7528(\u4f8b\u5982\u4f7f\u7528Arrays.fill(arr,0,m,0)\u7b49\u65b9\u6cd5\u8fdb\u884c\u6e05\u7a7a)\u5373\u53ef\u3002</li> </ol>"},{"location":"LANG/DS-leetcode/#_55","title":"\u5f52\u5e76\uff1a","text":""},{"location":"LANG/DS-leetcode/#_56","title":"\u5f52\u5e76\u6392\u5e8f\uff1a","text":"<ol> <li>\u65f6\u95f4\u590d\u6742\u5ea6O(n*logn)\uff1aT(n) = 2*T(n/2) + O(n),\u5219log(2,2)=1\uff0c\u5219\u4e3aO(n^1 * logn) = O(nlogn)</li> <li>\u6838\u5fc3\uff1a\u9012\u5f52</li> <li>\u6b65\u9aa4\uff1a</li> <li>\u5148\u9012\u5f52\u8c03\u7528\uff0c\u5728\u8fdb\u884cmerge\u5e76\u5237\u56de\u539f\u6570\u7ec4\u3002</li> <li>\u6bcf\u6b21\u8fdb\u884c\u7684merge\u90fd\u662f\u5148\u5de6\u53f3\u6307\u9488\u5206\u522b\u6307\u5411\u5de6\u53f3\u4e24\u4fa7\u7684\u5df2\u7ecf\u6709\u5e8f\u7684\u7ed3\u679c\uff0cmerge\u5199\u5165help\u6570\u7ec4\u4e4b\u540e\uff0c\u5982\u679c\u4e00\u4fa7\u6709\u5269\u4f59\u5219\u76f4\u63a5\u5199\u5165\u3002\u6700\u540e\u5237\u56de\u539f\u6570\u7ec4\u3002</li> <li>\u4e3a\u4e86\u5f52\u5e76\u6392\u5e8f\u7684\u7a33\u5b9a\u6027\uff0c\u5219\u89c4\u5b9a\u5f53merge\u7684\u65f6\u5019\u5148copy\u5de6\u4fa7\u7684\u6570\u5230help\u6570\u7ec4\u4e2d\u3002</li> </ol> Text Only<pre><code>    // \u5f52\u5e76\u6392\u5e8f\u9012\u5f52\u7248\n    public static void mergeSort1(int[] arr) {\n        //\u5bf9[0,arr_len-1]\u8fdb\u884c\u5f52\u5e76\u6392\u5e8f\n        sort(arr, 0, arr.length - 1);\n    }\n\n    public static void sort(int[] arr, int l, int r) {\n        //\u76f4\u5230base case\u3002\u53ea\u6709\u4e00\u4e2a\u6570\u5c31\u4e0d\u7528\u6392\u5e8f\n        if (l == r) {\n            return;\n        }\n        int m = (l + r) / 2;\n        //\u9012\u5f52\u8c03\u7528\u90e8\u5206\n        sort(arr, l, m);  \n        sort(arr, m + 1, r);\n        //\u5408\u5e76\u90e8\u5206\n        merge(arr, l, m, r);\n    }\n\n    //merge\u662f\u975e\u9012\u5f52\u65b9\u6cd5\n    //\u4f20\u5165\u7684\u4e09\u4e2a\u53c2\u6570\uff0c\u53ef\u4ee5\u6807\u8bb0[1,m],[m+1,r]\u7684\u5de6\u53f3\u4e24\u4e2a\u9700\u8981merge\u7684\u6570\u7ec4\n    //\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u6392\u5e8f\n    public static void merge(int[] arr, int l, int m, int r) {\n        int i = l;\n\n        int a = l;\n        int b = m + 1;\n        //\u5f53\u4e24\u8fb9\u90fd\u6ca1\u6709\u904d\u5386\u5b8c\u7684\u65f6\u5019\n        while (a &lt;= m &amp;&amp; b &lt;= r) {   \n            help[i++] = arr[a] &lt;= arr[b] ? arr[a++] : arr[b++];\n        }\n        while (a &lt;= m) {\n            help[i++] = arr[a++];\n        }\n        while (b &lt;= r) {\n            help[i++] = arr[b++];\n        }\n        //\u5237\u56de\u539f\u6570\u7ec4\n        for (i = l; i &lt;= r; i++) {\n            arr[i] = help[i];\n        }\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_57","title":"\u5dee\u5206","text":""},{"location":"LANG/DS-leetcode/#_58","title":"\u4e00\u7ef4\u5dee\u5206","text":"<ol> <li>\u573a\u666f\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6570\u7ec4\uff0c\u8981\u591a\u6b21\u5728\u4e0d\u540c\u533a\u95f4\u5feb\u901f\u5b8c\u6210\u6574\u4f53\u7684\u52a0\u51cf\u3002</li> <li>\u539f\u7406\uff1a</li> </ol> <p>\u524d\u7f00\u548c\u6570\u7ec4\uff1a\u524d\u7f00\u548c\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u300c\u6570\u5217\u7684\u524d n \u9879\u7684\u548c\u300d\u3002</p> <p>\u5dee\u5206\u6570\u7ec4\u5bf9\u5e94\u7684\u6982\u5ff5\u662f\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u5bf9\u4e8e\u6570\u7ec4 [1,2,2,4]\uff0c\u5176\u5dee\u5206\u6570\u7ec4\u4e3a [1,1,0,2]\uff0c\u5dee\u5206\u6570\u7ec4\u7684\u7b2c i \u4e2a\u6570\u5373\u4e3a\u539f\u6570\u7ec4\u7684\u7b2c i\u22121 \u4e2a\u5143\u7d20\u548c\u7b2c i \u4e2a\u5143\u7d20\u7684\u5dee\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5bf9\u5dee\u5206\u6570\u7ec4\u6c42\u524d\u7f00\u548c\u5373\u53ef\u5f97\u5230\u539f\u6570\u7ec4\u3002</p> <p>\u5dee\u5206\u6570\u7ec4\u7684\u6027\u8d28\u662f\uff0c\u5f53\u6211\u4eec\u5e0c\u671b\u5bf9\u539f\u6570\u7ec4\u7684\u67d0\u4e00\u4e2a\u533a\u95f4 [l,r] \u65bd\u52a0\u4e00\u4e2a\u589e\u91cfinc \u65f6\uff0c\u5dee\u5206\u6570\u7ec4 d \u5bf9\u5e94\u7684\u6539\u53d8\u662f\uff1ad[l] \u589e\u52a0 inc\uff0cd[r+1] \u51cf\u5c11 inc(\u7528\u4e8e\u62b5\u6d88\u7ed9\u524d\u9762\u533a\u95f4+inc\u7684\u6548\u679c)\u3002\u8fd9\u6837\u5bf9\u4e8e\u533a\u95f4\u7684\u4fee\u6539\u5c31\u53d8\u4e3a\u4e86\u5bf9\u4e8e\u4e24\u4e2a\u4f4d\u7f6e\u7684\u4fee\u6539\u3002\u5e76\u4e14\u8fd9\u79cd\u4fee\u6539\u662f\u53ef\u4ee5\u53e0\u52a0\u7684\uff0c\u5373\u5f53\u6211\u4eec\u591a\u6b21\u5bf9\u539f\u6570\u7ec4\u7684\u4e0d\u540c\u533a\u95f4\u65bd\u52a0\u4e0d\u540c\u7684\u589e\u91cf\uff0c\u6211\u4eec\u53ea\u8981\u6309\u89c4\u5219\u4fee\u6539\u5dee\u5206\u6570\u7ec4\u5373\u53ef\u3002</p> <ol> <li>\u5bf9\u4e8e\u539f\u6570\u7ec4\uff0c\u5982\u679c\u8981\u5728[L,R]\u8303\u56f4\u4e0a+v,</li> <li>\u53ea\u9700\u8981\u5728\u5bf9\u5e94\u7684\u5dee\u5206\u6570\u7ec4\u4e0a\u8ba9[L]-v, [R+1]+v</li> <li>\u7136\u540e\u5bf9\u5dee\u5206\u6570\u7ec4\u8fdb\u884c\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u5f97\u5230\u7ed3\u679c</li> <li>\u6a21\u677f\u9898\uff1a</li> </ol> <p>\u8fd9\u91cc\u6709 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;n&lt;/span&gt;&lt;/span&gt;</code> \u4e2a\u822a\u73ed\uff0c\u5b83\u4eec\u5206\u522b\u4ece <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;</code> \u5230 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;n&lt;/span&gt;&lt;/span&gt;</code> \u8fdb\u884c\u7f16\u53f7\u3002</p> <p>\u6709\u4e00\u4efd\u822a\u73ed\u9884\u8ba2\u8868 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;bookings&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u8868\u4e2d\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;</code> \u6761\u9884\u8ba2\u8bb0\u5f55 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;bookings[i] = [first&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt;, last&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt;, seats&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;</code> \u610f\u5473\u7740\u5728\u4ece <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;first&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;</code> \u5230 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;last&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;</code> \uff08\u5305\u542b <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;first&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;</code> \u548c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;last&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;</code> \uff09\u7684 \u6bcf\u4e2a\u822a\u73ed \u4e0a\u9884\u8ba2\u4e86 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;seats&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;</code> \u4e2a\u5ea7\u4f4d\u3002</p> <p>\u8bf7\u4f60\u8fd4\u56de\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;n&lt;/span&gt;&lt;/span&gt;</code> \u7684\u6570\u7ec4 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;answer&lt;/span&gt;&lt;/span&gt;</code>\uff0c\u91cc\u9762\u7684\u5143\u7d20\u662f\u6bcf\u4e2a\u822a\u73ed\u9884\u5b9a\u7684\u5ea7\u4f4d\u603b\u6570</p> Text Only<pre><code>class Solution {\n    public int[] corpFlightBookings(int[][] bookings, int n) {\n        int[] cnt = new int[n+1];\n\n        for(int[] info : bookings){\n            int l = info[0], r = info[1];\n            int num = info[2];\n            cnt[l] += num;\n            //\u6b64\u5904\u8fdb\u884c\u7279\u5224\uff0c\u6216\u8005\u5f00cnt\u7684\u65f6\u5019\u591a\u5f00\u4e00\u4e2a\n            if(r+1&lt;cnt.length) cnt[r+1] -=  num;\n        }\n        for(int i=1; i&lt;cnt.length; i++){\n            cnt[i] += cnt[i-1];\n        }\n        return Arrays.copyOfRange(cnt, 1, n+1);\n    }\n}\n</code></pre> <ol> <li>\u4e00\u4f4d\u5b50\u6570\u7ec4\u5f02\u6216\u503c</li> <li>\u89e3\u51b3\u529e\u6cd5\u5b8c\u5168\u540c\u4e00\u7ef4\u524d\u7f00\u548c</li> <li>\u5229\u7528\u5f02\u6216\u7684\u6027\u8d28<ol> <li>0^x = x</li> <li>\u4ea4\u6362\u5f8b</li> <li>\u7ed3\u5408\u5f8b</li> </ol> </li> </ol> <p></p> Text Only<pre><code>  def xorQueries(arr: Array[Int], queries: Array[Array[Int]]): Array[Int] = {\n    val prefix: Array[Int] = arr.scanLeft(0)((x, y) =&gt; (x ^ y))\n    //\u6ce8\u610fscala\u7684scanLeft\u7ed3\u679c\u7684\u5f00\u5934\u662f\u521d\u59cb\u503c\uff0c\u5219\u9700\u8981r+1 - l \u800c\u4e0d\u662fr-(l-1)   \n    for(q &lt;- queries) yield prefix(q(1)+1) ^ prefix(q(0))\n  }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_59","title":"\u4e8c\u7ef4\u5dee\u5206","text":"<p>\u4e8c\u7ef4\u524d\u7f00\u548c</p> <ol> <li>\u4f8b\u5b50\uff1a</li> <li>\u6c42\u5feb\u901f\u6c42\u5f97\u4e0b\u9762\u77e9\u9635\u4e0d\u540c\u4f4d\u7f6e\u5b50\u77e9\u9635((a,b)-&gt;(c,d))\u7684\u5143\u7d20\u548c</li> <li>\u4f7f\u7528\u4e8c\u7ef4\u524d\u7f00\u548c\u6765\u5904\u7406\uff0c\u4f7f\u5f97\u83b7\u5f97\u7ed3\u679c\u7684\u65f6\u95f4\u662fO(1)</li> <li>\u6b65\u9aa4\uff1a<ol> <li>\u5148\u9884\u5904\u7406sum\u6570\u7ec4</li> <li>\u4e0d\u540c\u7684\u5b50\u77e9\u9635\u90fd\u53ef\u4ee5\u901a\u8fc7sum\u6570\u7ec4\u83b7\u5f97</li> </ol> </li> </ol> 3 1 -2 5 -3 4 3 6 2 <ol> <li>\u539f\u7406\uff1a</li> <li>\u4f7f\u7528\u5bb9\u65a5\u539f\u7406</li> <li>\u5b9e\u9645\u4e0a\u7ecf\u5e38\u901a\u8fc7\u8865sum\u7684\u7b2c0\u884c\u548c\u7b2c0\u5217\u6765\u9632\u6b62\u989d\u5916\u7684\u8fb9\u754c\u5224\u65ad\u3002\u989d\u5916\u7684\u4f4d\u7f6e\u5168\u90e8\u8bbe\u7f6e\u4e3a0\uff0c\u9632\u6b62\u5f71\u54cd\u64cd\u4f5c\u3002</li> </ol> <p></p> <ol> <li>\u6a21\u677f\u9898\uff1a</li> </ol> Text Only<pre><code>class NumMatrix {\n    public int[][] sum;\n\n    public NumMatrix(int[][] matrix) {\n        int m = matrix.length;\n        int n = matrix[0].length;\n        sum = new int[m + 1][n + 1];\n        // \u8fdb\u884c\u6269\u5145\n        for (int i = 0; i &lt; m; i++) {\n            for (int j = 0; j &lt; n; j++) {\n                sum[i + 1][j + 1] = matrix[i][j];\n            }\n        }\n        // \u9884\u5904\u7406sum\n        for (int i = 1; i &lt;= m; i++) {\n            for (int j = 1; j &lt;= n; j++) {\n                sum[i][j] += sum[i][j - 1] + sum[i - 1][j] - sum[i - 1][j - 1];\n            }\n        }\n    }\n\n    public int sumRegion(int a, int b, int c, int d) {\n        int x1 = a + 1, y1 = b + 1;\n        int x2 = c + 1, y2 = d + 1;\n        return sum[x2][y2] - sum[x1 - 1][y2] - sum[x2][y1 - 1] + sum[x1 - 1][y1 - 1];\n    }\n}\n</code></pre> <ol> <li>leetcode 1139</li> <li>\u7ed9\u4f60\u4e00\u4e2a\u7531\u82e5\u5e72 <code>&lt;span&gt;0&lt;/span&gt;</code> \u548c <code>&lt;span&gt;1&lt;/span&gt;</code> \u7ec4\u6210\u7684\u4e8c\u7ef4\u7f51\u683c <code>&lt;span&gt;grid&lt;/span&gt;</code>\uff0c\u8bf7\u4f60\u627e\u51fa\u8fb9\u754c\u5168\u90e8\u7531 <code>&lt;span&gt;1&lt;/span&gt;</code> \u7ec4\u6210\u7684\u6700\u5927 \u6b63\u65b9\u5f62 \u5b50\u7f51\u683c\uff0c\u5e76\u8fd4\u56de\u8be5\u5b50\u7f51\u683c\u4e2d\u7684\u5143\u7d20\u6570\u91cf\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de <code>&lt;span&gt;0&lt;/span&gt;</code></li> <li>\u601d\u8def\uff1a<ol> <li>\u66b4\u529b\uff1a<ol> <li>\u65f6\u95f4\u590d\u6742\u5ea6O(m*n^2)\uff0c\u5176\u4e2dn&lt;m</li> </ol> </li> <li>\u4f18\u5316\u6b65\u9aa4\uff1a\u4f7f\u7528\u524d\u7f00\u5408</li> </ol> </li> </ol> Text Only<pre><code>class Solution {\n    public int largest1BorderedSquare(int[][] grid) {\n        int ans = 0;\n        int m = grid.length;\n        int n = grid[0].length;\n        //(i,j,l)\uff1a\u662f\u4ee5(i,j)\u5f00\u5934\uff0c\u5927\u5c0f\u4e3al\u7684\u77e9\u9635\u3002\n        //\u5219i\u8303\u56f4\u662f[0,m-l)\u3002j\u8303\u56f4\u662f[0,n-1)\n        int limit = Math.min(m,n);\n        for(int l = limit; l&gt;=1;l--){\n            for(int i=0; i&lt;=m-l; i++){\n                for(int j=0; j&lt;=n-l;j++){\n                    if(check(i,j,l,grid)){\n                        ans = Math.max(l*l,ans);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n    public boolean check(int a, int b, int l, int[][] grid){\n        //\u68c0\u67e5\u8fb9\u754c(\u7ad6\u7740\u7684)\n        for(int i=a;i&lt;a+l;i++){\n            if(grid[i][b] == 0) return false;\n            if(grid[i][b+l-1] == 0) return false;\n        }\n        //\u6a2a\u7740\u7684\n        for(int i=b; i&lt;b+l;i++){\n            if(grid[a][i] == 0) return false;\n            if(grid[a+l-1][i] == 0) return false;\n        }\n        return true;\n    }\n}\n//\u4f7f\u7528\u524d\u7f00\u548c\nclass Solution {\n    public int largest1BorderedSquare(int[][] grid) {\n        int ans = 0;\n        int m = grid.length;\n        int n = grid[0].length;\n        int limit = Math.min(m,n);\n        for(int l = limit; l&gt;=1;l--){\n            for(int i=0; i&lt;=m-l; i++){\n                for(int j=0; j&lt;=n-l;j++){\n                    if(check(i,j,l,grid)){\n                        return l*l;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n    public boolean check(int a, int b, int l, int[][] grid){\n        NumMatrix tool = new NumMatrix(grid);\n        int x1=a, y1=b;\n        int x2=a+l-1, y2=b+l-1;\n        int sum1 = tool.sumRegion(x1, y1, x2, y2);\n        int sum2 = 0;\n        if(l==1){\n            return grid[a][b] == 1;\n        }\n        if(l&gt;=3) sum2 = tool.sumRegion(x1+1, y1+1, x2-1, y2-1);\n        if(sum1-sum2 != 4*l-4) return false;\n        return true;\n    }\n}\n\nclass NumMatrix {\n    public int[][] sum;\n\n    public NumMatrix(int[][] matrix) {\n        int m = matrix.length;\n        int n = matrix[0].length;\n        sum = new int[m + 1][n + 1];\n        for(int i=0 ;i&lt;m+1;i++){\n            Arrays.fill(sum[i],0);\n        }\n        // \u8fdb\u884c\u6269\u5145\n        for (int i = 0; i &lt; m; i++) {\n            for (int j = 0; j &lt; n; j++) {\n                sum[i + 1][j + 1] = matrix[i][j];\n            }\n        }\n        // \u9884\u5904\u7406sum\n        for (int i = 1; i &lt;= m; i++) {\n            for (int j = 1; j &lt;= n; j++) {\n                sum[i][j] += sum[i][j - 1] + sum[i - 1][j] - sum[i - 1][j - 1];\n            }\n        }\n    }\n\n    public int sumRegion(int a, int b, int c, int d) {\n        int x1 = a + 1, y1 = b + 1;\n        int x2 = c + 1, y2 = d + 1;\n        return sum[x2][y2] - sum[x1 - 1][y2] - sum[x2][y1 - 1] + sum[x1 - 1][y1 - 1];\n    }\n}\n</code></pre> <p>\u4e8c\u7ef4\u5dee\u5206</p> <ol> <li>\u573a\u666f\uff1a(a,b)-&gt;(c,d)\u7684\u5b50\u77e9\u9635\u8fdb\u884c\u5f88\u591a\u6b21\u7684\u52a0\u51cf\u64cd\u4f5c</li> <li>\u539f\u7406\uff1a</li> <li>\u5982\u679c\u8981\u5728(1,1)-&gt;(2,2)\u7edf\u4e00\u52a03\uff0c\u9700\u8981\u5728\u5982\u4e0b\u4f4d\u7f6e\u8fdb\u884c\u64cd\u4f5c</li> <li>\u540c\u6837\u8981\u4f7f\u7528\u4e00\u57080\u628a\u771f\u5b9e\u6570\u636e\u8fdb\u884c\u6269\u5145\uff0c\u9632\u6b62\u8fb9\u754c\u60c5\u51b5</li> <li>\u8bfb\u53d6\u539f\u59cb\u77e9\u9635\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5355\u4e2a\u5143\u7d20\u7684\u5dee\u5206\u8fdb\u884c\u66ff\u4ee3</li> </ol> <p></p> <ol> <li>\u6a21\u677f\uff1a</li> </ol> Text Only<pre><code>import java.util.*;\nimport java.io.*;\n\nclass Main {\n    public static int MAXM = 1005;\n    public static int MAXN = 1005;\n    public static long[][] diff = new long[MAXM][MAXN];\n    public static int n, m, q;\n    public static void main(String[] args) throws IOException {\n\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StreamTokenizer in = new StreamTokenizer(br);\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n        while (in.nextToken() != StreamTokenizer.TT_EOF) {\n            n = (int)in.nval;\n            in.nextToken();\n            m = (int)in.nval;\n            in.nextToken();\n            q = (int)in.nval;\n            for (int i = 1; i &lt;= n; i++) {\n                for (int j = 1; j &lt;= m; j++) {\n                    in.nextToken();\n                    //\u5fc5\u987b\u8981\u7528\u540c\u6837\u7684\u65b9\u5f0f\u8fdb\u884c\u6dfb\u52a0\u6570\u636e\uff0c\u5426\u5219\u7ed3\u6784\u4f1a\u4e71\n                    add(i, j, i, j, (int)in.nval);\n                }\n            }\n            for (int i = 0; i &lt; q; i++) {\n                in.nextToken();\n                int a = (int)in.nval;\n                in.nextToken();\n                int b = (int)in.nval;\n                in.nextToken();\n                int c = (int)in.nval;\n                in.nextToken();\n                int d = (int)in.nval;\n                in.nextToken();\n                int k = (int)in.nval;\n                add(a, b, c, d, k);\n            }\n            build();\n            for(int i=1;i&lt;=n;i++){\n                out.print(diff[i][1]);\n                for(int j=2; j&lt;=m;j++){\n                    out.print(\" \" + diff[i][j]);\n                }\n                out.println();\n            }\n            //\u9632\u6b62\u4e0b\u4e00\u4efd\u6d4b\u8bd5\u6570\u636e\u88ab\u4e0a\u4e00\u7ec4\u5e72\u6270\n            clear();\n        }\n        out.flush();\n        br.close();\n        out.close();\n    }\n    public static void add(int a, int b, int c, int d, int k) {\n        diff[a][b] += k;\n        diff[a][d + 1] -= k;\n        diff[c + 1][b] -= k;\n        diff[c + 1][d + 1] += k;\n    }\n    public static void build() {\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 1; j &lt;= m; j++) {\n                diff[i][j] += diff[i - 1][j] + diff[i][j - 1] - diff[i - 1][j - 1];\n            }\n        }\n    }\n    public static void clear() {\n        for (int i = 1; i &lt;= n + 1; i++) {\n            for (int j = 1; j &lt;= m + 1; j++) {\n                diff[i][j] = 0;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_60","title":"\u79bb\u6563\u5316\u6280\u5de7","text":"<ol> <li>\u6838\u5fc3\u95ee\u9898\uff1a\u600e\u4e48\u5904\u7406\u4e0d\u662f\u6574\u6570\u4e0b\u6807\u4f4d\u7f6e\u7684\u683c\u5b50\u3002\u6570\u636e\u662f[0.5,1,1.5,2,2.5].....</li> <li>\u601d\u8def\uff1a</li> <li>\u5750\u6807\u4f4d\u7f6e\u7edf\u4e00\u653e\u5927\u4e00\u500d\u3002\u6bd4\u5982\u8bf4\u533a\u57df\u662f\u4ee5x,y\u4e3a\u4e2d\u5fc3\u70b9\uff0c\u957f\u5ea6\u4e3ar\u7684\u6b63\u65b9\u5f62\u3002\u5219\u53d8\u6362\u4e3a\u4e2d\u5fc3\u70b9\u4e3a(2x,2y)\uff0c\u957f\u5ea6\u4e3a2r\u7684\u6b63\u65b9\u5f62\u3002\u4fdd\u8bc1\u4e86\u533a\u57df\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\u3002</li> <li>\u8fb9\u754c\u4f4d\u7f6e\u4e5f\u662f2*(x-r/2)\uff0c\u540c\u6837\u4e5f\u662f\u4e582</li> </ol>"},{"location":"LANG/DS-leetcode/#_61","title":"\u5806","text":""},{"location":"LANG/DS-leetcode/#_62","title":"\u5806\u7ed3\u6784","text":"<ol> <li>\u5806\u7684\u5b9e\u8d28\uff1a\u5c06\u5e8f\u5217\u6620\u5c04\u4e3a\u4e8c\u53c9\u6811(\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u6570\u7ec4\u4e2d\u64cd\u4f5c)\uff0c\u5e76\u7ef4\u6301\u67d0\u4e9b\u6027\u8d28</li> </ol> <p>\u5806\u662f\u4e00\u68f5\u6811\uff0c\u5176\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u952e\u503c\uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u7684\u952e\u503c\u90fd\u5927\u4e8e\u7b49\u4e8e/\u5c0f\u4e8e\u7b49\u4e8e\u5176\u7236\u4eb2\u7684\u952e\u503c\u3002</p> <p>\u6bcf\u4e2a\u8282\u70b9\u7684\u952e\u503c\u90fd\u5927\u4e8e\u7b49\u4e8e\u5176\u7236\u4eb2\u952e\u503c\u7684\u5806\u53eb\u505a\u5c0f\u6839\u5806\uff0c\u5426\u5219\u53eb\u505a\u5927\u6839\u5806</p> <p>\uff08\u5c0f\u6839\uff09\u5806\u4e3b\u8981\u652f\u6301\u7684\u64cd\u4f5c\u6709\uff1a\u63d2\u5165\u4e00\u4e2a\u6570\u3001\u67e5\u8be2\u6700\u5c0f\u503c\u3001\u5220\u9664\u6700\u5c0f\u503c\u3001\u5408\u5e76\u4e24\u4e2a\u5806\u3001\u51cf\u5c0f\u4e00\u4e2a\u5143\u7d20\u7684\u503c\u3002</p> <ol> <li> <p>\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff1a\u5047\u8bbe\u8282\u70b9\u6309\u7167\u5c42\u5e8f\u904d\u5386\u8fdb\u884c\u6392\u5e8f\uff0c</p> </li> <li> <p>\u5219i\u4f4d\u7f6e\u7684\u5de6\u5b69\u5b50\u662f2i+1\uff0c \u53f3\u5b69\u5b50\u8282\u70b9\u662f2i+2.</p> </li> <li>\u7b2ci\u4f4d\u7f6e\u7684\u7236\u8282\u70b9\u662f(i-1)/2\u3002\u8fd9\u4e48\u7b970\u7684\u7236\u4eb2\u8282\u70b9\u8fd8\u662f0(\u6709\u73af)</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u5c31\u662flog(2,N)</li> <li>\u5c06\u4e00\u4e2a\u5e8f\u5217\u7684\u524d\u7f00\u8303\u56f4\u8fdb\u884c\u5efa\u7acb\u5806\uff0c\u5219\u9700\u8981\u901a\u8fc7size\u6765\u8fdb\u884c\u9650\u5236\u5806\u4e2d\u7684\u5143\u7d20</li> <li>\u5927\u6839\u5806\uff1a</li> <li>\u5b9a\u4e49\uff1a\u4e8c\u53c9\u6811\u7684\u4efb\u4f55\u4e00\u9897\u5b50\u6811\u7684\u6700\u5927\u503c\u90fd\u5728\u9876\u90e8\u3002</li> <li>\u63d2\u5165\uff1a\u5bf9\u4e8e\u65b0\u6765\u7684\u6570\uff0c\u5411\u4e0a\u8c03\u6574\u5927\u6839\u5806(\u5b9e\u8d28\u4e0a\u662f\u8fdb\u884c\u6570\u7ec4\u7684\u8c03\u6574)</li> <li>Java \u7684PriorityQueue\u9ed8\u8ba4\u5185\u90e8\u4f7f\u7528\u7684\u662f\u5c0f\u6839\u5806\u6765\u5b9e\u73b0\u3002\u4f18\u5148\u961f\u5217\u5c31\u662f\u6839\u636e\u4f18\u5148\u7ea7\u8fdb\u884c\u91cd\u6392\u5143\u7d20\u7684\u961f\u5217\u3002\u5982\u679c\u4f7f\u7528\u5806\u6392\u5e8f\u7684\u8bdd\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528PriorityQueue\u3002</li> </ol> Text Only<pre><code>   //\u5411\u4e0a\u8c03\u6574\n   //\u8303\u56f4\u662f[0,i]\n    public static void heapInsert(int[] arr, int i) {\n        //\u6765\u52300\u4f4d\u7f6e\u7684\u8bdd\u4e5f\u4f1a\u8df3\u51fawhile\uff0c\u56e0\u4e3a\u4e0d\u6ee1\u8db3arr[0]&gt;arr[0]\n        while (arr[i] &gt; arr[(i - 1) / 2]) {\n            swap(arr, i, (i - 1) / 2);\n            i = (i - 1) / 2;\n        }\n    }\n    //\u5411\u4e0b\u8c03\u6574\n    //\u8303\u56f4\u662f[i,size]\n    public static void heapify(int[] arr, int i, int size) {\n        int l = i * 2 + 1;\n        //l&lt;size \u5c31\u662f \u6709\u5de6\u5b69\u5b50\n        while (l &lt; size) {\n            // \u53f3\u5b69\u5b50\uff0cl+1\n            // \u8bc4\u9009\uff0c\u6700\u5f3a\u7684\u5b69\u5b50\uff0c\u662f\u54ea\u4e2a\u4e0b\u6807\u7684\u5b69\u5b50\n            int best = l + 1 &lt; size &amp;&amp; arr[l + 1] &gt; arr[l] ? l + 1 : l;\n            // \u4e0a\u9762\u5df2\u7ecf\u8bc4\u9009\u4e86\u6700\u5f3a\u7684\u5b69\u5b50\uff0c\u63a5\u4e0b\u6765\uff0c\u5f53\u524d\u7684\u6570\u548c\u6700\u5f3a\u7684\u5b69\u5b50\u4e4b\u524d\uff0c\u6700\u5f3a\u4e0b\u6807\u662f\u8c01\n            best = arr[best] &gt; arr[i] ? best : i;\n            if (best == i) {\n                break;\n            }\n            swap(arr, best, i);\n            i = best;\n            l = i * 2 + 1;\n        }\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_63","title":"\u5806\u6392\u5e8f","text":"<ol> <li>\u6b65\u9aa4\uff1a</li> <li>\u5148\u5bf9\u6574\u4e2a\u6570\u7ec4\u5efa\u7acb\u5927\u6839\u5806</li> <li>\u5c06\u5f97\u5230\u7684\u6700\u5927\u503c\u548c\u6700\u540e\u4e00\u4e2a\u503c\u8fdb\u884c\u4ea4\u6362\u3002\u540c\u65f6\u5806\u7684\u5927\u5c0f-1\u3002</li> <li>\u5bf9\u6839\u4f4d\u7f6e\u5411\u4e0b\u8c03\u6574</li> <li>\u5bf9\u5269\u4e0b\u7684\u4f4d\u7f6e\u91cd\u590dabc\u64cd\u4f5c\u3002</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6:</li> <li>\u5355\u4e2a\u5143\u7d20\u7684\u63d2\u5165\u5220\u9664\u8c03\u6574\u90fd\u662fO(logn)\uff0c\u5bf9n\u4e2a\u5143\u7d20\u5c31\u662fn*logn</li> <li>\u5efa\u7acb\u5927\u6839\u5806:\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n*logn)\u3002\u4e5f\u5c31\u662flog(2,1) + log(2,2) +...+log(2,N)-&gt;n*logn</li> <li>\u8c03\u6574:\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662fO(n*logn)</li> <li>\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n*logn)</li> </ol> Text Only<pre><code> // \u4ece\u9876\u5230\u5e95\u5efa\u7acb\u5927\u6839\u5806\uff0cO(n * logn)\n    // \u4f9d\u6b21\u5f39\u51fa\u5806\u5185\u6700\u5927\u503c\u5e76\u6392\u597d\u5e8f\uff0cO(n * logn)\n    // \u6574\u4f53\u65f6\u95f4\u590d\u6742\u5ea6O(n * logn)\n    public static void heapSort1(int[] arr) {\n        int n = arr.length;\n        for (int i = 0; i &lt; n; i++) {\n            heapInsert(arr, i);\n        }\n        int size = n;\n        while (size &gt; 1) {\n            swap(arr, 0, --size);\n            heapify(arr, 0, size);\n        }\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_64","title":"\u5806\u7684\u5e38\u89c1\u9898","text":"<ol> <li>\u5408\u5e76K\u4e2a\u6709\u5e8f\u94fe\u8868\uff1a</li> <li>\u601d\u8def1\uff1a\u6536\u96c6\u6240\u6709\u8282\u70b9\uff0c\u5c06\u8282\u70b9\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u518d\u7edf\u4e00\u88c5\u8d77\u6765\u3002<ol> <li>\u65f6\u95f4\u590d\u6742\u5ea6:O(n*logn) + O(n)=O(n*logn)\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n)(\u5c31\u662f\u6536\u96c6\u6240\u6709\u8282\u70b9\u7684\u4f4d\u7f6e)</li> </ol> </li> <li>\u601d\u8def2\uff1a\u4f7f\u7528\u5806\u3002</li> <li>\u4f7f\u7528\u5c0f\u6839\u5806\uff0c\u5229\u7528\u94fe\u8868\u81ea\u8eab\u6709\u5e8f\u7684\u6027\u8d28\u3002</li> <li>\u73b0\u5c06K\u4e2a\u94fe\u8868\u7684\u5934\u7ed3\u70b9\u52a0\u5165\u5806\u3002\u4ece\u4e2d\u9009\u53d6\u6700\u5c0f\u7684\uff0c\u5c31\u662f\u5168\u5c40\u6700\u5c0f\u7684\u3002\u5219\u5c06\u5176\u5f39\u51fa\uff0c\u5e76\u5c06\u5176\u540e\u7ee7\u8282\u70b9\u52a0\u5165\u5806\u3002</li> <li>\u4f18\u70b9\uff1a\u5806\u7684\u5927\u5c0f\u59cb\u7ec8\u4e0d\u8d85\u8fc7K\u3002</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6:O(n*logk)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(k)</li> </ol> Text Only<pre><code>public class Code01_MergeKSortedLists {\n\n    // \u4e0d\u8981\u63d0\u4ea4\u8fd9\u4e2a\u7c7b\n    public static class ListNode {\n        public int val;\n        public ListNode next;\n    }\n\n    // \u63d0\u4ea4\u4ee5\u4e0b\u7684\u65b9\u6cd5\n    public static ListNode mergeKLists(ArrayList&lt;ListNode&gt; arr) {\n        // \u5c0f\u6839\u5806\n        PriorityQueue&lt;ListNode&gt; heap = new PriorityQueue&lt;&gt;((a, b) -&gt; a.val - b.val);\n        for (ListNode h : arr) {\n            // \u904d\u5386\u6240\u6709\u7684\u5934\uff01\n            if (h != null) {\n                heap.add(h);\n            }\n        }\n        //\u5982\u679c\u5168\u662f\u7a7a\u94fe\u8868\n        if (heap.isEmpty()) {\n            return null;\n        }\n        // \u5148\u5f39\u51fa\u4e00\u4e2a\u8282\u70b9\uff0c\u505a\u603b\u5934\u90e8\u3002\n        //poll\u65b9\u6cd5\u53d6\u51fa\u4f18\u5148\u961f\u5217\u7684\u5934\u90e8\n        ListNode h = heap.poll();\n        ListNode pre = h;\n        if (pre.next != null) {\n            heap.add(pre.next);\n        }\n        while (!heap.isEmpty()) {\n            ListNode cur = heap.poll();\n            pre.next = cur;\n            pre = cur;\n            if (cur.next != null) {\n                heap.add(cur.next);\n            }\n        }\n        return h;\n    }\n\n}\n</code></pre> <p>\ud83d\udca1</p> <p>\u4f20\u5165\u6bd4\u8f83\u5668\u7684\u5199\u6cd5\uff1a\u53ef\u4ee5\u4f7f\u7528lambda\u8868\u8fbe\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u5e38\u89c4\u4f20\u5165Comparator</p> <p>PriorityQueue heap = new PriorityQueue&lt;&gt;(new Comparator() { <p>@Override</p> <p>public int compare(ListNode o1, ListNode o2) {</p> <p>return o1.val - o2.val; }</p> <p>});</p>"},{"location":"LANG/DS-leetcode/#_65","title":"\u54c8\u5e0c\u8868","text":""},{"location":"LANG/DS-leetcode/#hashset-and-hashmap","title":"HashSet and HashMap","text":"<ol> <li>\u6ce8\u610fJava\u4e2d==\u548cequals\u65b9\u6cd5\u7684\u4f7f\u7528</li> <li>\u5bf9\u4e8e\u6240\u6709\u5305\u88c5\u7c7b\u578b\uff0c\u4ee5\u53caString\u90fd\u6309\u7167\u503c\u6765\u4f7f\u7528(\u8c03\u7528equals\u65b9\u6cd5)</li> </ol> Text Only<pre><code>public static void main(String[] args) {\n        // Integer\u3001Long\u3001Double\u3001Float\n        // Byte\u3001Short\u3001Character\u3001Boolean\n        // String\u7b49\u90fd\u6709\u8fd9\u4e2a\u7279\u5f81\n        String str1 = new String(\"Hello\");\n        String str2 = new String(\"Hello\");\n        // false\uff0c\u56e0\u4e3a\u4e0d\u540c\u7684\u5185\u5b58\u5730\u5740\n        System.out.println(str1 == str2);\n        // true\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u503c\u662f\u76f8\u540c\u7684\n        System.out.println(str1.equals(str2));\n\n        HashSet&lt;String&gt; set = new HashSet&lt;&gt;();\n        set.add(str1);\n        System.out.println(set.contains(\"Hello\"));\n        System.out.println(set.contains(str2));\n        set.add(str2);\n        System.out.println(set.size());\n        set.remove(str1);\n        set.clear();\n        System.out.println(set.isEmpty());\n\n        System.out.println(\"===========\");\n\n        HashMap&lt;String, String&gt; map1 = new HashMap&lt;&gt;();\n        map1.put(str1, \"World\");\n        //\u6b64\u5904\u5224\u65ad\u5fc5\u7136\u662f\u5b58\u5728\u7684\uff0c\u56e0\u4e3aHashMap\u5185\u90e8\u4e2d\u901a\u8fc7equals\u65b9\u6cd5\u8fdb\u884c\u5224\u65ad\n        System.out.println(map1.containsKey(\"Hello\"));\n        System.out.println(map1.containsKey(str2));\n        System.out.println(map1.get(str2));\n        System.out.println(map1.get(\"\u4f60\u597d\") == null);\n        map1.remove(\"Hello\");\n        System.out.println(map1.size());\n        map1.clear();\n        System.out.println(map1.isEmpty());\n\n        System.out.println(\"===========\");\n\n        // \u4e00\u822c\u5728\u7b14\u8bd5\u4e2d\uff0c\u672a\u5fc5\u9700\u8981\u7533\u8bf7\u54c8\u5e0c\u8868\n        HashMap&lt;Integer, Integer&gt; map2 = new HashMap&lt;&gt;();\n        map2.put(56, 7285);\n        map2.put(34, 3671263);\n        map2.put(17, 716311);\n        map2.put(24, 1263161);\n        // \u4e0a\u9762\u7684map2\u884c\u4e3a\uff0c\u53ef\u4ee5\u88ab\u5982\u4e0b\u6570\u7ec4\u7684\u884c\u4e3a\u66ff\u4ee3\n        int[] arr = new int[100];\n        arr[56] = 7285;\n        arr[34] = 3671263;\n        arr[17] = 716311;\n        arr[24] = 1263161;\n        // \u54c8\u5e0c\u8868\u7684\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\uff0c\u90fd\u53ef\u4ee5\u88ab\u6570\u7ec4\u66ff\u4ee3\uff0c\u524d\u63d0\u662fkey\u7684\u8303\u56f4\u662f\u56fa\u5b9a\u7684\u3001\u53ef\u63a7\u7684\n        System.out.println(\"\u5728\u7b14\u8bd5\u573a\u5408\u4e2d\u54c8\u5e0c\u8868\u5f80\u5f80\u4f1a\u88ab\u6570\u7ec4\u66ff\u4ee3\");\n\n        System.out.println(\"===========\");\n        Student s1 = new Student(17, \"\u5f20\u4e09\");\n        Student s2 = new Student(17, \"\u5f20\u4e09\");\n        HashMap&lt;Student, String&gt; map3 = new HashMap&lt;&gt;();\n        map3.put(s1, \"\u8fd9\u662f\u5f20\u4e09\");\n        System.out.println(map3.containsKey(s1));\n        System.out.println(map3.containsKey(s2));\n        map3.put(s2, \"\u8fd9\u662f\u53e6\u4e00\u4e2a\u5f20\u4e09\");\n        System.out.println(map3.size());\n        System.out.println(map3.get(s1));\n        System.out.println(map3.get(s2));\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_66","title":"\u6bd4\u8f83\u5668","text":"<p>Java\u4e2d\u7684\u5b9e\u73b0\u5bf9\u8c61\u6392\u5e8f\u7531\u4e24\u79cd\u65b9\u5f0f\uff1a\u81ea\u7136\u6392\u5e8f\u548c\u5b9a\u5236\u6392\u5e8f</p> <ol> <li>\u81ea\u7136\u6392\u5e8f\uff1a</li> </ol> Text Only<pre><code>public interface Comparable{\n int compareTo(Object obj);\n}\n</code></pre> <ol> <li>\u5168\u7c7b\u540d\uff1ajava.lang.Comparable(\u63a5\u53e3)</li> <li>\u4f7f\u7528\u65b9\u6cd5\uff1a\u5b9e\u73b0\u63a5\u53e3\u4e2d\u7684int compareTo(Object obj)\u65b9\u6cd5.\u82e5this&gt;that\u5219\u8fd4\u56de\u503c\u4e3a\u6b63\u3002</li> <li>\u5b9a\u5236\u6392\u5e8f\uff1a</li> </ol> Text Only<pre><code>public interface Comparator{\n int compare(Object o1,Object o2);\n}\n</code></pre> <ol> <li>\u80cc\u666f\uff1a\u5982\u679c\u9700\u8981\u6bd4\u8f83\u7684\u7c7b\u6ca1\u6709\u5b9e\u73b0Comparable\u63a5\u53e3\uff0c\u5e76\u4e14\u65e0\u6cd5\u6539\u53d8\u3002\u6216\u8005\u4e0d\u60f3\u6309\u7167Comparable\u7684compareTo()\u7684\u5b9e\u73b0\u8fdb\u884c\u6392\u5e8f\u3002</li> <li>\u89e3\u51b3\u529e\u6cd5\uff1a\u901a\u8fc7\u4f7f\u7528Comparator\u63a5\u53e3\u8fdb\u884c\u5b9a\u5236\u6392\u5e8f</li> <li>\u4f7f\u7528\u65b9\u6cd5\uff1a\u91cd\u5199compare\u65b9\u6cd5\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679co1&gt;o2\uff0c\u5219\u8fd4\u56de\u503c\u4e3a\u6b63\u3002</li> <li>\u5e38\u89c1\u573a\u666f\uff1a\u5c06Comparator\u4f20\u5165Collections.sort()\u65b9\u6cd5\u4e2d\uff0c\u6216\u8005Arrays.sort()\u7b49\u65b9\u6cd5\u4e2d\u3002</li> </ol>"},{"location":"LANG/DS-leetcode/#_67","title":"\u524d\u7f00\u6811","text":""},{"location":"LANG/DS-leetcode/#_68","title":"\u539f\u7406","text":"<ol> <li>\u5047\u8bbe\u6709\u5b57\u7b26\u4e32\"acb\",\"cba\",\"acc\"\u3002\u5219\u524d\u7f00\u6811\u662f\u4e00\u79cd\u7279\u6b8a\u7684N\u53c9\u6811\uff0c\u5b83\u88ab\u7528\u6765\u5b58\u50a8\u5b57\u7b26\u4e32\u3002\u5219\u7531\u8fd9\u4e09\u4e2a\u5b57\u7b26\u4e32\u6784\u6210\u7684\u524d\u7f00\u6811\u662f\u3002\u4e00\u822c\u90fd\u662f\u5c06\u5b57\u7b26\u653e\u5728\u8def\u4e0a(\u901a\u8fc7\u957f\u5ea6\u4e3a26\u7684\u6570\u7ec4\u7684\u4e0b\u6807\u6765\u8868\u793a\u3002\u6bd4\u59820\u4f4d\u7f6e\u5c31\u662f\u8d70\u5411a\u5206\u652f)\uff0c\u800c\u4e0d\u662f\u8282\u70b9\u4e0a\u3002\u8282\u70b9\u5c31\u7ef4\u6301p\u4fe1\u606f\uff0ce\u4fe1\u606f\u3002</li> <li>\u6bcf\u4e2a\u8282\u70b9\u90fd\u67092\u4e2a\u4fe1\u606f\uff1a</li> <li>pass\u4fe1\u606f\uff1a\u6709\u591a\u5c11\u5b57\u7b26\u4e32\u8def\u8fc7\u8be5\u8282\u70b9(\u521a\u597d\u6765\u5230\u4e5f\u7b97)</li> <li>end\u4fe1\u606f\uff1a\u6709\u591a\u5c11\u5b57\u7b26\u4e32\u4ee5\u8be5\u8282\u70b9\u7ed3\u5c3e</li> </ol> <ol> <li>\u4fe1\u606f\u7684\u4f5c\u7528\uff1a</li> <li>\u5feb\u901f\u67e5\u770b\u5355\u8bcd\u7684\u51fa\u73b0\u9891\u7387\u3002\u6bd4\u5982\u67e5\u770b\"acc\"\u51fa\u73b0\u51e0\u6b21</li> <li>\u67e5\u770b\u6709\u591a\u5c11\u5355\u8bcd\uff1a\u5c31\u662f\u6839\u8282\u70b9\u7684p\u503c,\u4e5f\u7b49\u4ef7\u4e8e\u6709\u591a\u5c11\u5355\u8bcd\u4ee5\"\"\u7a7a\u5b57\u7b26\u4e32\u5f00\u5934\u3002</li> <li>\u591a\u5c11\u5b57\u7b26\u4e32\u4ee5\"ac\"\u5f00\u5934\uff1a\u67e5\u770bc\u4e0b\u9762\u7684\u8282\u70b9\u7684p\u503c\u4fe1\u606f</li> <li>\u5220\u9664\u5355\u8bcd\uff1a\u9996\u67e5\u8be2\u662f\u5426\u51fa\u73b0\u8fc7\u3002\u5728\u51cf\u53bbp\u7684\u65f6\u5019\uff0c\u5982\u679cp=0\uff0c\u5219\u9700\u8981\u5c06\u8be5\u8282\u70b9\u7684\u5206\u652f\u90fd\u53d8\u4e3a\u65e0\u6548</li> <li>\u524d\u7f00\u6811\u4f18\u70b9\uff1a\u6839\u636e\u524d\u7f00\u4fe1\u606f\u6811\u7684\u5206\u652f\u6765\u5feb\u901f\u9009\u62e9\uff0c\u8282\u7701\u65f6\u95f4</li> <li>\u524d\u7f00\u6811\u7f3a\u70b9\uff1a\u6bd4\u8f83\u6d6a\u8d39\u7a7a\u95f4\uff0c\u548c\u5b57\u7b26\u603b\u6570\u91cf\u548c\u79cd\u7c7b\u6709\u5173</li> </ol>"},{"location":"LANG/DS-leetcode/#_69","title":"\u5b9e\u73b0","text":"<ol> <li>\u4f7f\u7528\u7c7b\u7684\u65b9\u5f0f\u8fdb\u884c\u5b9e\u73b0\uff1a</li> <li>\u9700\u8981\u5b9a\u4e49\u8282\u70b9\u7c7b\uff0c\u5305\u542bpass,end,nexts[]\u4e09\u4e2a\u6210\u5458\u53d8\u91cf\u3002\u901a\u8fc7\u5f00\u56fa\u5b9a\u957f\u5ea6\u7684nexts[]\u6765\u5b9e\u73b0\u6811\u7684\u6784\u5efa\u3002x - 'a'\u5b9e\u73b0\u504f\u79fb\u91cf\u3002</li> </ol> Text Only<pre><code>class Trie {\n    class TreeNode{\n        public int pass;\n        public int end;\n        public TreeNode[] nexts;\n        public TreeNode(){\n            pass = 0;\n            end = 0;\n            nexts = new TreeNode[26];\n        }\n    }\n    private TreeNode root;\n    public Trie() {\n        root = new TreeNode();\n    }\n\n    public void insert(String word) {\n        TreeNode node = root;\n        node.pass++;\n        for(int i=0 ;i&lt;word.length();i++){\n            int path = word.charAt(i) - 'a';\n            if(node.nexts[path] == null){\n                node.nexts[path] = new TreeNode();\n            }\n            node = node.nexts[path];\n            node.pass++;\n        }\n        node.end++;\n    }\n\n    public boolean search(String word) {\n        TreeNode node = root;\n        for(int i=0 ;i&lt;word.length();i++){\n            int path = word.charAt(i) - 'a';\n            if(node.nexts[path] == null){\n                return false;\n            }\n            node = node.nexts[path];\n        }\n        return node.end == 0 ? false : true;\n    }\n\n    public boolean startsWith(String word) {\n        TreeNode node = root;\n        for(int i=0 ;i&lt;word.length();i++){\n            int path = word.charAt(i) - 'a';\n            if(node.nexts[path] == null){\n                return false;\n            }\n            node = node.nexts[path];\n        }\n        return true;\n    }\n}\n</code></pre> Text Only<pre><code>class Trie{\n  private case class TreeNode (\n    var pass:Int = 0,\n    var end:Int = 0,\n    var nexts:Array[Option[TreeNode]] = Array.fill(26)(None)\n  )\n  private val root = TreeNode()\n\n  def insert(word:String): Unit = {\n    var node = root\n    node.pass += 1\n    for(i&lt;-word.indices){\n      val path = word(i) - 'a'\n      if(node.nexts(path).isEmpty) node.nexts(path) = Some(TreeNode())\n      node = node.nexts(path).get\n      node.pass += 1\n    }\n    node.end += 1\n  }\n  def search(word:String): Boolean = {\n    var node = root\n    @scala.annotation.tailrec\n    def go(n:TreeNode, i:Int):Boolean = {\n      if(i == word.length) return node.end != 0\n      val path = word(i) - 'a'\n      if(node.nexts(path).isEmpty) return false\n      node = node.nexts(path).get\n      go(node,i+1)\n    }\n    go(node,0)\n  }\n\n  def startsWith(word:String):Boolean = {\n    var node = root\n    @scala.annotation.tailrec\n    def go(n:TreeNode, i:Int):Boolean = {\n      if(i == word.length) return true\n      val path = word(i) - 'a'\n      if(node.nexts(path).isEmpty) return false\n      node = node.nexts(path).get\n      go(node,i+1)\n    }\n    go(node,0)\n  }\n}\n</code></pre> <ol> <li>\u4f7f\u7528\u9759\u6001\u6570\u7ec4\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002\u4e00\u6b21\u6027\u5f00\u8db3\u8db3\u591f\u7684\u7a7a\u95f4</li> <li>\u5047\u8bbe\u6811\u4e00\u5171\u4f1a\u5f00m\u4e2a\u8282\u70b9(m&gt;\u5b9e\u9645\u8282\u70b9\u6570)\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0b\u6709n\u4e2a\u9009\u62e9\u3002\u5219int[][] tree = new int[m][n];</li> <li>pass,end\u4fe1\u606f\u5206\u522b\u4f7f\u7528\u4e00\u7ef4\u7684\u6570\u7ec4\uff1b</li> <li>\u5047\u8bbe\u4ececnt=1\u4e0b\u6807\u7684\u8282\u70b9\u4e3a(\u6839\u8282\u70b9)\u5f00\u59cb\u3002\u4f7f\u7528cnt\u4ee3\u8868\u5206\u914d\u7684\u8282\u70b9\uff0c\u7b49\u4ef7\u4e8enew</li> </ol> Text Only<pre><code>    // \u5982\u679c\u5c06\u6765\u589e\u52a0\u4e86\u6570\u636e\u91cf\uff0c\u5c31\u6539\u5927\u8fd9\u4e2a\u503c\n    public static int MAXN = 150001;\n\n    public static int[][] tree = new int[MAXN][26];\n\n    public static int[] end = new int[MAXN];\n\n    public static int[] pass = new int[MAXN];\n\n    public static int cnt;\n\n    public static void build() {\n        cnt = 1;\n        for(int i=0; i&lt;MAXN;i++){\n            Arrays.fill(tree[i],0);\n        }\n        Arrays.fill(end,0);\n        Arrays.fill(pass,0);\n    }\n\n    public static void insert(String word) {\n        int cur = 1;\n        pass[cur]++;\n        for (int i = 0, path; i &lt; word.length(); i++) {\n            path = word.charAt(i) - 'a';\n            if (tree[cur][path] == 0) {\n                //\u4f7f\u7528cnt\u7ed9\u4ed6\u5206\u914d\u7f16\u53f7\n                tree[cur][path] = ++cnt;\n            }\n            cur = tree[cur][path];\n            pass[cur]++;\n        }\n        end[cur]++;\n    }\n\n    public static int search(String word) {\n        int cur = 1;\n        for (int i = 0, path; i &lt; word.length(); i++) {\n            path = word.charAt(i) - 'a';\n            if (tree[cur][path] == 0) {\n                return 0;\n            }\n            cur = tree[cur][path];\n        }\n        return end[cur];\n    }\n\n    public static int prefixNumber(String pre) {\n        int cur = 1;\n        for (int i = 0, path; i &lt; pre.length(); i++) {\n            path = pre.charAt(i) - 'a';\n            if (tree[cur][path] == 0) {\n                return 0;\n            }\n            cur = tree[cur][path];\n        }\n        return pass[cur];\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_70","title":"\u4f8b\u9898","text":"<ol> <li>\u6570\u7ec4\u4e2d\u4e24\u4e2a\u6570\u7684\u6700\u5927\u5f02\u6216\u503c</li> <li>\u66b4\u529b\u89e3\u6cd5\uff1a2\u91cdfor\u5faa\u73af\u89e3\u51b3</li> <li>\u524d\u7f00\u6811\u89e3\u6cd5\uff1a<ol> <li>\u5c06\u6bcf\u4e2a\u6570\u4f7f\u7528\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u5982\u679c\u6570\u5b57\u670932\u4f4d\uff0c\u4e5f\u5c31\u662f\u5c0632\u4f4d\u5b57\u7b26\u4e32\u5b58\u5165\u524d\u7f00\u6811\u4e2d\u3002\u5c06\u6570\u5b57\u5b58\u5165\u524d\u7f00\u6811\u4e2d\u3002</li> <li>\u56e0\u4e3a\u6240\u6709\u7684\u6570\u90fd\u662f\u975e\u8d1f\u6570\uff0c\u5219\u8865\u7801\u8868\u793a\u90fd\u662f\u4ee50\u5f00\u5934(\u7b26\u53f7\u4f4d)\uff0c\u6839\u8282\u70b9\u4e0b\u9762\u5f00\u59cb\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u9009\u62e9\u3002\u5982\u679c\u8981\u7ed3\u679c\u5c3d\u53ef\u80fd\u5927\uff0c\u5c31\u9700\u8981\u4ece\u9ad8\u4f4d\u770b\u8d77\uff0c1\u7684\u51fa\u73b0\u7684\u53ef\u80fd\u6027\u9700\u8981\u6700\u5927\u3002</li> <li>\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u5728\u524d\u7f00\u6811\u4e2d\u67e5\u8be2\u76f8\u5e94\u7684\u6700\u4f18\u89e3\u3002</li> <li>\u6700\u540e\u4e00\u5b9a\u8981clear\uff0c\u9632\u6b62\u810f\u6570\u636e\u7684\u5f71\u54cd\u3002</li> </ol> </li> </ol> Text Only<pre><code>class Solution {\n    public static int MAXN = 3000001;\n    public static int[][] tree = new int[MAXN][2];\n    public static int[] pass = new int[MAXN];\n    public static int[] end = new int[MAXN];\n    public static int cnt;\n    public int findMaximumXOR(int[] nums) {\n        bulid(nums);\n        int ans = 0;\n        for(int item:nums){\n            ans = Math.max(ans,maxXor(item));\n        }\n        clear();\n        return ans;\n    }\n    public static void bulid(int[] nums){\n        cnt = 1;\n        for(int item : nums){\n            insert(item);\n        }\n    }\n    public static void insert(int num){\n        int cur = 1;\n        pass[cur]++;\n        for(int i = 31;i&gt;=0;i--){\n            int path = (num &gt;&gt; i) &amp; 1;\n            if(tree[cur][path] == 0){\n                tree[cur][path] = ++cnt;\n            }\n            cur = tree[cur][path];\n            pass[cur]++;\n        }\n        end[cur]++;\n    }\n\n    public static int maxXor(int num){\n        int cur = 1;\n        int ans = 0;\n        for(int i=31;i&gt;=0;i--){\n            //nums\u7b2ci\u7684\u72b6\u6001\n            int status = (num &gt;&gt; i) &amp; 1;\n            //\u60f3\u8981\u7684\u72b6\u6001\n            int want = status ^ 1;\n            if(tree[cur][want] == 0){\n                //\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u53ea\u80fd\u5f80\u53cd\u65b9\u5411\u8d70\n                want = want ^ 1;\n            }\n            //\u5982\u679cstatus^want==1\uff0c\u5219\u7b2ci\u4f4d\u5c31\u662f1\u3002\u548cans\u53d6\u5927\u503c(\u8fd8\u662f1)\n            //\u5982\u679cstatus^want=0,\u5219\u7b2ci\u4f4d\u5c31\u662f0\uff0c\u5982\u679cans\u662f0\uff0c\u6700\u7ec8\u8fd8\u662f0,\u5426\u5219\u8fd8\u662f1\n            ans |= (status ^ want) &lt;&lt; i;\n            cur = tree[cur][want];\n        }\n        return ans;\n    }\n    public static void clear() {\n        for (int i = 1; i &lt;= cnt; i++) {\n            tree[i][0] = tree[i][1] = 0;\n        }\n    }\n}\n</code></pre> <ol> <li>leetcode 14\u6700\u957f\u516c\u5171\u524d\u7f00</li> </ol> Text Only<pre><code>class Solution {\n    public static int MAXN = 203;\n    public static int[][] tree = new int[MAXN][26];\n    public static int[] end = new int[MAXN];\n    public static int[] pass = new int[MAXN];\n    public static int cnt;\n    public String longestCommonPrefix(String[] strs) {\n        build();\n        Arrays.sort(strs,(a,b)-&gt;(a.length()-b.length()));\n        String word = strs[0];\n        for(String item : strs){\n            insert(item);\n        }\n        int v = strs.length;\n        String ans = \"\";\n        for(int i=1; i&lt;=word.length();i++){\n            String pre = word.substring(0,i);\n            int cnt = prefix(pre);\n            if(cnt == v){\n                v = cnt;\n                ans = pre;\n            }\n        }\n        return ans;\n    }\n    public void build(){\n        cnt = 1;\n        for(int i=0; i&lt;MAXN;i++){\n            Arrays.fill(tree[i],0);\n        }\n        Arrays.fill(end,0);\n        Arrays.fill(pass,0);\n    }\n    public void insert(String word){\n        int cur = 1;\n        pass[cur]++;\n        for(int i=0,path; i&lt;word.length();i++){\n            path = word.charAt(i)-'a';\n            //\u5206\u914d\u8282\u70b9\u7f16\u53f7\n            if(tree[cur][path] == 0){\n                tree[cur][path] = ++cnt;\n            }\n            cur = tree[cur][path];\n            pass[cur]++;\n        }\n        end[cur]++;\n    }\n    public int search(String word){\n        int cur = 1;\n        for(int i=0,path;i&lt;word.length();i++){\n            path = word.charAt(i)-'a';\n            if(tree[cur][path] == 0){\n                return 0;\n            }\n            cur = tree[cur][path];\n        }\n        return end[cur];\n    }\n    public int prefix(String pre){\n        int cur = 1;\n        for(int i=0,path;i&lt;pre.length();i++){\n            path = pre.charAt(i)-'a';\n            if(tree[cur][path] == 0){\n                return 0;\n            }\n            cur = tree[cur][path];\n        }\n        return pass[cur];\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#kmp","title":"KMP\u7b97\u6cd5","text":""},{"location":"LANG/DS-leetcode/#_71","title":"\u6982\u5ff5","text":"<p>\u6838\u5fc3\u6982\u5ff5\uff1a</p> <ol> <li>\u66b4\u529b\u65b9\u6cd5\u6bcf\u6b21\u90fd\u91cd\u65b0\u8fdb\u884c\u5339\u914d\uff0c\u5e76\u6ca1\u6709\u5229\u7528\u4e4b\u524d\u64cd\u4f5c\u7684\u4fe1\u606f\uff0c\u800ckmp\u7b97\u6cd5\u4f1a\u4f7f\u7528\u5230\u4e4b\u524d\u5339\u914d\u6240\u63d0\u70bc\u51fa\u7684\u4fe1\u606f\u3002</li> <li> <p>next\u6570\u7ec4\u7684\u5b9a\u4e49\uff1a</p> </li> <li> <p>next[i]\uff1a\u542b\u4e49\u4e00\uff1a\u5b58\u50a8\u7684\u662f[0,i)\u7684\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u548c\u540e\u7f00\u7684\u6700\u5927\u5339\u914d\u957f\u5ea6\u3002\u5982\u679c\u6ca1\u6709[0,i)\u4f4d\u7f6e\u7684\u5b50\u4e32\u5219\u89c4\u5b9a\u4e3a-1\u3002\u7ec8\u6b62\u4f4d\u7f6e\u7684next\u503c\u662f\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u540e\u7f00\u5339\u914d\u7684\u6700\u5927\u957f\u5ea6\u3002</p> </li> <li>next[i]\uff1a\u542b\u4e49\u4e8c\uff1a\u53e6\u4e00\u4e2a\u542b\u4e49\u662fpre\u5411\u524d\u8df3\u7684\u4e0b\u4e00\u4f4d\u4e0b\u6807\uff0c\u4e5f\u5c31\u662f\u6bd4\u5bf9\u7684\u4e0b\u4e00\u4e2a\u4e0b\u6807\u3002</li> <li>\u5b57\u7b26\u4e32\u524d\u7f00\uff1a\u5b57\u7b26\u4e32\u9996\u90e8\u3002\u5b57\u7b26\u4e32\u771f\u524d\u7f00\uff1a\u6307\u7684\u662f\u9664\u4e86s\u672c\u8eab\u7684\u5b50\u4e32\u3002</li> <li>\u5b57\u7b26\u4e32\u540e\u7f00\uff1a\u5b57\u7b26\u4e32\u5c3e\u90e8\u3002\u5b57\u7b26\u4e32\u771f\u540e\u7f00\uff1a\u6307\u7684\u662f\u9664\u4e86s\u672c\u8eab\u7684\u5c3e\u4e32\u3002</li> <li>\u524d\u540e\u7f00\u53ef\u4ee5\u4ea4\u53c9\u3002</li> <li>\u6bd4\u5982abab:\u5219\u524d\u7f00\u548c\u540e\u7f00\u5339\u914d\u7684\u6700\u5927\u957f\u5ea6\u662f2(\u662fab)\u3002</li> <li>next\u6570\u7ec4\u7684\u6c42\u89e3\uff1a</li> <li>\u524d\u4e24\u9879\u56fa\u5b9a\uff1anext[0] = -1, next[1] = 0;</li> <li>\u5982\u679c\u5bf9\u4e8ei\u4f4d\u7f6e\u7684next[i],</li> <li>\u5982\u679cs[i] = spre\uff0c\u5219next[i] = ++pre(\u4f7f\u7528\u7684\u662fnext\u542b\u4e491).</li> <li>\u5982\u679cs[i] !=s[pre] \u5e76\u4e14\u5982\u679cpre&gt;0,\u5219pre = nextpre\uff0c\u4e5f\u5c31\u662f\u7ee7\u7eed\u5411\u5de6\u8df3\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927\u7684\u503c\uff0c\u6b64\u65f6\u8fd4\u56de\u5230\u6b65\u9aa4\u4e00\u3002</li> <li>\u5982\u679c\u90fd\u4e0d\u6ee1\u8db3\uff0c\u4e5f\u5c31\u662fpre&lt;=0 \u4e86\uff0cpre\u4e0d\u7528\u518d\u8df3\u4e86\uff0c\u5f53\u524d\u7684next[i]\u4e5f\u5c31\u6ca1\u6709\u6700\u5927\u7684\u5339\u914d\u957f\u5ea6\uff0c\u8bbe\u7f6e\u503c\u4e3a0.</li> <li>\u603b\u7ed3\u6982\u62ec\u4e3a\u4e0d\u7528\u8df3\uff0c\u8df3\u591a\u6b21\uff0c\u4ee5\u53ca\u8fb9\u754c\u5904\u7406\u7684\u60c5\u51b5\u3002</li> </ol> <p></p> <p></p> <p>\ud83d\udd14</p> <p>next[i]\u5b58\u50a8\u7684\u5c31\u662f\u6bcf\u4e00\u6b21\u5411\u524d\u8df3\u7684\u4e0b\u6807\u3002\u56e0\u4e3a\u5982\u679c\u5f53\u524d\u7684\u2018x\u2019\u548c\u2018\u524d\u2019\u4e0d\u7b49\uff0c\u5219\u4e5f\u5c31\u8bc1\u660enext[10]\u6240\u63d0\u4f9b\u7684\u6700\u957f\u5339\u914d\u524d\u540e\u7f00\u65e0\u6cd5\u4f7f\u7528\u5168\u90e8\uff0c\u53ea\u80fd\u9000\u800c\u6c42\u5176\u6b21\uff0c\u4fdd\u7559\u8fd9\u91cc\u9762\u76840-9\u7684\u6700\u957f\u524d\u7f00\u4ee5\u53ca \u540e\u4e00\u90e8\u5206\u7684\u6700\u957f\u540e\u7f00\u3002\u53c8\u56e0\u4e3a\u524d\u540e\u4e24\u4e2a\u5df2\u7ecf\u5b8c\u5168\u5339\u914d\uff0c\u5219\u53ef\u4ee5\u8f6c\u5316\u4e3a\u57280-9\u6c42\u6700\u957f\u524d\u540e\u7f00\u5339\u914d\uff0c\u4e5f\u5c31\u662fnext[x]\u3002\u8fd9\u6837\u5982\u679c\u2018\u4e0b\u2019\u548c\u2018\u524d\u2019\u76f8\u7b49\uff0c\u5219next[11]\u5c31\u5f97\u5230\u7ed3\u679c\u4e86\u3002</p> <p></p> <p></p> <p></p> <p>\u4f8b\u5b50\u5982\u4e0a\uff1a\u5728\u5927\u4e32s1\u4e2d\u4f7f\u7528\u5339\u914d\u5b50\u4e32s2\u3002</p> <ol> <li>\u5148\u83b7\u5f97s2\u7684next\u6570\u7ec4\u3002</li> <li>\u8fdb\u884c\u5339\u914d\u3002\u5982\u679c\u9047\u5230\u4e24\u4e2a\u4f4d\u7f6e\u4e0d\u5339\u914d\u7684\u6570\uff0c\u6bd4\u5982\u5982\u4e0a\u768413\u4f4d\u7f6e\u7684a\u4e0et\u3002</li> <li>\u52a0\u901f\u8981\u70b91\uff1a\u4f7f\u7528next\u6570\u7ec4</li> <li>\u56e0\u4e3anext[13] = 6,\u5219[0,6]\u5fc5\u7136\u7b49\u4e8e[7,13).</li> <li>\u56e0\u4e3a\u5339\u914d\u7684\u539f\u56e0\uff0c\u5219\u5df2\u7ecf\u8d70\u8fc7\u7684\u5b50\u4e32\u5fc5\u7136\u662f\u76f8\u7b49\uff0c\u5219s1[6,13)==s2[6,13).</li> <li>\u6240\u4ee5s1[6,13\uff09== s2[0,6\uff09</li> <li>\u52a0\u901f\u8981\u70b92\uff1a\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u76f4\u63a5\u8df3</li> </ol> <p></p> <ol> <li>\u5047\u8bbes1[i,j)\u548cs2[0,k)\u5339\u914d\u5df2\u7ecf\u5339\u914d\uff0c\u5e76\u4e14s1[p,j)\u548cs2\u7684next[k]\u5339\u914d\u3002\u4e3a\u4ec0\u4e48\u4e0d\u53ef\u4ee5\u4ecep\u4e4b\u524d\u5f00\u59cb\u5339\u914d\u5462\uff1f</li> <li>\u4f7f\u7528\u53cd\u8bc1\u6cd5\uff0c\u5982\u679c\u5f00\u5934\u5728p\u4e4b\u524d\uff0c\u5219\u56e0\u4e3a\u9700\u8981\u548cs2\u53bb\u5339\u914d\uff0c\u5982\u679c\u53ef\u4ee5\u5339\u914d\uff0c\u5219\u8bc1\u660es2\u6709\u66f4\u5927\u7684\u524d\u540e\u7f00\u6700\u5927\u5339\u914d\u957f\u5ea6\uff0c\u663e\u7136\u548c\u4e8b\u5b9e\u4e0d\u7b26\u548c\u3002\u5219\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230p\u4f4d\u7f6e\u3002</li> </ol> <p>\ud83d\udca1</p> <p>\u4e5f\u5c31\u662f\u4efb\u610f\u5339\u914d\u7684\u524d\u540e\u7f00\u90fd\u53ef\u4ee5\u6ee1\u8db3\u8df3\u8dc3\uff0c\u4f46\u662f\u6700\u5927\u524d\u540e\u7f00\u5339\u914d\u53ef\u4ee5\u6ee1\u8db3\u4e00\u6b21\u8df3\u8dc3\u7684\u957f\u5ea6\u6700\u5927\uff0c\u4fdd\u8bc1\u6700\u5927\u5316\u5229\u7528\u4fe1\u606f\u3002</p> <ol> <li>\u5219\u4e0b\u4e00\u6b21\u5339\u914ds1[13]\u5f00\u59cb\u5339\u914ds2[6].</li> </ol>"},{"location":"LANG/DS-leetcode/#_72","title":"\u4f8b\u9898","text":"<ol> <li>leetcode 28:\u6a21\u677f\u9898</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n+m)\u3002\u66b4\u529b\u5339\u914d\u662fO(n*m)</li> </ol> Text Only<pre><code>class Solution {\n    public int strStr(String haystack, String needle) {\n        return kmp(haystack.toCharArray(),needle.toCharArray());\n    }\n    public static int kmp(char[] s1, char[] s2){\n        int m = s1.length, n = s2.length;\n        int x = 0, y = 0;\n        int[] next = nextArray(s2);\n        while(x &lt; m &amp;&amp; y &lt; n){\n            if(s1[x] == s2[y]){\n                x++;\n                y++;\n            }else{\n                if(y == 0){\n                    x++;\n                }else{\n                    y = next[y];\n                }\n            }\n        }\n        return y == n? x-y : -1;\n    }\n    public static int[] nextArray(char[] s){\n        int m = s.length;\n        if(m == 1) return new int[]{-1};\n        int[] next = new int[m];\n        next[0] = -1;\n        next[1] = 0;\n        int cur = 2, pre = 0;\n        while(cur &lt; m){\n            if(s[cur-1] == s[pre]){\n                next[cur++] = ++pre;\n            }else{\n                if(pre &gt; 0){\n                    pre = next[pre];\n                }else{\n                    next[cur++] = 0;\n                }\n            }\n        }\n        return next;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_73","title":"\u7b80\u5316\u7248\u672c","text":"<ol> <li>\u524d\u7f00\u51fd\u6570\u03c0</li> </ol> <p>\u03c0\u6570\u7ec4\uff1a\u03c0[i]\u8868\u793a\u5b57\u7b26\u4e32\u7b2ci\u4e2a\u524d\u7f00\u7684\u6700\u957f\u5339\u914d\u771f\u524d\u540e\u7f00\u957f\u5ea6\u3002</p> <p>KMP\u53ea\u662f\u524d\u7f00\u51fd\u6570\u7684\u5b50\u96c6\u6216\u8005\u8bf4\u662f\u4e00\u79cd\u5e94\u7528\u3002</p> <p></p> <ol> <li>\u6a21\u5f0f\u4e32\u548c\u88ab\u641c\u7d22\u4e32\u7684\u5904\u7406</li> <li>\u5c06\u6a21\u5f0f\u4e32\u548c\u641c\u7d22\u4e32\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u5e76\u5bf9\u8be5\u5b57\u7b26\u4e32\u8ba1\u7b97\u524d\u7f00\u51fd\u6570\u3002</li> </ol> <p></p> <ol> <li>\u5982\u679c\u6709\u4e2a\u03c0[i]\u7b49\u4e8e\u6a21\u5f0f\u4e32\u7684\u957f\u5ea6\uff0c\u5219\u8bf4\u660e\u5339\u914d\u4e86\u6a21\u5f0f\u4e32\u3002\u800c\u6240\u5339\u914d\u7684\u4e32\u5c31\u662f[i-\u03c0+1,i];</li> </ol> <p></p> <ol> <li>\u5219\u6839\u636e\u524d\u7f00\u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u662f\u5426\u5339\u914d\u3002\u5e76\u5f97\u5230\u76f8\u5e94\u7684\u4e0b\u6807\u3002</li> <li> <p>\u524d\u7f00\u51fd\u6570\u7684\u8ba1\u7b97</p> </li> <li> <p>\u5f53\u524d\u8ba1\u7b97\u03c0[i]\u3002</p> </li> <li>\u5219\u548ckmp\u4e2d\u8ba1\u7b97next\u6570\u7ec4\u5b8c\u5168\u4e00\u81f4\uff0c\u8fdb\u884c\u6bd4\u5bf9\uff0c\u4e0d\u540c\u5c31\u4f7f\u7528\u03c0\u6570\u7ec4\u5411\u524d\u8df3\u3002</li> </ol> <p></p> <p></p>"},{"location":"LANG/DS-leetcode/#_74","title":"\u6ed1\u52a8\u7a97\u53e3","text":""},{"location":"LANG/DS-leetcode/#_75","title":"\u539f\u7406","text":"<ol> <li>\u901a\u8fc7L\u548cR\u53cc\u6307\u9488\u6765\u63a7\u5236\u7a97\u53e3\u6ed1\u52a8\uff0c\u6709[L,R]\u4ee5\u53ca[L,R)\u4e24\u79cd\u3002</li> <li>\u5173\u952e\uff1a\u627e\u5230\u8303\u56f4\u548c\u7b54\u6848\u6307\u6807\u4e4b\u95f4\u7684\u5355\u8c03\u6027\u5173\u7cfb\uff0c\u6807\u5fd7\u6027\u5c31\u662fwhile\u64cd\u4f5c\u3002</li> <li>\u5355\u8c03\u6027\u5c31\u662f\u5f53\u53f3\u4fa7\u5f15\u5165\u6570\u5b57\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u7a97\u53e3\u6ee1\u8db3\u67d0\u4e2a\u6027\u8d28(\u5e76\u4e14\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528while)\u3002\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u5de6\u4fa7\u7a97\u53e3\uff0c\u4f7f\u5f97\u7a97\u53e3\u5927\u5c0f\u8fdb\u884c\u8c03\u6574\u3002</li> <li>\u6ce8\u610fL\u548cR\u90fd\u662f\u4e0d\u56de\u9000\u7684\uff0c\u6240\u4ee5\u79f0\u4e3a\u6ed1\u52a8\u7a97\u53e3</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(N)\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u64cd\u4f5c\u6570\u4e0e\u6570\u636e\u91cf\u7684\u5173\u7cfb\u3002while\u5faa\u73af\u4e2d\u7684sum += num[r++]\uff0c\u4ee5\u53casum -= nums[l]\u4e4b\u548c\u6700\u591a2n\u6b21\uff0c\u56e0\u4e3a\u6ed1\u52a8\u7a97\u53e3\u4e2d\u6307\u9488\u4e0d\u56de\u9000\uff0c\u904d\u5386\u4e00\u904d\u5c31\u7ed3\u675f\u4e86\u3002</li> <li>\u4e00\u822c\u6d41\u7a0b\uff1a\u5c31\u662f\u6bcf\u4e2a\u5b50\u6570\u7ec4\u5728\u5f00\u5934\u6216\u8005\u7ed3\u5c3e\u7684\u60c5\u51b5\uff0c\u5f00\u5934\u6216\u8005\u662f\u7ed3\u5c3e\u90fd\u53ef\u4ee5\u3002</li> </ol>"},{"location":"LANG/DS-leetcode/#_76","title":"\u4f8b\u9898","text":"<ol> <li>\u7d2f\u52a0\u548c\u5927\u4e8e\u7b49\u4e8etarget\u7684\u6700\u77ed\u6570\u7ec4</li> </ol> <p>\u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709 n \u4e2a\u6b63\u6574\u6570\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u6b63\u6574\u6570 target \u3002\u627e\u51fa\u8be5\u6570\u7ec4\u4e2d\u6ee1\u8db3\u5176\u603b\u548c\u5927\u4e8e\u7b49\u4e8e target \u7684\u957f\u5ea6\u6700\u5c0f\u7684 \u5b50\u6570\u7ec4[numsl, numsl+1, ..., numsr-1, numsr] \uff0c\u5e76\u8fd4\u56de\u5176\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de 0 \u3002nums\u4e2d\u5168\u662f\u6b63\u6570\u3002</p> <ol> <li>\u601d\u8def\uff1a\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\u8fdb\u884c\u6d41\u91cf\u63a7\u5236</li> <li>\u6bcf\u8fdb\u6765\u4e00\u4e2a\u6570\u5b57\uff0c\u5bf9\u4e8e\u7a97\u53e3\u4e2d\u7684sum\u8fdb\u884c\u6761\u4ef6\u68c0\u67e5\uff0c\u770b\u662f\u5426\u53e6\u4e00\u4fa7\u53ef\u4ee5\u8c03\u6574\u3002</li> <li>\u5355\u8c03\u6027\uff1a\u7ef4\u62a4\u7684\u662fsum.\u56e0\u4e3a\u4e00\u4e2a\u6570\u5b57\u8fdb\u6765\u7684\u65f6\u5019\uff0csum\u5fc5\u7136\u53d8\u5927\uff0c\u5219\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u53e6\u4e00\u8fb9\u8fdb\u884c\u7f29\u5c0f(\u6b64\u65f6sum\u5fc5\u7136\u51cf\u5c0f\u800c\u4e0d\u662f\u589e\u52a0)</li> <li>\u6b64\u5904\u7684\u8c03\u6574\u662f\u6307\u8ba9\u672c\u9898\u76ee\u7684\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u6570\u7ec4\u6700\u5c0f\uff0c\u4e5f\u5c31\u662f\u8fdb\u884c\u7a97\u53e3\u7684\u5927\u5c0f\u8c03\u6574\u3002</li> </ol> Text Only<pre><code>public static int minSubArrayLen(int target, int[] nums) {\n    int ans = Integer.MAX_VALUE;\n    for (int l = 0, r = 0, sum = 0; r &lt; nums.length; r++) {\n        sum += nums[r];\n        while (sum - nums[l] &gt;= target) {\n            // sum : nums[l....r]\n            // \u5982\u679cl\u4f4d\u7f6e\u7684\u6570\u4ece\u7a97\u53e3\u51fa\u53bb\uff0c\u8fd8\u80fd\u7ee7\u7eed\u8fbe\u6807\uff0c\u90a3\u5c31\u51fa\u53bb\n            sum -= nums[l++];\n        }\n        //\u6b64\u5904\u8fdb\u884c\u7684\u7279\u5224\u662f\u6709\u5fc5\u8981\u7684\uff0c\u4fdd\u8bc1\u6570\u7ec4\u53ea\u6709\u6ee1\u8db3sum&gt;=target\u624d\u53ef\u4ee5\u8fdb\u884c\u66f4\u65b0\n        if (sum &gt;= target) {\n            ans = Math.min(ans, r - l + 1);\n        }\n    }\n    return ans == Integer.MAX_VALUE ? 0 : ans;\n}\n</code></pre> <ol> <li>\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b57\u4e32</li> <li>\u601d\u8def\uff1a\u5bf9\u4e8e\u4ee5\u6bcf\u4e2a\u4f4d\u7f6e\u7ed3\u675f\u7684\u5b50\u4e32\uff0c\u8c03\u6574\u6ed1\u52a8\u7a97\u53e3\u7684\u5927\u5c0f\uff0c\u4f7f\u5f97\u7a97\u53e3\u4e2d\u7684\u5b57\u7b26\u59cb\u7ec8\u4fdd\u6301\u8981\u6c42\u7684\u6027\u8d28\uff0c\u4e5f\u5c31\u662f\u65e0\u91cd\u590d\u6027</li> <li>\u6838\u5fc3\u7684\u66f4\u65b0\u516c\u5f0f\uff1a<ol> <li>\u5982\u679c\u662ff ....abdcf\uff0c\u5219L = L\uff0c\u800c\u4e0d\u662f\u56de\u9000\uff0c\u56e0\u4e3a\u56de\u9000\u4f1a\u5bfc\u81f4\u4e4b\u524d\u7684\u8c03\u6574\u5931\u6548\uff0c\u91cd\u65b0\u5f15\u5165\u91cd\u590d\u5b57\u7b26\u3002</li> <li>\u5355\u8c03\u6027\uff1a\u7ef4\u62a4\u7684\u662f\u91cd\u590d\u6027\uff1a\u4e5f\u5c31\u662f\u5f53\u53f3\u4fa7\u5f15\u5165\u4e00\u4e2a\u5143\u7d20\u65f6\u5019\uff0c\u5de6\u4fa7\u6ed1\u52a8\u5fc5\u7136\u4f1a\u4f7f\u5f97\u5f53\u524d\u533a\u95f4\u7684\u6027\u8d28\u4e0d\u53d8(\u4e5f\u5c31\u662f\u4e0d\u4f1a\u5f15\u5165\u65b0\u91cd\u590d\u5143\u7d20\uff0c\u91cd\u590d\u6027\u53ea\u4f1a\u51cf\u5c0f)</li> <li>\u5982\u679c\u662f abfdf\uff0c\u5219L = pos[f]+1,\u9700\u8981\u8fdb\u884c\u66f4\u65b0</li> </ol> </li> </ol> Text Only<pre><code>class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        char[] arr = s.toCharArray();\n        int ans = 0;\n        //\u6bcf\u79cd\u5b57\u7b26\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a0-255\u7684\u6574\u6570\n        int[] last = new int[256];\n        Arrays.fill(last,-1);\n\n        for(int l=0, r=0; r&lt;arr.length; r++){\n            l = Math.max(l, last[(int)arr[r]]+1);\n            ans = Math.max(ans, r-l+1);\n            last[arr[r]] = r;\n        }\n        return ans;\n    }\n}\n</code></pre> <ol> <li>\u6700\u5c0f\u8986\u76d6\u5b57\u4e32</li> <li>\u9898\u76ee\u542b\u4e49\uff1a\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>&lt;span&gt;s&lt;/span&gt;</code> \u3001\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>&lt;span&gt;t&lt;/span&gt;</code> \u3002\u8fd4\u56de <code>&lt;span&gt;s&lt;/span&gt;</code> \u4e2d\u6db5\u76d6 <code>&lt;span&gt;t&lt;/span&gt;</code> \u6240\u6709\u5b57\u7b26\u7684\u6700\u5c0f\u5b50\u4e32\u3002\u5982\u679c <code>&lt;span&gt;s&lt;/span&gt;</code> \u4e2d\u4e0d\u5b58\u5728\u6db5\u76d6 <code>&lt;span&gt;t&lt;/span&gt;</code> \u6240\u6709\u5b57\u7b26\u7684\u5b50\u4e32\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 <code>&lt;span&gt;\"\"&lt;/span&gt;</code></li> <li>\u6838\u5fc3\u601d\u8def\uff1a\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\u3002\u5bf9\u4e8e\u4ee5\u6bcf\u4e2a\u4f4d\u7f6e\u7ed3\u675f\u7684\u5b50\u4e32\uff0c\u5728\u6ed1\u52a8\u7a97\u53e3\u4e2d\u68c0\u67e5\u662f\u5426\u6ee1\u8db3\u8986\u76d6\u7684\u6027\u8d28\u3002\u5982\u679c\u6ee1\u8db3\uff0c\u5219\u5c1d\u8bd5\u8c03\u6574\u5927\u5c0f\uff0c\u6700\u7ec8\u5f97\u5230\u6700\u5c0f\u5b57\u4e32\u3002</li> <li>\u5355\u8c03\u6027\uff1a\u7ef4\u62a4\u7684\u662f\u6db5\u76d6\u6027\uff1a\u5f53\u5de6\u4fa7\u6ed1\u52a8\u7684\u65f6\u5019\uff0c\u6db5\u76d6\u6027\u5fc5\u7136\u662f\u51cf\u5c0f\u6216\u8005\u4e0d\u53d8\u3002\u53ef\u4ee5\u4f7f\u7528while\u76f4\u5230\u6027\u8d28\u4e0d\u6ee1\u8db3\u3002</li> <li>\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u4f7f\u7528\u6570\u7ec4\u8fdb\u884c\u54c8\u5e0c\u8868\u7684\u5b9e\u73b0\u3002\u5176\u4e2dcnts[]\u4ee3\u8868\u7684\u662ft\u4e2d\u6bcf\u79cd\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002\u7136\u540e\u5f53\u8fdb\u884c\u8c03\u6574\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u7684debt\u5c31\u662f\u6307\u7684t\u7684\u6240\u6709\u79cd\u7c7b\u7684\u5b57\u7b26\u5168\u90fd\u88ab\u6ee1\u8db3\u4e86\uff0c\u4e5f\u5c31\u662f\u4ee5\u5f53\u524d\u5b57\u7b26\u7ed3\u5c3e\u7684\u5b50\u4e32\u6ee1\u8db3\u4e86\u8986\u76d6\u7684\u6027\u8d28\u3002</li> </ol> Text Only<pre><code>class Solution {\n    public String minWindow(String str, String ttr) {\n\n        int[] cnts = new int[256];\n        char[] s = str.toCharArray();\n        char[] t = ttr.toCharArray();\n        if(s.length &lt; t.length) return \"\";\n        for(char item : t){\n            cnts[(int)item]--;\n        }\n        int len = Integer.MAX_VALUE;\n        int start = 0;\n        for(int l=0,r=0,debt=t.length; r&lt;s.length;r++){\n            if(cnts[s[r]] &lt; 0){\n                debt--;\n            }\n            cnts[s[r]]++;\n            if(debt == 0){\n                while(cnts[s[l]] &gt; 0){\n                    cnts[s[l]]--;\n                    l++;\n                }\n                if(r-l+1 &lt; len){\n                    len = r-l+1;\n                    start = l;\n                }\n            }\n        }\n        return len == Integer.MAX_VALUE ? \"\" : str.substring(start,start+len);  \n    }\n\n}\n</code></pre> <ol> <li>\u52a0\u6cb9\u7ad9\u7684\u51fa\u53d1\u70b9</li> </ol> Text Only<pre><code>class Solution {\n    public int canCompleteCircuit(int[] gas, int[] cost) {\n        int n = gas.length;\n\n        for(int l=0,r=0,sum = 0, len = 0;l&lt;n;l++){\n            while(sum &gt;= 0){\n                if(len == n){\n                    return l;\n                }\n                r = (l + len)%n;\n                len++;\n                sum += gas[r] -  cost[r];\n            }\n            len--;\n            sum -= gas[l] - cost[l];\n\n        }\n        return -1;\n    }\n}\n</code></pre> <ol> <li>leetcode1984 \u6570\u7ec4\u4e2d\u7684k\u4e2a\u5143\u7d20\u7684\u6700\u5c0f\u6781\u5dee\uff1a</li> <li>\u7ed3\u8bba\uff1a\u5982\u679c\u8981\u6c42\u4efb\u610fk\u4e2a\u5143\u7d20\u7684\u6700\u5c0f\u6781\u5dee\uff0c\u9700\u8981\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u4f7f\u7528\u76f8\u90bb\u7684k\u4e2a\u5143\u7d20\u4e00\u7ec4\uff0c\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\u8fdb\u884c\u904d\u5386\uff0c\u7a97\u53e3\u4e2d\u5143\u7d20\u7684\u6781\u5dee\u662fnums[r]-nums[l]\u3002</li> </ol> Text Only<pre><code>class Solution {\n    public int minimumDifference(int[] nums, int k) {\n        int ans = Integer.MAX_VALUE;\n        int n = nums.length;\n        Arrays.sort(nums);\n        if(nums.length == 1){\n            return 0;\n        }\n        for(int l=0,r = k-1; r&lt;n;l++,r++){\n            ans = Math.min(ans,nums[r]- nums[l]);\n        }\n        return ans;\n    }\n}\n</code></pre> <ol> <li>leetcode1652 \u62c6\u70b8\u5f39\uff1a</li> <li>\u4f60\u6709\u4e00\u4e2a\u70b8\u5f39\u9700\u8981\u62c6\u9664\uff0c\u65f6\u95f4\u7d27\u8feb\uff01\u4f60\u7684\u60c5\u62a5\u5458\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;n&lt;/span&gt;&lt;/span&gt;</code> \u7684 \u5faa\u73af \u6570\u7ec4 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;code&lt;/span&gt;&lt;/span&gt;</code> \u4ee5\u53ca\u4e00\u4e2a\u5bc6\u94a5 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \u3002</li> </ol> <p>\u4e3a\u4e86\u83b7\u5f97\u6b63\u786e\u7684\u5bc6\u7801\uff0c\u4f60\u9700\u8981\u66ff\u6362\u6389\u6bcf\u4e00\u4e2a\u6570\u5b57\u3002\u6240\u6709\u6570\u5b57\u4f1a \u540c\u65f6 \u88ab\u66ff\u6362\u3002</p> <ul> <li>\u5982\u679c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k &gt; 0&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u5c06\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;</code> \u4e2a\u6570\u5b57\u7528 \u63a5\u4e0b\u6765 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \u4e2a\u6570\u5b57\u4e4b\u548c\u66ff\u6362\u3002</li> <li>\u5982\u679c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k &lt; 0&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u5c06\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;</code> \u4e2a\u6570\u5b57\u7528 \u4e4b\u524d <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \u4e2a\u6570\u5b57\u4e4b\u548c\u66ff\u6362\u3002</li> <li>\u5982\u679c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k == 0&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u5c06\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;</code> \u4e2a\u6570\u5b57\u7528 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;</code> \u66ff\u6362\u3002</li> </ul> <p>\u7531\u4e8e <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;code&lt;/span&gt;&lt;/span&gt;</code> \u662f\u5faa\u73af\u7684\uff0c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;code[n-1]&lt;/span&gt;&lt;/span&gt;</code> \u4e0b\u4e00\u4e2a\u5143\u7d20\u662f <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;code[0]&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u4e14 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;code[0]&lt;/span&gt;&lt;/span&gt;</code> \u524d\u4e00\u4e2a\u5143\u7d20\u662f <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;code[n-1]&lt;/span&gt;&lt;/span&gt;</code> \u3002</p> <p>\u7ed9\u4f60 \u5faa\u73af \u6570\u7ec4 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;code&lt;/span&gt;&lt;/span&gt;</code> \u548c\u6574\u6570\u5bc6\u94a5 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u8bf7\u4f60\u8fd4\u56de\u89e3\u5bc6\u540e\u7684\u7ed3\u679c\u6765\u62c6\u9664\u70b8\u5f39\uff01</p> <ol> <li>\u601d\u8def\uff1a\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6570i\uff0c\u5bf9\u5e94\u7684\u6ed1\u52a8\u7a97\u53e3\u662f\u5176\u540e\u9762\u6216\u8005\u524d\u9762\u7684\u5b9a\u957f\u6570\u7ec4\u3002\u548c\u52a0\u6cb9\u7ad9\u7684\u9898\u7c7b\u4f3c\uff0c\u590d\u7528sum\u3002\u540c\u65f6\u63d0\u524d\u521d\u59cb\u5316base case,\u65b9\u4fbf\u540e\u7eed\u7a97\u53e3\u6ed1\u52a8\u3002</li> </ol> Text Only<pre><code>class Solution {\n    public int[] decrypt(int[] code, int k) {\n        int n = code.length;\n        int[] ans = new int[n];\n        Arrays.fill(ans, 0);\n        if(k == 0) return ans;\n        int cnt = 0;\n        int sum = 0;\n        int l = k&gt;0 ? 1:(n+k)%n;\n        int r = k&gt;0 ? k%n:(n-1)%n;\n        for (int i = l; i &lt;=r; i++) {\n            sum += code[i];\n        }\n        for(int i=0; i&lt;n;i++){\n            ans[i] = sum;\n            sum -= code[(l++)%n];\n            sum += code[(++r)%n];\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_77","title":"\u5355\u8c03\u6808","text":""},{"location":"LANG/DS-leetcode/#_78","title":"\u539f\u7406","text":""},{"location":"LANG/DS-leetcode/#_79","title":"\u4f8b\u9898","text":"<ol> <li>\u6c42\u5de6\u53f3\u4e24\u8fb9\u6bd4\u81ea\u5df1\u5c0f\u7684\u6570\u7684\u4f4d\u7f6e</li> <li>\u9898\u76ee\uff1a</li> </ol> <p>\u7ed9\u5b9a\u4e00\u4e2a\u53ef\u80fd\u542b\u6709\u91cd\u590d\u503c\u7684\u6570\u7ec4 arr\uff0c\u627e\u5230\u6bcf\u4e00\u4e2a i \u4f4d\u7f6e\u5de6\u8fb9\u548c\u53f3\u8fb9\u79bb i \u4f4d\u7f6e\u6700\u8fd1\u4e14\u503c\u6bd4 arr[i] \u5c0f\u7684\u4f4d\u7f6e\u3002\u8fd4\u56de\u6240\u6709\u4f4d\u7f6e\u76f8\u5e94\u7684\u4fe1\u606f\u3002</p> <ol> <li>\u601d\u8def\uff1a</li> <li>\u66b4\u529b\u89e3\u6cd5\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u904d\u5386\u5de6\u8fb9\u548c\u53f3\u8fb9\uff0c\u627e\u5230\u5bf9\u5e94\u4f4d\u7f6e\u3002\u5219\u65f6\u95f4\u590d\u6742\u5ea6O(n^2)</li> <li>\u5355\u8c03\u6808\uff1a<ol> <li>\u7531\u503c\u7684\u6027\u8d28\uff0c\u5c06\u4e0b\u6807\u5165\u6808\uff0c\u65b9\u4fbf\u8fdb\u884c\u7d22\u5f15\u3002</li> <li>\u4fdd\u6301\u6808\u4e2d\u5927\u538b\u5c0f\u7684\u6027\u8d28\uff0c\u4e5f\u5c31\u662f\u5355\u8c03\u6027\u3002</li> <li>\u5982\u679c\u4e0b\u4e00\u4e2a\u6570\u5b57\u4e0d\u6ee1\u8db3(\u8be5\u4fa7\u7684\u8981\u6c42\u88ab\u6ee1\u8db3(\u4e5f\u5c31\u662f\u5c0f\u5927\u5c0f))\uff0c\u5219\u8fdb\u884c\u5143\u7d20\u51fa\u6808\u3002</li> <li>\u6700\u540e\u5c06\u6808\u4e2d\u5269\u4f59\u7684\u6570\u7ec4\u8fdb\u884c\u6e05\u7b97</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u53ea\u88ab\u64cd\u4f5c\u4e24\u6b21\uff0c\u4e5f\u5c31\u662f\u8fdb\u6808\u4e00\u6b21\uff0c\u51fa\u6808\u4e00\u6b21\u3002</li> <li>\u6b63\u786e\u6027\u8bc1\u660e\uff1a<ol> <li>\u5982\u679c\u6808\u4e2d\u8fdb\u5165\u7684\u6570\u5b57\u662fabc\uff0c\u5219a&lt;b&lt;c</li> <li>\u5bf9\u4e8eL: \u5219a\u7684L\u4e0d\u5b58\u5728\uff0cb\u7684L\u662fa,c\u7684L=b\uff0c</li> <li>\u5bf9\u4e8eR: \u5e76\u4e14abc\u6b64\u65f6\u90fd\u6ca1\u6709\u6ee1\u8db3R\u3002</li> <li>\u5982\u679c\u51fa\u73b0\u4e86\u4e0b\u4e00\u4e2a\u6570\u5b57d\uff0c\u5e76\u4e14d&lt;c\uff0c\u5219c\u7684(L,R)\u627e\u5230\uff0c\u5e76\u4e14\u6808\u4e2d\u5269\u4f59\u7684\u5143\u7d20\u7684R\u5fc5\u7136\u4e0d\u662fc\uff0c\u5e76\u4e14d\u7684(L,R)\u5fc5\u7136\u6ca1\u6709c\uff0c\u5219c\u53ef\u4ee5\u5f39\u51fa\u3002</li> </ol> </li> <li>\u91cd\u590d\u503c\u60c5\u51b5\u5904\u7406\uff1a\u5982\u679c\u6709\u91cd\u590d\u503c\uff0c\u9700\u8981\u8fdb\u884c\u4fee\u6b63\u3002\u5173\u952e\u5c31\u662f\u91cd\u590d\u503c\u60c5\u51b5\u7684\u5904\u7406\u3002\u5bf9\u4e8e\u672c\u9898\uff0c\u5c31\u662f\u5229\u7528\u540e\u6765\u7684\u91cd\u590d\u5143\u7d20\u4f5c\u6682\u65f6\u7684R\uff0c\u6700\u540e\u590d\u7528\u540e\u6765\u7684\u91cd\u590d\u5143\u7d20\u7684R</li> </ol> </li> </ol> Text Only<pre><code>public static void compute() {\n        //r\u4ee3\u8868\u6808\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u6808\u7684\u957f\u5ea6\n        r = 0;\n        int cur;\n        // \u904d\u5386\u9636\u6bb5\n        for (int i = 0; i &lt; n; i++) {\n            // i -&gt; arr[i]\n            while (r &gt; 0 &amp;&amp; arr[stack[r - 1]] &gt;= arr[i]) {\n                cur = stack[--r];\n                // cur\u5f53\u524d\u5f39\u51fa\u7684\u4f4d\u7f6e\uff0c\u5de6\u8fb9\u6700\u8fd1\u4e14\u5c0f\n                ans[cur][0] = r &gt; 0 ? stack[r - 1] : -1;\n                ans[cur][1] = i;\n            }\n            stack[r++] = i;\n        }\n        // \u6e05\u7b97\u9636\u6bb5\n        while (r &gt; 0) {\n            cur = stack[--r];\n            ans[cur][0] = r &gt; 0 ? stack[r - 1] : -1;\n            ans[cur][1] = -1;\n        }\n        // \u4fee\u6b63\u9636\u6bb5\n        // \u5de6\u4fa7\u7684\u7b54\u6848\u4e0d\u9700\u8981\u4fee\u6b63\u4e00\u5b9a\u662f\u6b63\u786e\u7684\uff0c\u53ea\u6709\u53f3\u4fa7\u7b54\u6848\u9700\u8981\u4fee\u6b63\n        // \u4ece\u53f3\u5f80\u5de6\u4fee\u6b63\uff0cn-1\u4f4d\u7f6e\u7684\u53f3\u4fa7\u7b54\u6848\u4e00\u5b9a\u662f-1\uff0c\u4e0d\u9700\u8981\u4fee\u6b63\n        for (int i = n - 2; i &gt;= 0; i--) {\n            if (ans[i][1] != -1 &amp;&amp; arr[ans[i][1]] == arr[i]) {\n                ans[i][1] = ans[ans[i][1]][1];\n            }\n        }\n</code></pre> <ol> <li>\u6bcf\u65e5\u6e29\u5ea6</li> <li>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>&lt;span&gt;temperatures&lt;/span&gt;</code> \uff0c\u8868\u793a\u6bcf\u5929\u7684\u6e29\u5ea6\uff0c\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4 <code>&lt;span&gt;answer&lt;/span&gt;</code> \uff0c\u5176\u4e2d <code>&lt;span&gt;answer[i]&lt;/span&gt;</code> \u662f\u6307\u5bf9\u4e8e\u7b2c <code>&lt;span&gt;i&lt;/span&gt;</code> \u5929\uff0c\u4e0b\u4e00\u4e2a\u66f4\u9ad8\u6e29\u5ea6\u51fa\u73b0\u5728\u51e0\u5929\u540e\u3002\u5982\u679c\u6c14\u6e29\u5728\u8fd9\u4e4b\u540e\u90fd\u4e0d\u4f1a\u5347\u9ad8\uff0c\u8bf7\u5728\u8be5\u4f4d\u7f6e\u7528 <code>&lt;span&gt;0&lt;/span&gt;</code> \u6765\u4ee3\u66ff\u3002</li> </ol> Text Only<pre><code>public static int[] dailyTemperatures(int[] nums) {\n        int n = nums.length;\n        int[] ans = new int[n];\n        r = 0;\n        for (int i = 0, cur; i &lt; n; i++) {\n            // \u76f8\u7b49\u65f6\u5019\u7684\u5904\u7406\uff0c\u76f8\u7b49\u4e5f\u52a0\u5165\u5355\u8c03\u6808\n            while (r &gt; 0 &amp;&amp; nums[stack[r - 1]] &lt; nums[i]) {\n                cur = stack[--r];\n                ans[cur] = i - cur;\n            }\n            stack[r++] = i;\n        }\n        return ans;\n    }\n</code></pre> <ol> <li>\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u4e4b\u548c</li> <li>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;arr&lt;/span&gt;&lt;/span&gt;</code>\uff0c\u627e\u5230 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;min(b)&lt;/span&gt;&lt;/span&gt;</code> \u7684\u603b\u548c\uff0c\u5176\u4e2d <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;b&lt;/span&gt;&lt;/span&gt;</code> \u7684\u8303\u56f4\u4e3a <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;arr&lt;/span&gt;&lt;/span&gt;</code> \u7684\u6bcf\u4e2a\uff08\u8fde\u7eed\uff09\u5b50\u6570\u7ec4\u3002</li> </ol> <p>\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u56e0\u6b64 \u8fd4\u56de\u7b54\u6848\u6a21 <code>&lt;span class=\"color_font\"&gt;&lt;strong&gt;&lt;span&gt;10^9 + 7&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;</code> \u3002</p> <ol> <li>\u601d\u8def\uff1a</li> <li>\u91cd\u70b9\u662f\u6c42\u6700\u5c0f\u503c\uff0c\u5982\u679c\u662f\u66b4\u529b\u7684\u8bdd\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n*logn*n^2)\u3002</li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u503c\uff0c\u627e\u5230\u5de6\u8fb9\u548c\u53f3\u8fb9\u6700\u8fd1\u6bd4\u5b83\u5c0f\u7684\u6570(\u5219\u8303\u56f4\u5185\u7684\u6570\u90fd\u6bd4\u4ed6\u5927)\uff0c\u5219\u5b83\u662f\u5728\u8be5\u8303\u56f4\u5185\u7684\u6240\u6709\u5305\u542b\u8be5\u5143\u7d20\u7684\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u3002\u8fd9\u4e9b\u6570\u7ec4\u7684\u4e2a\u6570\u603b\u5171\u6709cnt = (cur-left)*(i-cur)\u4e2a\u3002\u5219\u8fd9\u4e2a\u90e8\u5206\u548c\u662fcnt*nums[cur]\u3002</li> <li>\u5bf9\u4e8e\u8fd9\u91cc\u7684\u91cd\u590d\u503c\uff0c\u4e0d\u7528\u8fdb\u884c\u4fee\u6b63\uff0c\u56e0\u4e3a\u540e\u9762\u91cd\u590d\u503c\u8fdb\u6808\u7684\u65f6\u5019\u81ea\u7136\u4f1acover\u8fd9\u4e2a\u60c5\u51b5\u3002</li> </ol>"},{"location":"LANG/DS-leetcode/#_80","title":"\u5355\u8c03\u961f\u5217","text":""},{"location":"LANG/DS-leetcode/#_81","title":"\u539f\u7406","text":"<ol> <li>\u6700\u5e38\u7528\u573a\u666f\uff1a\u7ef4\u62a4\u6bcf\u4e2a\u7a97\u53e3\u7684\u6700\u5927\u503c\u6216\u8005\u6700\u5c0f\u503c</li> <li>\u901a\u8fc7\u6570\u7ec4\u5b9e\u73b0\u53cc\u7aef\u961f\u5217</li> </ol>"},{"location":"LANG/DS-leetcode/#_82","title":"\u4f8b\u9898","text":"<ol> <li>\u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5927\u503c</li> <li>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;nums&lt;/span&gt;&lt;/span&gt;</code>\uff0c\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \u7684\u6ed1\u52a8\u7a97\u53e3\u4ece\u6570\u7ec4\u7684\u6700\u5de6\u4fa7\u79fb\u52a8\u5230\u6570\u7ec4\u7684\u6700\u53f3\u4fa7\u3002\u4f60\u53ea\u53ef\u4ee5\u770b\u5230\u5728\u6ed1\u52a8\u7a97\u53e3\u5185\u7684 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;k&lt;/span&gt;&lt;/span&gt;</code> \u4e2a\u6570\u5b57\u3002\u6ed1\u52a8\u7a97\u53e3\u6bcf\u6b21\u53ea\u5411\u53f3\u79fb\u52a8\u4e00\u4f4d\u3002</li> </ol> <p>\u8fd4\u56de \u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c \u3002</p> <ol> <li>\u601d\u8def\uff1a</li> <li>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7a97\u53e3\uff0c\u66f4\u65b0\u76f8\u5e94\u7684\u961f\u5217\uff0c</li> <li>\u4fdd\u8bc1\u961f\u5217\u7684\u5934\u90e8\u59cb\u7ec8\u662f\u8be5\u7a97\u53e3\u7684\u7b54\u6848\uff0c\u4f7f\u7528\u7684\u662f\u5355\u8c03\u961f\u5217\uff0c\u4f7f\u5f97\u6700\u5927\u503c\u59cb\u7ec8\u5728head\u4f4d\u7f6e(\u53ef\u4ee5\u770b\u505a\u662f\u5143\u7d20\u7684\u72b6\u6001\u7ef4\u62a4)</li> <li>\u5f53\u7a97\u53e3\u7684l\u4f4d\u7f6e\u4e0e\u961f\u5217\u5934\u90e8\u76f8\u7b49\uff0c\u7531\u4e8e\u4e0b\u4e00\u6b65l++,\u5219\u5fc5\u987b\u8981\u5c06head\u51fa\u961f\u5217\uff0c\u56e0\u4e3a\u5b83\u8fc7\u671f\u4e86\u3002</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(1)\uff0c\u961f\u5217\u4e2d\u6570\u5b57\u53ea\u4f1a\u8fdb\u51fa\u4e00\u6b21</li> <li>\u7531\u8be5\u6027\u8d28\u7ef4\u62a4\u7684\u961f\u5217\u5927\u5c0f\u662f&lt;=\u8fdb\u6765\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u6240\u4ee5\u5982\u679c\u4e0b\u4e00\u4e2a\u8981\u8fdb\u6765\uff0c\u5c31\u5e94\u8be5\u5c06\u4e0a\u4e00\u4e2a\u5934\u90e8\u51fa\u961f\u5217</li> </ol> Text Only<pre><code>class Solution {\n    public static int MAXN = 100001;\n    public static int[] deque = new int[MAXN];\n    public static int h,t;\n    public int[] maxSlidingWindow(int[] nums, int k) {\n        int n = nums.length;\n        int[] ans = new int[n-k+1];\n        h = 0;\n        t = 0;\n        //\u521d\u59cb\u5316\u8981\u7ef4\u62a4\u7684\u961f\u5217\n        for(int i=0; i&lt;k-1; i++){\n            while(h&lt;t &amp;&amp; nums[i] &gt; nums[deque[t-1]] ){\n                t--;\n            }\n            deque[t++] = i;\n        }\n        //\u4ece\u7b2c\u4e00\u7ec4\u5f00\u59cb\u7ef4\u62a4\u961f\u5217\n        for(int l=0,r=k-1; r&lt;n;l++,r++){\n            while(h &lt; t &amp;&amp; nums[r]&gt;nums[deque[t-1]]){\n                t--;\n            }\n            deque[t++] = r;\n            ans[l] = nums[deque[h]];\n            if(deque[h] == l){\n                h++;\n            }\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_83","title":"\u5e76\u67e5\u96c6","text":"<p>\u539f\u7406\uff1a</p> <ol> <li> <p>\u5b9a\u4e49\uff1a\u5e76\u67e5\u96c6\u662f\u4e00\u79cd\u7528\u4e8e\u7ba1\u7406\u5143\u7d20\u6240\u5c5e\u96c6\u5408\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b9e\u73b0\u4e3a\u4e00\u4e2a\u68ee\u6797\uff0c\u5176\u4e2d\u6bcf\u68f5\u6811\u8868\u793a\u4e00\u4e2a\u96c6\u5408\uff0c\u6811\u4e2d\u7684\u8282\u70b9\u8868\u793a\u5bf9\u5e94\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002\u987e\u540d\u601d\u4e49\uff0c\u5e76\u67e5\u96c6\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a</p> </li> <li> <p>\u5408\u5e76\uff08Union\uff09\uff1a\u5408\u5e76\u4e24\u4e2a\u5143\u7d20\u6240\u5c5e\u96c6\u5408\uff08\u5408\u5e76\u5bf9\u5e94\u7684\u6811\uff09</p> </li> <li>\u67e5\u8be2\uff08Find\uff09\uff1a\u67e5\u8be2\u67d0\u4e2a\u5143\u7d20\u6240\u5c5e\u96c6\u5408\uff08\u67e5\u8be2\u5bf9\u5e94\u7684\u6811\u7684\u6839\u8282\u70b9\uff09\uff0c\u8fd9\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408</li> <li>\u6b64\u5904\u6211\u4eec\u4f7f\u7528\u4e24\u4e2a\u6570\u7ec4father\u548csize\u6570\u7ec4\uff0c\u7528\u6765\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u6570\u6839\u8282\u70b9\u4ee5\u53ca\u96c6\u5408\u7684\u5927\u5c0f\u3002</li> <li>\u8282\u70b9\u6240\u5728\u96c6\u5408\u5408\u5e76(Union)\uff1a\u8282\u70b9\u52a0\u5165\uff0c\u5219\u8be5\u8282\u70b9\u5bf9\u5e94\u7684father\u4f4d\u7f6e\u6539\u4e3a\u7236\u4eb2\u8282\u70b9\u7684\u4e0b\u6807\u3002\u4ee5\u540e\u67e5\u627e\u8be5\u8282\u70b9\u6240\u5728\u7684\u96c6\u5408\u5927\u5c0f\u662ffather\u8282\u70b9\u7684\u5bf9\u5e94\u7684size\u3002\u6302\u7684\u65f6\u5019\u662f\u5c0f\u7684\u96c6\u5408\u6302\u5927\u7684\u96c6\u5408\u3002</li> <li>\u67e5\u8be2\uff1a\u4e00\u76f4\u627e\u8be5\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u9012\u5f52\u67e5\u627e\u76f4\u5230\u6839\u8282\u70b9\u3002</li> <li>\u8def\u5f84\u538b\u7f29(\u6241\u5e73\u5316):\u5411\u4e0a\u5bfb\u627e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u627e\u5230\u4e86\u6839\u8282\u70b9\uff0c\u5c31\u5c06\u8be5\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9\u90fd\u76f4\u63a5\u6307\u5411\u8be5\u8282\u70b9\u3002</li> <li>\u7ecf\u5178\u4f18\u5316\u624b\u6bb5\uff1a</li> <li>\u6241\u5e73\u5316\uff1a\u8def\u5f84\u538b\u7f29\uff0c\u4f7f\u7528\u6808(\u8f85\u52a9\u6570\u7ec4\u6765\u8fdb\u884c\u8def\u5f84\u7684\u6536\u96c6)\u3002\u53ef\u4ee5\u4e0d\u5f3a\u5236\u6241\u5e73\u5316\uff0c\u800c\u662f\u9047\u5230\u4e00\u5b9a\u957f\u5ea6\u7684\u94fe\u5728\u8fdb\u884c\u6241\u5e73\u5316</li> <li>\u5c0f\u6302\u5927</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6(\u7ed3\u8bba):\u5355\u6b21\u8c03\u7528\u5c31\u662fO(1)</li> <li>\u533a\u95f4\u5e76\u67e5\u96c6\uff1a</li> <li>\u57fa\u672c\u601d\u8def\uff1a\u5c06\u76ee\u5149\u653e\u5728\u8fb9\u4e0a\uff0c\u8fde\u63a5\u4e09\u70b9\u4e4b\u95f4\u7684\u4e24\u6761\u8fb9\uff0c\u5c31\u662f\u5c06\u8fd9\u4e24\u6761\u8fb9\u5f52\u4e3a\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u521d\u59cb\u96c6\u5408\u6570\u91cf\u6700\u591a\uff0c\u6bcf\u6b21\u5408\u5e76\u90fd\u4f1a\u51cf\u5c11\u3002</li> <li>\u4e00\u822c\u4e0d\u9700\u8981\u4f7f\u7528\u5c0f\u6302\u5927\u7684\u4f18\u5316\uff0c\u76f4\u63a5\u8d4b\u503cfather\u6570\u7ec4\u5c31\u53ef\u4ee5\u3002\u76f4\u63a5\u4f7f\u7528\u6839\u8282\u70b9\uff0c\u52a0\u901f\u64cd\u4f5c\u3002</li> </ol> Text Only<pre><code>class Solution {\n    public static int MAXN = 200010;\n    public static int[] father = new int[MAXN];\n    public static int[] size = new int[MAXN];\n    public static int[] stack = new int[MAXN];\n    public static int r;\n    public int[] shortestDistanceAfterQueries(int n, int[][] queries) {\n        build(n);\n        int[] ans = new int[queries.length];\n        int cnt = n-1;\n        for(int q=0; q&lt;queries.length;q++){\n            //[0,2] -&gt; [0,1],[1,2]\n            int l = queries[q][0],r = queries[q][1]-1;\n            int fr = find(r);\n            // \u5c06\u533a\u95f4[l,r-1]\u4e0a\u6240\u6709\u5143\u7d20\u6302\u5230r\u8282\u70b9\u4e0b\u9762\uff0c\u6210\u4e3a\u4e00\u4e2a\u8fde\u901a\u5757\n            for(int i=find(l);i&lt;r;i = find(i+1)){\n                father[i] = fr;\n                cnt--;\n            }\n            ans[q] = cnt;\n        }\n        return ans;\n\n    }\n    public static void build(int n) {\n\n        for (int i = 0; i &lt; n; i++) {\n            father[i] = i;\n            size[i] = 1;\n        }\n    }\n\n    public static int find(int i) {\n        int size = 0;\n        while (i != father[i]) {\n            stack[size++] = i;\n            i = father[i];\n        }\n        while (size &gt; 0) {\n            father[stack[--size]] = i;\n        }\n        return i;\n    }\n\n    public static boolean isSameSet(int x, int y) {\n        return find(x) == find(y);\n    }\n}\n</code></pre> <p>\u4f8b\u9898\uff1a</p> <ol> <li>\u677f\u5b50\u9898\uff1a</li> </ol> Text Only<pre><code>object Solution {\n  val MAXN = 100007\n  val father: Array[Int] = Array.fill(MAXN)(-1)\n  val size: Array[Int] = Array.fill(MAXN)(-1)\n  def countPairs(n: Int, edges: Array[Array[Int]]): Long = {\n    build(n)\n    for(e &lt;- edges){\n      union(e(0), e(1))\n    }\n    val fIndex=  (for(i &lt;- 0 until n) yield find(i)).distinct\n    var cnt = 0L\n    for(i &lt;- fIndex){\n      cnt += size(i).toLong*(size(i)-1)/2\n    }\n    n.toLong*(n-1)/2 - cnt\n  }\n  def build(n: Int): Unit ={\n    for(i &lt;- 0 until n){\n      father(i) = i\n      size(i) = 1\n    }\n  }\n  def find(x: Int): Int = {\n    if(father(x) == x) return x\n    father(x) = find(father(x))\n    father(x)\n  }\n  def union(x: Int, y: Int): Unit = {\n    val fx = find(x)\n    val fy = find(y)\n    if(fx == fy) return\n    else{\n      if(size(fx) &gt;= size(fy)){\n        size(fx) += size(fy)\n        father(fy) = fx\n      }else{\n        size(fy) += size(fx)\n        father(fx) = fy\n      }\n    }\n  }\n  def isSameSet(x: Int, y: Int):Boolean = {find(x) == find(y)}\n}\n</code></pre> Text Only<pre><code>import java.util.Scanner;\nimport java.io.*;\n\n// \u6ce8\u610f\u7c7b\u540d\u5fc5\u987b\u4e3a Main, \u4e0d\u8981\u6709\u4efb\u4f55 package xxx \u4fe1\u606f\npublic class Main {\n    public static int MAXN = 1000001;\n    public static int[] father = new int[MAXN];\n    public static int[] size = new int[MAXN];\n    public static int[] stk = new int[MAXN];\n    public static int r;\n    public static int n;\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StreamTokenizer in = new StreamTokenizer(br);\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n        while (in.nextToken() != StreamTokenizer.TT_EOF) {\n            n = (int) in.nval;\n            build();\n            in.nextToken();\n            int m = (int) in.nval;\n            for (int i = 0; i &lt; m; i++) {\n                in.nextToken();\n                int op = (int) in.nval;\n                in.nextToken();\n                int x = (int) in.nval;\n                in.nextToken();\n                int y = (int) in.nval;\n                if (op == 1) {\n                    out.println(isSameSet(x, y) ? \"Yes\" : \"No\");\n                } else {\n                    union(x, y);\n                }\n            }\n        }\n        out.flush();\n        out.close();\n        br.close();\n    }\n    public static void build(){\n        //\n        for(int i=0;i&lt;n; i++){\n            father[i] = i;\n            size[i] = 1;\n        }\n    }\n    public static int find(int x){\n        r = 0;\n        while(x != father[x]){\n            stk[r++] = father[x];\n            x = father[x];\n        }\n        while(r &gt; 0){\n            r--;\n            father[stk[r]] = x;\n        }\n        return x;\n    }\n    public static boolean isSameSet(int x, int y){\n        return find(x) == find(y) ? true : false;\n    }\n    public static void union(int x, int y){\n        int fx = find(x);\n        int fy = find(y);\n        if(fx == fy){\n            return;\n        }else{\n            if (size[fx] &gt;= size[fy]) {\n                size[fx] += size[fy];\n                father[fy] = fx;\n            } else {\n                size[fy] += size[fx];\n                father[fx] = fy;\n            }\n        }\n    }\n}\n</code></pre> <ol> <li>leetcode 1971\u5bfb\u627e\u56fe\u4e2d\u662f\u5426\u5b58\u5728\u8def\u5f84</li> <li>\u8fde\u901a\u7684\u56fe\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u53ef\u4ee5\u88ab\u67e5\u627e\u5230\u3002\u4f7f\u7528\u8fd9\u4e2a\u6027\u8d28\uff0c\u8fdb\u884c\u67e5\u627e</li> </ol> Text Only<pre><code>class Solution {\n    public static int MAXN = 200010;\n    public static int[] father = new int[MAXN];\n    public static int[] size = new int[MAXN];\n    public static int[] stack = new int[MAXN];\n    public static int r;\n    public boolean validPath(int n, int[][] edges, int source, int destination){ {\n        build(n);\n        for(int i=0;i&lt;edges.length;i++){\n            union(edges[i][0], edges[i][1]);\n        }\n        return find(source) == find(destination);\n    }\n    public static void build(int n) {\n\n        for (int i = 0; i &lt; n; i++) {\n            father[i] = i;\n            size[i] = 1;\n        }\n    }\n\n    public static int find(int i) {\n        int size = 0;\n        while (i != father[i]) {\n            stack[size++] = i;\n            i = father[i];\n        }\n        while (size &gt; 0) {\n            father[stack[--size]] = i;\n        }\n        return i;\n    }\n\n    public static boolean isSameSet(int x, int y) {\n        return find(x) == find(y);\n    }\n\n    public static void union(int x, int y) {\n        int fx = find(x);\n        int fy = find(y);\n        if (fx != fy) {\n            if (size[fx] &gt;= size[fy]) {\n                size[fx] += size[fy];\n                father[fy] = fx;\n            } else {\n                size[fy] += size[fx];\n                father[fx] = fy;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_84","title":"\u56fe\u8bba","text":""},{"location":"LANG/DS-leetcode/#_85","title":"\u5efa\u56fe","text":"<ol> <li>\u65b9\u5f0f\u67093\u79cd\uff1a\u90bb\u63a5\u77e9\u9635\uff0c\u90bb\u63a5\u8868\uff0c\u94fe\u5f0f\u524d\u5411\u661f</li> <li>\u4e00\u822c\u4ece\u6709\u5411\u56fe\u5f00\u59cb\uff0c\u56e0\u4e3a\u65e0\u5411\u56fe\u662f\u53cc\u5411\u7684\u5b9e\u73b0\u3002</li> <li>\u4e00\u822c\u4f7f\u7528\u8fb9\u7684\u5e8f\u53f7\u4ece1\u5f00\u59cb:1,2,3,4....\u3002\u529b\u6263\u4e0a\u70b9\u7684\u7f16\u53f7\u662f\u4ece0\u5f00\u59cb\uff0c\u6ce8\u610f\u5ba1\u9898</li> </ol>"},{"location":"LANG/DS-leetcode/#_86","title":"\u90bb\u63a5\u77e9\u9635","text":"<ol> <li>\u539f\u7406</li> <li>\u4e0b\u56fe\u662f\u6709\u5411\u56fe\u4ee5\u53ca\u90bb\u63a5\u77e9\u9635\uff0c\u5982\u679c\u662f\u65e0\u5411\u56fe\u5219\u662f\u5173\u4e8e\u5bf9\u89d2\u7ebf\u5bf9\u79f0\u7684\u77e9\u9635</li> <li>\u5982\u679c\u662f\u5e26\u6743\u56fe\uff0c\u5219\u77e9\u9635\u5bf9\u5e94\u4f4d\u7f6e\u7684\u6570\u5b57\u662fw\u6743\u503c</li> <li>\u5982\u679c\u6ca1\u6709\u94fe\u63a5\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a0\u6216\u8005\u6b63\u65e0\u7a77(\u5982\u679c\u51fa\u73b0\u6743\u503c\u4e3a0\u7684\u5c31\u9700\u8981\u4f7f\u7528\u6b63\u65e0\u7a77)</li> <li>\u4f7f\u7528\u573a\u666f\uff1a\u6570\u636e\u91cf\u8f83\u5c0f\u7684\u65f6\u5019</li> </ol>"},{"location":"LANG/DS-leetcode/#_87","title":"\u90bb\u63a5\u8868","text":"<ol> <li>\u539f\u7406\uff1a</li> <li>\u4f7f\u7528List&gt;\u7684\u5f62\u5f0f\u3002\u90fd\u662f\u52a8\u6001\u5217\u8868\u3002<ol> <li>\u5982\u679c\u662f\u65e0\u6743\u56fe\uff1a\u5219\u662f\u6570\u7ec4\u957f\u5ea6\u4e3a1\u3002\u5982\u679c\u662f\u6709\u6743\u56fe\uff0c\u5c31\u662f\u4e5f\u5c31\u662f\u6bcf\u6b21\u5b58\u5165\u7684\u90fd\u662f\u4e00\u4e2a\u5c0f\u6570\u7ec4\uff0c\u5305\u542b\u8282\u70b9\u4ee5\u53ca\u8fde\u63a5\u7684\u6743\u503c\uff0c\u6570\u7ec4\u957f\u5ea6\u4e3a2\u3002</li> </ol> <li>\u4f7f\u7528\u573a\u666f\uff1a\u4e00\u822c\u60c5\u51b5\u5b8c\u5168\u8db3\u591f\u4e86</li> <li>\u65e0\u6743\u56fe(\u5de6)\u4ee5\u53ca\u6709\u6743\u56fe(\u53f3)</li>"},{"location":"LANG/DS-leetcode/#_88","title":"\u94fe\u5f0f\u524d\u5411\u661f","text":"<ol> <li>\u4e3a\u4e86\u4f7f\u7528\u9759\u6001\u6570\u7ec4\u8fdb\u884c\u7a7a\u95f4\u7684\u4f18\u5316\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u52a8\u6001\u7ed3\u6784</li> <li>\u5b9e\u5728\u56fa\u5b9a\u6570\u7ec4\u4e0a\u5b9e\u73b0\u4e86\u90bb\u63a5\u8868</li> <li>\u4f8b\u5b50\uff1a</li> <li>\u5047\u8bben=4\uff0cm=6,\u4e5f\u5c31\u662f4\u4e2a\u70b9\uff0c6\u6761\u8fb9\u7684\u6709\u5411\u56fe</li> <li>head\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3an+1\u7684\u4e00\u7ef4\u6570\u7ec4\uff0cindex\u4ee3\u8868\u7684\u662f\u8282\u70b9\u53f7\uff0cvalue\u662f\u5934\u8fb9\u53f7</li> <li>next\u6570\u7ec4\uff0c\u957f\u5ea6\u53d6\u51b3\u4e8e\u8fb9\u7684\u89c4\u6a21\u3002index\u662f\u8fb9\u7684\u7f16\u53f7\uff0cvalue\u662f\u4e0b\u4e00\u6761\u8fb9\u7684\u7f16\u53f7</li> <li>to\u6570\u7ec4\uff0cindex\u4ee3\u8868\u8fb9\u7684\u7f16\u53f7\uff0cvalue\u4ee3\u8868\u53bb\u5f80\u7684\u70b9</li> <li>int cnt =1\u3002\u7528\u6765\u8bb0\u5f55\u8fb9\u7684\u7f16\u53f7\u7684\u53d8\u91cf</li> <li>\u5982\u679c\u662f\u5e26\u6743\u503c\u7684\u56fe\uff0c\u5219\u518d\u52a0\u4e00\u4e2aw\u6570\u7ec4\uff0cindex\u662f\u8fb9\u7684\u7f16\u53f7\uff0cvalue\u662f\u6743\u503c</li> </ol> Text Only<pre><code>public class Code01_CreateGraph {\n\n    // \u70b9\u7684\u6700\u5927\u6570\u91cf\n    public static int MAXN = 11;\n\n    // \u8fb9\u7684\u6700\u5927\u6570\u91cf\n    // \u53ea\u6709\u94fe\u5f0f\u524d\u5411\u661f\u65b9\u5f0f\u5efa\u56fe\u9700\u8981\u8fd9\u4e2a\u6570\u91cf\n    // \u6ce8\u610f\u5982\u679c\u65e0\u5411\u56fe\u7684\u6700\u5927\u6570\u91cf\u662fm\u6761\u8fb9\uff0c\u6570\u91cf\u8981\u51c6\u5907m*2\n    // \u56e0\u4e3a\u4e00\u6761\u65e0\u5411\u8fb9\u8981\u52a0\u4e24\u6761\u6709\u5411\u8fb9\n    public static int MAXM = 21;\n\n    // \u90bb\u63a5\u77e9\u9635\u65b9\u5f0f\u5efa\u56fe\n    public static int[][] graph1 = new int[MAXN][MAXN];\n\n    // \u90bb\u63a5\u8868\u65b9\u5f0f\u5efa\u56fe\n    // public static ArrayList&lt;ArrayList&lt;Integer&gt;&gt; graph2 = new ArrayList&lt;&gt;();\n    public static ArrayList&lt;ArrayList&lt;int[]&gt;&gt; graph2 = new ArrayList&lt;&gt;();\n\n    // \u94fe\u5f0f\u524d\u5411\u661f\u65b9\u5f0f\u5efa\u56fe\n    public static int[] head = new int[MAXN];\n\n    public static int[] next = new int[MAXM];\n\n    public static int[] to = new int[MAXM];\n\n    // \u5982\u679c\u8fb9\u6709\u6743\u91cd\uff0c\u90a3\u4e48\u9700\u8981\u8fd9\u4e2a\u6570\u7ec4\n    public static int[] weight = new int[MAXM];\n\n    public static int cnt;\n\n    public static void build(int n) {\n        // \u90bb\u63a5\u77e9\u9635\u6e05\u7a7a\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 1; j &lt;= n; j++) {\n                graph1[i][j] = 0;\n            }\n        }\n        // \u90bb\u63a5\u8868\u6e05\u7a7a\u548c\u51c6\u5907\n        graph2.clear();\n        // \u4e0b\u6807\u9700\u8981\u652f\u63011~n\uff0c\u6240\u4ee5\u52a0\u5165n+1\u4e2a\u5217\u8868\uff0c0\u4e0b\u6807\u51c6\u5907\u4f46\u4e0d\u7528\n        for (int i = 0; i &lt;= n; i++) {\n            graph2.add(new ArrayList&lt;&gt;());\n        }\n        // \u94fe\u5f0f\u524d\u5411\u661f\u6e05\u7a7a\n        cnt = 1;\n        Arrays.fill(head, 1, n + 1, 0);\n    }\n\n    // \u94fe\u5f0f\u524d\u5411\u661f\u52a0\u8fb9\n    public static void addEdge(int u, int v, int w) {\n        // u -&gt; v , \u8fb9\u6743\u91cd\u662fw\n        //\u53d8\u66f4\u987a\u5e8f\u5012\u8fc7\u6765\uff0c\u4f9d\u6b21\u662fto,next,head\n        to[cnt] = v;\n        next[cnt] = head[u];\n        head[u] = cnt++;\n    }\n\n    // \u4e09\u79cd\u65b9\u5f0f\u5efa\u7acb\u6709\u5411\u56fe\u5e26\u6743\u56fe\n    public static void directGraph(int[][] edges) {\n        // \u90bb\u63a5\u77e9\u9635\u5efa\u56fe\n        for (int[] edge : edges) {\n            graph1[edge[0]][edge[1]] = edge[2];\n        }\n        // \u90bb\u63a5\u8868\u5efa\u56fe\n        for (int[] edge : edges) {\n            // graph2.get(edge[0]).add(edge[1]);\n            graph2.get(edge[0]).add(new int[] { edge[1], edge[2] });\n        }\n        // \u94fe\u5f0f\u524d\u5411\u661f\u5efa\u56fe\n        for (int[] edge : edges) {\n            addEdge(edge[0], edge[1], edge[2]);\n        }\n    }\n\n    // \u4e09\u79cd\u65b9\u5f0f\u5efa\u7acb\u65e0\u5411\u56fe\u5e26\u6743\u56fe\n    public static void undirectGraph(int[][] edges) {\n        // \u90bb\u63a5\u77e9\u9635\u5efa\u56fe\n        for (int[] edge : edges) {\n            graph1[edge[0]][edge[1]] = edge[2];\n            graph1[edge[1]][edge[0]] = edge[2];\n        }\n        // \u90bb\u63a5\u8868\u5efa\u56fe\n        for (int[] edge : edges) {\n            // graph2.get(edge[0]).add(edge[1]);\n            // graph2.get(edge[1]).add(edge[0]);\n            graph2.get(edge[0]).add(new int[] { edge[1], edge[2] });\n            graph2.get(edge[1]).add(new int[] { edge[0], edge[2] });\n        }\n        // \u94fe\u5f0f\u524d\u5411\u661f\u5efa\u56fe\n        for (int[] edge : edges) {\n            addEdge(edge[0], edge[1], edge[2]);\n            addEdge(edge[1], edge[0], edge[2]);\n        }\n    }\n\n    public static void traversal(int n) {\n        System.out.println(\"\u90bb\u63a5\u77e9\u9635\u904d\u5386 :\");\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 1; j &lt;= n; j++) {\n                System.out.print(graph1[i][j] + \" \");\n            }\n            System.out.println();\n        }\n        System.out.println(\"\u90bb\u63a5\u8868\u904d\u5386 :\");\n        for (int i = 1; i &lt;= n; i++) {\n            System.out.print(i + \"(\u90bb\u5c45\u3001\u8fb9\u6743) : \");\n            for (int[] edge : graph2.get(i)) {\n                System.out.print(\"(\" + edge[0] + \",\" + edge[1] + \") \");\n            }\n            System.out.println();\n        }\n        System.out.println(\"\u94fe\u5f0f\u524d\u5411\u661f :\");\n        for (int i = 1; i &lt;= n; i++) {\n            System.out.print(i + \"(\u90bb\u5c45\u3001\u8fb9\u6743) : \");\n            // \u6ce8\u610f\u8fd9\u4e2afor\u5faa\u73af\uff0c\u94fe\u5f0f\u524d\u5411\u661f\u7684\u65b9\u5f0f\u904d\u5386\n            for (int ei = head[i]; ei &gt; 0; ei = next[ei]) {\n                System.out.print(\"(\" + to[ei] + \",\" + weight[ei] + \") \");\n            }\n            System.out.println();\n        }\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_89","title":"\u62d3\u6251\u6392\u5e8f","text":"<ol> <li>\u8981\u6c42\uff1a\u62d3\u6251\u6392\u5e8f\u7684\u76ee\u6807\u662f\u5c06\u6240\u6709\u8282\u70b9\u6392\u5e8f\uff0c\u4f7f\u5f97\u6392\u5728\u524d\u9762\u7684\u8282\u70b9\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u6392\u5728\u540e\u9762\u7684\u8282\u70b9</li> <li>\u4f7f\u7528\u8981\u6c42\uff1a\u6709\u5411\u65e0\u73af\u56fe(DAG)\uff0c\u65e0\u5411\u56fe\u4e0d\u53ef\u4ee5\uff0c\u56e0\u4e3a\u65e0\u5411\u56fe\u5929\u7136\u5e26\u73af</li> <li>\u5b9e\u9645\u573a\u666f\uff1a\u5de5\u4f5c\u6d41\u5b89\u6392\uff0c\u7f16\u8bd1\u7684\u8fc7\u7a0b</li> <li> <p>\u524d\u7f6e\u6982\u5ff5\uff1a</p> </li> <li> <p>\u5165\u5ea6\uff1a\u6709\u591a\u5c11\u8282\u70b9\u6307\u5411\u8be5\u8282\u70b9</p> </li> <li>\u51fa\u5ea6\uff1a\u8be5\u8282\u70b9\u6307\u5411\u591a\u5c11\u4e2a\u8282\u70b9</li> <li>\u8fc7\u7a0b(\u5165\u5ea6\u5220\u9664\u6cd5)\uff1a</li> <li>\u627e\u5230\u4e00\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9(\u56e0\u4e3a\u5165\u5ea6\u4e3a0\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\uff0c\u5b64\u7acb\u7684\u70b9\u4e5f\u662f\u5165\u5ea6\u4e3a0)</li> <li>\u6d88\u9664\u6389\u8be5\u70b9\u5bf9\u5176\u4ed6\u8282\u70b9\u7684\u5f71\u54cd(\u5165\u5ea6\u5220\u9664\u6cd5)</li> <li>\u91cd\u590da,b\u6b65\u9aa4</li> <li>\u6574\u4e2a\u6b65\u9aa4\u4f1a\u5220\u9664\u6240\u6709\u70b9\uff0c\u5982\u679c\u5220\u9664\u7684\u4e2a\u6570\u548c\u603b\u7ed3\u70b9\u4e2a\u6570\u4e0d\u540c\uff0c\u5219\u51fa\u73b0\u4e86\u73af(\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u662f\u5426\u6709\u73af)</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(V+E)</li> <li>\u4f8b\u9898leetcode210\uff1a</li> <li>\u8981\u6ce8\u610f\u9898\u76ee\u6240\u7ed9\u7684\u8fb9\u662f\u4ece0-n-1\u3002</li> <li>\u5982\u679c\u4f7f\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5efa\u56fe\uff0c\u53ef\u4ee5\u5c06\u9759\u6001\u6570\u7ec4\u7684\u521d\u59cb\u72b6\u6001\u5168\u90e8\u8bbe\u7f6e\u4e3a-1\uff0c\u9632\u6b62\u548c0\u6df7\u6742\u3002\u5728\u904d\u5386\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u7ec8\u6b62\u6761\u4ef6\u53d8\u4e3aei&gt;=0\u5373\u53ef\uff0c\u800c\u4e0d\u662f&gt;0\u3002</li> <li>\u5982\u679c\u8981\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u7ed3\u679c\uff0c\u5219\u5c06\u7ef4\u62a4\u7684\u961f\u5217\u6362\u6210\u5c0f\u6839\u5806\u5c31\u53ef\u4ee5\u3002</li> </ol> Text Only<pre><code>#\u4f7f\u7528\u90bb\u63a5\u8868\u5b58\u50a8\nclass Solution {\n    //\u6ce8\u610f[a,b]\u548c[b.a]\u7684\u533a\u522b\n    public int[] findOrder(int numCourses, int[][] prerequisites) {\n        List&lt;List&lt;Integer&gt;&gt; graph = new ArrayList&lt;&gt;();\n        int n = numCourses;\n        //\u70b9\u4ece0\u5f00\u59cb\n        for(int i=0;i&lt;n;i++){\n            graph.add(new ArrayList&lt;&gt;());\n        }\n        int[] indegree = new int[n];\n        for(int[] edge : prerequisites){\n            graph.get(edge[1]).add(edge[0]);\n            indegree[edge[0]]++;\n        }\n        int[] queue = new int[n];\n        int l = 0, r = 0;\n        for(int i=0; i&lt;n;i++){\n            if(indegree[i] == 0){\n                queue[r++] = i;\n            }\n        }\n        int cnt = 0;\n        while(l&lt;r){\n            int cur = queue[l++];\n            cnt++;\n            for(int next : graph.get(cur)){\n                indegree[next]--;\n                if(indegree[next] == 0){\n                    queue[r++] = next;\n                }\n            }\n        }\n\n        return cnt == n? queue : new int[0];\n    }\n}\n#\u4f7f\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u50a8\nclass Solution {\n    public static int MAXN = 2001;\n    public static int[] head = new int[MAXN];\n    public static int[] next = new int[MAXN*2];\n    public static int[] to = new int[MAXN*2];\n    public static int cnt;\n    public int[] findOrder(int numCourses, int[][] prerequisites) {\n        int n = numCourses;\n        int[] queue = new int[n];\n        int[] indegree = new int[n];\n        int l = 0, r = 0;\n        bulid(n);\n        for(int[] edge : prerequisites){\n            addEdge(edge[1], edge[0]);\n            indegree[edge[0]]++;\n        }\n        l = 0;\n        r = 0;\n        for(int i=0; i&lt;n; i++){\n            if(indegree[i] == 0){\n                queue[r++] = i;\n            }\n        }\n        int len = 0;\n        while(l&lt;r){\n            int cur = queue[l++];\n            len++;\n            for(int ei = head[cur]; ei &gt;= 0; ei = next[ei]){\n                indegree[to[ei]]--;\n                if(indegree[to[ei]] == 0){\n                    queue[r++] = to[ei];\n                }\n            }\n        }\n        return len == n? queue : new int[0];\n    }\n    public static void bulid(int n){\n        cnt = 0;\n        Arrays.fill(head, -1);\n        Arrays.fill(next,-1);\n        Arrays.fill(to, -1);\n    }\n    public static void addEdge(int u, int v){\n        to[cnt] = v;\n        next[cnt] = head[u];\n        head[u] = cnt++;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_90","title":"\u6d2a\u6c34\u586b\u5145","text":"<p>\u539f\u7406\uff1a\u7c7b\u4f3c\u4e8e\u6d2a\u6c34\u8513\u5ef6\u7684\u8fc7\u7a0b\uff0c\u7528\u4e8e\u7f51\u683c\u641c\u7d22\u3002\u901a\u8fc7\u8bbe\u7f6e\u8def\u5f84\u4fe1\u606f\uff0c\u7528\u4e8e\u7edf\u8ba1\u6216\u8005\u526a\u679d\u3002\u770b\u4f3c\u66b4\u529b\u9012\u5f52\uff0c\u5176\u5b9e\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u597d\u3002</p> <ol> <li>leetcode 200\u5c9b\u5c7f\u6570\u91cf</li> </ol> <p>\u7ed9\u4f60\u4e00\u4e2a\u7531 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;'1'&lt;/span&gt;&lt;/span&gt;</code>\uff08\u9646\u5730\uff09\u548c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;'0'&lt;/span&gt;&lt;/span&gt;</code>\uff08\u6c34\uff09\u7ec4\u6210\u7684\u7684\u4e8c\u7ef4\u7f51\u683c\uff0c\u8bf7\u4f60\u8ba1\u7b97\u7f51\u683c\u4e2d\u5c9b\u5c7f\u7684\u6570\u91cf\u3002</p> <p>\u5c9b\u5c7f\u603b\u662f\u88ab\u6c34\u5305\u56f4\uff0c\u5e76\u4e14\u6bcf\u5ea7\u5c9b\u5c7f\u53ea\u80fd\u7531\u6c34\u5e73\u65b9\u5411\u548c/\u6216\u7ad6\u76f4\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u9646\u5730\u8fde\u63a5\u5f62\u6210\u3002</p> <ol> <li>\u601d\u8def\uff1a\u4f7f\u7528\u6d2a\u6c34\u586b\u5145\uff0c\u611f\u67d3\u8fc7\u7a0b\u5c31\u662fdfs\u3002\u4ece\u5de6\u5f80\u53f3\uff0c\u4ece\u4e0a\u5f80\u4e0b\uff0c\u8fdb\u884c\u68c0\u67e5\u3002\u53d1\u73b0\u4e00\u4e2a1\uff0c\u5c31\u628a\u8fd9\u4e00\u7247\u7684\u4f4d\u7f6e\u5168\u90e8\u8513\u5ef6\u4e3a2\uff0c\u76f8\u5f53\u4e8e\u90fd\u904d\u5386\u4e86\uff0c\u91cd\u590d\u8be5\u8fc7\u7a0b\u3002\u4e0d\u7528\u64a4\u9500\u4fee\u6539\u4fe1\u606f\uff0c\u56e0\u4e3a\u5c31\u662f\u5229\u7528\u4fee\u6539\u7684\u526f\u4f5c\u7528\u3002</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(m*n)\uff0c\u5e76\u4e14\u662f\u6700\u4f18\u89e3\u3002\u6bcf\u4e2a\u4f4d\u7f6e\u6700\u591a\u88ab\u8bbf\u95ee4\u6b21\uff0c\u5e76\u4e14\u4fee\u6539\u7684\u64cd\u4f5c\u53ea\u7528\u8bbf\u95ee1\u6b21\uff0c\u4ee3\u4ef7\u662fO(1)\u7684\u3002</li> </ol> Text Only<pre><code>class Solution {\n    public static int[] move = new int[]{-1,0,1,0,-1};\n    public int numIslands(char[][] grid) {\n        int cnt = 0;\n        int m = grid.length;\n        int n = grid[0].length;\n        for(int i=0; i&lt;m;i++){\n            for(int j=0; j&lt;n;j++){\n                if(grid[i][j] == '1') cnt++;\n                dfs(grid, i, j);\n            }\n        }  \n        return cnt;  \n    }\n    public static void dfs(char[][] grid, int i, int j){\n        if(i&lt;0 ||i&gt;=grid.length || j&lt;0 || j &gt;= grid[0].length || grid[i][j] != '1'){\n            return;\n        }\n        grid[i][j] = '0';\n        for(int k=0; k&lt;4;k++){\n            int nx = i + move[k];\n            int ny = j + move[k+1];\n            dfs(grid,nx,ny);\n        }\n    }\n}\n</code></pre> <ol> <li>leetcode  130 \u88ab\u56f4\u7ed5\u7684\u533a\u57df</li> <li>\u601d\u8def\uff1a\u5148\u5bfb\u627e\u8fb9\u7f18\u7684\u8054\u901a\u533a\u57df\uff0c\u63d0\u524d\u6807\u8bb0\u533a\u522b\u5f00\u6765\u3002\u7136\u540e\u53ef\u4ee5\u5c06\u4e2d\u95f4\u7684\u95ed\u5408\u533a\u57df\u8fdb\u884c\u4fee\u6539\uff0c\u6700\u540e\u5c06\u8fb9\u7f18\u533a\u57df\u6062\u590d\u5373\u53ef\u3002</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6O(m*n)</li> </ol> Text Only<pre><code>class Solution {\n    public static int[] move = new int[]{-1,0,1,0,-1};\n    public void solve(char[][] board) {\n        int m = board.length;\n        int n = board[0].length;\n        for(int i=0; i&lt;m;i++){\n            for(int j=0; j&lt;n;j++){\n                if(i==0 || j == 0 || i==m-1 || j==n-1){\n                    if(board[i][j] == 'O'){\n                        dfs(board,i,j,'F');\n                    }\n                }\n            }\n        }\n        for(int i=0; i&lt;m;i++){\n            for(int j=0; j&lt;n;j++){\n                if(board[i][j] == 'O') board[i][j] = 'X';\n                if(board[i][j] == 'F') board[i][j] = 'O';\n            }\n        }\n    }\n    public static void dfs(char[][] board,int i, int j,char flag) {\n        if (i &lt; 0 || i == board.length|| j &lt; 0 || j == board[0].length || board[i][j] != 'O') {\n            return;\n        }\n        board[i][j] = flag;\n        for(int k=0; k&lt;4;k++){\n            int nx = i + move[k];\n            int ny = j + move[k+1];\n            dfs(board,nx,ny,flag);\n        }\n\n    }\n}\n</code></pre> <ol> <li>leetcode 827\uff1a\u6700\u5927\u4eba\u5de5\u5c9b</li> </ol> <p>\u7ed9\u4f60\u4e00\u4e2a\u5927\u5c0f\u4e3a <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;n x n&lt;/span&gt;&lt;/span&gt;</code> \u4e8c\u8fdb\u5236\u77e9\u9635 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;grid&lt;/span&gt;&lt;/span&gt;</code> \u3002\u6700\u591a \u53ea\u80fd\u5c06\u4e00\u683c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;</code> \u53d8\u6210 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;</code> \u3002</p> <p>\u8fd4\u56de\u6267\u884c\u6b64\u64cd\u4f5c\u540e\uff0c<code>&lt;span class=\"color_font\"&gt;&lt;span&gt;grid&lt;/span&gt;&lt;/span&gt;</code> \u4e2d\u6700\u5927\u7684\u5c9b\u5c7f\u9762\u79ef\u662f\u591a\u5c11</p> <ol> <li>\u601d\u8def\uff1a</li> <li>\u901a\u8fc7\u8fdb\u884c\u4e8c\u4f4d\u904d\u5386\uff0c\u7136\u540e\u8fdb\u884c\u8513\u5ef6\u3002\u6bcf\u7247\u4f4d\u7f6e\u4f7f\u7528\u4e0d\u540cid\u8fdb\u884c\u586b\u5145\u3002</li> <li>\u7136\u540e\u5bf9\u6bcf\u4e2a0\u8fdb\u884c\u679a\u4e3e\uff0c\u5bf9\u56db\u4e2a\u65b9\u5411\u8fdb\u884c\u904d\u5386\u3002\u5982\u679c\u6709\u533a\u57df\uff0c\u5c31\u589e\u52a0\u76f8\u5e94\u6570\u91cf\u3002\u6ce8\u610f\u4e0d\u8981\u91cd\u590d\u3002</li> </ol> <p></p> Text Only<pre><code>class Solution {\n    public static int[] move = new int[] { -1, 0, 1, 0, -1 };\n\n    public int largestIsland(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n        int id = 2;\n        for (int i = 0; i &lt; m; i++) {\n            for (int j = 0; j &lt; n; j++) {\n                if (grid[i][j] == 1) {\n                    dfs(grid, i, j, id++);\n                }\n            }\n        }\n        int[] size = new int[id];\n        int ans = 0;\n        for (int i = 0; i &lt; m; i++) {\n            for (int j = 0; j &lt; n; j++) {\n                if (grid[i][j] &gt; 1) {\n                    size[grid[i][j]]++;\n                    ans = Math.max(ans, size[grid[i][j]]);\n                }\n            }\n        }\n        // \u8ba8\u8bba\u6240\u6709\u76840\uff0c\u53d8\u62101\uff0c\u80fd\u5e26\u6765\u7684\u6700\u5927\u5c9b\u7684\u5927\u5c0f\n        boolean[] visited = new boolean[id];\n        int up, down, left, right, merge;\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = 0; j &lt; m; j++) {\n                if (grid[i][j] == 0) {\n                    up = i &gt; 0 ? grid[i - 1][j] : 0;\n                    down = i + 1 &lt; n ? grid[i + 1][j] : 0;\n                    left = j &gt; 0 ? grid[i][j - 1] : 0;\n                    right = j + 1 &lt; m ? grid[i][j + 1] : 0;\n                    visited[up] = true;\n                    merge = 1 + size[up];\n                    if (!visited[down]) {\n                        merge += size[down];\n                        visited[down] = true;\n                    }\n                    if (!visited[left]) {\n                        merge += size[left];\n                        visited[left] = true;\n                    }\n                    if (!visited[right]) {\n                        merge += size[right];\n                        visited[right] = true;\n                    }\n                    ans = Math.max(ans, merge);\n                    visited[up] = false;\n                    visited[down] = false;\n                    visited[left] = false;\n                    visited[right] = false;\n                }\n            }\n        }\n        return ans;\n    }\n    public static void dfs(int[][] grid, int i, int j, int id) {\n        if (i &lt; 0 || i &gt;= grid.length || j &lt; 0 || j &gt;= grid[0].length || grid[i][j] != 1) {\n            return;\n        }\n        grid[i][j] = id;\n        dfs(grid, i - 1, j, id);\n        dfs(grid, i + 1, j, id);\n        dfs(grid, i, j - 1, id);\n        dfs(grid, i, j + 1, id);\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_91","title":"\u6700\u5c0f\u751f\u6210\u6811","text":"<ol> <li> <p>\u5b9a\u4e49\uff1a</p> </li> <li> <p>\u751f\u6210\u6811\uff1a\u4e00\u4e2a\u8fde\u901a\u65e0\u5411\u56fe\u7684\u751f\u6210\u5b50\u56fe\uff0c\u540c\u65f6\u8981\u6c42\u662f\u6811\u3002\u4e5f\u5373\u5728\u56fe\u7684\u8fb9\u96c6\u4e2d\u9009\u62e9n-1\u6761\u8fb9\uff0c\u5c06\u6240\u6709\u9876\u70b9\u8054\u901a\u3002</p> </li> <li>\u6700\u5c0f\u751f\u6210\u6811\uff1a\u8fb9\u6743\u6700\u5c0f\u7684\u751f\u6210\u6811</li> <li>Kruskal\u7b97\u6cd5</li> <li>\u6700\u5e38\u7528</li> <li>\u4e0d\u9700\u8981\u5efa\u56fe\u3002\u4f7f\u7528\u5e76\u67e5\u96c6\u5373\u53ef</li> <li>\u601d\u8def\uff1a</li> <li>\u628a\u6240\u6709\u7684\u8fb9\u6309\u6743\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f</li> <li>\u5982\u679c\u5f53\u524d\u7684\u8fb9\u4e0d\u4f1a\u5f62\u6210\u73af(\u6b64\u5904\u4f7f\u7528\u5e76\u67e5\u96c6\u8fdb\u884c\u5224\u65ad)\uff0c\u5c31\u9009\u62e9\u5f53\u524d\u7684\u8fb9\u3002\u5426\u5219\u5c31\u4e0d\u8981\u8fd9\u6761\u8fb9</li> <li>\u8003\u5bdf\u5b8c\u6240\u6709\u7684\u8fb9\u4e4b\u540e\uff0c\u5c31\u5f97\u5230\u7ed3\u679c</li> <li>\u4f7f\u7528\u5e76\u67e5\u96c6\u8fdb\u884c\u5224\u65ad\uff1aa----b,\u5982\u679cb\u5df2\u7ecf\u548ca\u5728\u540c\u4e00\u4e2a\u7ed3\u5408\u4e2d\uff0c\u6b64\u65f6\u8981\u629b\u5f03\u8fd9\u6761\u8fb9\uff0c\u5426\u5219\u4f1a\u6210\u73af\u3002</li> <li>\u662f\u57fa\u4e8e\u8d2a\u5fc3\u7b97\u6cd5\u6765\u4f7f\u7528\u7684</li> <li>\u6a21\u677f\u9898\uff1aleetcode1584</li> </ol> <p>\u7ed9\u4f60\u4e00\u4e2a<code>&lt;span class=\"color_font\"&gt;&lt;span&gt;points&lt;/span&gt;&lt;/span&gt;</code> \u6570\u7ec4\uff0c\u8868\u793a 2D \u5e73\u9762\u4e0a\u7684\u4e00\u4e9b\u70b9\uff0c\u5176\u4e2d <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;points[i] = [x&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt;, y&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;</code> \u3002</p> <p>\u8fde\u63a5\u70b9 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;[x&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt;, y&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;</code> \u548c\u70b9 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;[x&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt;, y&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;</code> \u7684\u8d39\u7528\u4e3a\u5b83\u4eec\u4e4b\u95f4\u7684 \u66fc\u54c8\u987f\u8ddd\u79bb \uff1a<code>&lt;span class=\"color_font\"&gt;&lt;span&gt;|x&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt; - x&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt;| + |y&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt; - y&lt;/span&gt;&lt;/span&gt;``&lt;sub&gt;&lt;span class=\"color_font\"&gt;&lt;span&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/sub&gt;``&lt;span class=\"color_font\"&gt;&lt;span&gt;|&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u5176\u4e2d <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;|val|&lt;/span&gt;&lt;/span&gt;</code> \u8868\u793a <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;val&lt;/span&gt;&lt;/span&gt;</code> \u7684\u7edd\u5bf9\u503c\u3002</p> <p>\u8bf7\u4f60\u8fd4\u56de\u5c06\u6240\u6709\u70b9\u8fde\u63a5\u7684\u6700\u5c0f\u603b\u8d39\u7528\u3002\u53ea\u6709\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4 \u6709\u4e14\u4ec5\u6709 \u4e00\u6761\u7b80\u5355\u8def\u5f84\u65f6\uff0c\u624d\u8ba4\u4e3a\u6240\u6709\u70b9\u90fd\u5df2\u8fde\u63a5\u3002</p> Text Only<pre><code>class Solution {\n    public static int MAXN = 1001;\n    public static int[] father = new int[MAXN];\n    public static int[] size = new int[MAXN];\n    public static int[] stk = new int[MAXN];\n    public static int r;\n    public int minCostConnectPoints(int[][] points) {\n        //\u70b9\u4ece0\u5f00\u59cb\n        int n = points.length;\n        build(n);\n        List&lt;int[]&gt; edges = new ArrayList&lt;&gt;();\n        //\u521b\u5efa\u8fb9\u96c6\u5e76\u6392\u5e8f\n        for(int i=0 ;i&lt;n;i++){\n            for(int j=i+1; j&lt;n; j++){\n                edges.add(new int[]{i, j,dist(points,i,j)});\n            }\n        }\n        Collections.sort(edges,(a,b)-&gt;a[2]-b[2]);\n        //k\u7b97\u6cd5\n        int ans = 0;\n        int cnt = 0;\n        for(int[] edge : edges){\n            if(union(edge[0], edge[1])){\n                cnt++;\n                ans += edge[2];\n            }\n        }\n        return ans;\n\n    }\n    public static int dist(int[][] points, int x, int y){\n        return Math.abs(points[x][0]-points[y][0]) + Math.abs(points[x][1]-points[y][1]);\n    }\n    public static void build(int n){\n        for(int i=0; i&lt;n; i++){\n            father[i] = i;\n            size[i] = 1;\n        }\n    }\n    public static int find(int x){\n        r = 0;\n        while(x != father[x]){\n            stk[r++] = x;\n            x = father[x];\n        }\n        while(r&gt;0){\n            father[stk[--r]] = x;\n        }\n        return x;\n    }\n    //true\u4ee3\u8868\u9700\u8981\u5408\u5e76\n    public static boolean union(int x, int y) {\n        int fx = find(x);\n        int fy = find(y);\n        if (fx != fy) {\n            if (size[fx] &gt;= size[fy]) {\n                size[fx] += size[fy];\n                father[fy] = fx;\n            } else {\n                size[fy] += size[fx];\n                father[fx] = fy;\n            }\n            return true;\n        }else{\n            return false;\n        }\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#bfs","title":"BFS\u53ca\u5176\u6269\u5c55","text":"<ol> <li>\u7406\u8bba\uff1a</li> <li>\u5b9a\u4e49\uff1a<ol> <li>\u662f\u56fe\u4e0a\u6700\u57fa\u7840\u3001\u6700\u91cd\u8981\u7684\u641c\u7d22\u7b97\u6cd5\u4e4b\u4e00\u3002</li> <li>\u6240\u8c13\u5bbd\u5ea6\u4f18\u5148\u3002\u5c31\u662f\u6bcf\u6b21\u90fd\u5c1d\u8bd5\u8bbf\u95ee\u540c\u4e00\u5c42\u7684\u8282\u70b9\u3002 \u5982\u679c\u540c\u4e00\u5c42\u90fd\u8bbf\u95ee\u5b8c\u4e86\uff0c\u518d\u8bbf\u95ee\u4e0b\u4e00\u5c42\u3002</li> <li>\u8fd9\u6837\u505a\u7684\u7ed3\u679c\u662f\uff0cBFS \u7b97\u6cd5\u627e\u5230\u7684\u8def\u5f84\u662f\u4ece\u8d77\u70b9\u5f00\u59cb\u7684 \u6700\u77ed \u5408\u6cd5\u8def\u5f84\u3002\u6362\u8a00\u4e4b\uff0c\u8fd9\u6761\u8def\u5f84\u6240\u5305\u542b\u7684\u8fb9\u6570\u6700\u5c0f\u3002</li> <li>\u5728 BFS \u7ed3\u675f\u65f6\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u901a\u8fc7\u4ece\u8d77\u70b9\u5230\u8be5\u70b9\u7684\u6700\u77ed\u8def\u5f84\u8bbf\u95ee\u7684\u3002</li> <li>\u7b97\u6cd5\u8fc7\u7a0b\u53ef\u4ee5\u770b\u505a\u662f\u56fe\u4e0a\u706b\u82d7\u4f20\u64ad\u7684\u8fc7\u7a0b\uff1a\u6700\u5f00\u59cb\u53ea\u6709\u8d77\u70b9\u7740\u706b\u4e86\uff0c\u5728\u6bcf\u4e00\u65f6\u523b\uff0c\u6709\u706b\u7684\u8282\u70b9\u90fd\u5411\u5b83\u76f8\u90bb\u7684\u6240\u6709\u8282\u70b9\u4f20\u64ad\u706b\u82d7\u3002</li> <li>\u53ef\u4ee5\u5355\u6e90\u8fdb\u884cBFS\uff0c\u4e5f\u6709\u591a\u6e90BFS</li> </ol> </li> <li>\u4f8b\u5b50\uff1a</li> <li>\u6bcf\u6b21\u5916\u6269\u4e00\u5c42\uff0c\u90fd\u662f\u6e90\u70b9\u8ddd\u79bb\u672c\u5c42\u7684\u70b9\u8ddd\u79bb+1\u3002\u672c\u5c42\u7684\u70b9\u5230\u6e90\u70b9\u7684\u8ddd\u79bb\u90fd\u76f8\u540c\u3002\u6b64\u5904\u7684\u8ddd\u79bb\u90fd\u662f\u66fc\u54c8\u987f\u8ddd\u79bb\u3002</li> <li>\u9700\u8981\u6709\u72b6\u6001\u6765\u8bb0\u5f55\u8282\u70b9\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\u3002</li> <li>\u5904\u7406\u65b9\u5f0f\uff1a</li> <li>\u5355\u70b9\u5904\u7406\u65b9\u5f0f\uff1a\u901a\u8fc7\u4f7f\u7528\u961f\u5217\u6765\u5b58\u50a8\u6bcf\u4e00\u5c42\u7684(Node\uff0cdistance)\u3002\u4e0a\u4e00\u5c42\u7684\u4e00\u4e2a\u8282\u70b9\u51fa\u53bb\uff0c\u5219\u5982\u961f\u5bf9\u5e94\u7684\u4e0b\u4e00\u5c42\u8282\u70b9\u3002</li> <li>\u4e00\u6b21\u5904\u7406\u4e00\u5c42\uff1a\u4f7f\u7528hashMap\u6765\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684level\u503c\u3002</li> </ol> <ol> <li>\u4f8b\u9898\uff1a</li> <li>\u6a21\u677f\u9898\uff1a\u591a\u6e90BFS\u3002\u7ed3\u675f\u4e4b\u540e\u7684level\u5c31\u662f\u6700\u8fdc\u7684\u5c42\u6570(\u8ddd\u79bb)</li> </ol> Text Only<pre><code>class Solution {\n    public static int MAXN = 101;\n    public static int MAXM = 101;\n    public static int[][] queue = new int[MAXN * MAXM][2];\n    public static int l, r;\n    public static boolean[][] visited = new boolean[MAXN][MAXM];\n    public static int[] move = new int[]{-1,0,1,0,-1};\n    public int maxDistance(int[][] grid) {\n        int n = grid.length;\n        int m = grid[0].length;\n        l = 0;\n        r = 0;\n        int seas = 0;\n        for(int i=0; i&lt;n; i++){\n            for(int j=0; j&lt;m; j++){\n                if(grid[i][j] == 1){\n                    visited[i][j] = true;\n                    queue[r][0] = i;\n                    queue[r][1] = j;\n                    r++;\n                }else{\n                    visited[i][j] = false;\n                    seas++;\n                }\n            }\n        }\n        if(seas == 0 || seas == n*m){\n            return -1;\n        }\n\n        int level = 0;\n        while(l&lt;r){\n            level++;\n            int size = r-l;\n            for(int i=0; i&lt;size; i++){\n                int x = queue[l][0];\n                int y = queue[l][1];\n                l++;\n                for(int j=0; j&lt;4 ;j++){\n                    int nx = x + move[j];\n                    int ny = y + move[j+1];\n                    if(nx &gt;= 0 &amp;&amp; nx &lt; n &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; m &amp;&amp; grid[nx][ny]==0 &amp;&amp;!visited[nx][ny]){\n                        visited[nx][ny] = true;\n                        queue[r][0] = nx;\n                        queue[r][1] = ny;\n                        r++;\n                    }\n                }\n            }\n        }\n        return level-1;\n    }\n}\n</code></pre> <ol> <li>leetcode200</li> <li>\u6bcf\u4e2a\u8282\u70b9\u8fdb\u884c\u5904\u7406\u7684\u6a21\u677f\u9898\uff1a</li> </ol> Text Only<pre><code>class Solution {\n    public static int MAXN = 100000;\n    public static int MAXM = 301;\n    public static int[][] queue = new int[MAXN][MAXM];\n    public static int l, r;\n    public static boolean[][] visited = new boolean[MAXN][MAXM];\n    public static int[] move = new int[]{-1,0,1,0,-1};\n\n    public int numIslands(char[][] grid) {\n        for(int i=0 ;i&lt;visited.length; i++){\n            Arrays.fill(visited[i], false);\n        }\n        int n = grid.length;\n        int m = grid[0].length;\n        l = 0;\n        r = 0;\n        int num = 0;\n        for(int i=0; i&lt;n; i++){\n            for(int j=0;j&lt;m;j++){\n                if(!visited[i][j] &amp;&amp; grid[i][j] == '1'){\n                    num++;\n                    visited[i][j] = true;\n                    queue[r][0] = i;\n                    queue[r++][1] = j;\n\n                    while(l&lt;r){\n                        int x = queue[l][0];\n                        int y = queue[l][1];\n                        l++;\n                        for(int e=0; e&lt;4;e++){\n                            int nx = x + move[e];\n                            int ny = y + move[e+1];\n                            if(nx&gt;=0 &amp;&amp; nx&lt;n &amp;&amp; ny&gt;=0 &amp;&amp; ny&lt;m &amp;&amp; !visited[nx][ny] &amp;&amp; grid[nx][ny] == '1'){\n                                visited[nx][ny] = true;\n                                queue[r][0] = nx;\n                                queue[r][1] = ny;\n                                r++;\n\n                            }\n                        }\n                    }\n\n                }\n            }\n        }\n        return num;\n    }\n}\n</code></pre> <ol> <li>01BFS\uff0c\u4e5f\u5c31\u662f\u53cc\u7aef\u961f\u5217BFS</li> <li>\u9002\u7528\u8303\u56f4\uff1a\u8fb9\u7684\u6743\u91cd\u53ea\u67090\u548c1\uff0c\u6c42\u89e3\u6700\u77ed\u8ddd\u79bb</li> <li>\u4e0d\u80fd\u4f7f\u7528\u4f20\u7edfBFS\uff0c\u56e0\u4e3a\u8fdb\u884c\u4f20\u7edf\u7684BFS\u4e4b\u540e\uff0c\u8fdb\u884c\u4e0b\u4e00\u5c42\u6269\u5c55\u4e4b\u540e\uff0c\u9700\u8981\u8ddd\u79bb\u589e\u52a0\uff0c\u800c\u4e0d\u662f\u4e24\u4e2a\u8282\u70b9\u8fd8\u662f\u5728\u540c\u4e00\u5c42\u3002</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6O(\u8282\u70b9\u6570 + \u8fb9\u6570)</li> <li>\u8fc7\u7a0b\uff1a<ol> <li>diatance[i]\u4ee3\u8868\u4ece\u6e90\u70b9\u5230i\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\u521d\u59cb\u7684\u65f6\u5019\u6240\u6709\u70b9\u7684diatance\u8bbe\u7f6e\u4e3a\u65e0\u7a77\u5927\u3002</li> <li>\u6e90\u70b9\u8fdb\u5165\u53cc\u7aef\u961f\u5217\uff0cdistance[\u6e90\u70b9] = 0</li> <li>\u53cc\u7aef\u961f\u5217\u5934\u90e8\u5f39\u51fax<ol> <li>\u5982\u679cx\u662f\u76ee\u6807\u70b9\uff0c\u8fd4\u56dedistance[x]</li> <li>\u8003\u5bdf\u4ecex\u51fa\u53d1\u7684\u6bcf\u4e00\u6761\u8fb9\uff0c\u5047\u8bbex-&gt;y,\u6743\u91cd\u4e3aw<ol> <li>\u5982\u679cdistance[y] &gt; diatance[x] + w,\u5904\u7406\u8be5\u8fb9</li> <li>\u5904\u7406\u7684\u65f6\u5019\uff0c\u66f4\u65b0distance[y] =distance[x] +w</li> </ol> </li> </ol> </li> </ol> </li> </ol> <p>\u5982\u679cw==0,y\u4ece\u5934\u90e8\u8fdb\u5165\u53cc\u7aef\u961f\u5217\uff0c\u91cd\u590d\u6b65\u9aa4III</p> <p>\u5982\u679cw==1,y\u4ece\u5c3e\u90e8\u8fdb\u5165\u53cc\u7aef\u961f\u5217\uff0c\u91cd\u590d\u6b65\u9aa4III</p> <ol> <li>\u76f4\u5230\u961f\u5217\u4e3a\u7a7a</li> <li> <p>\u6027\u8d28\uff1a</p> </li> <li> <p>\u5728\u53cc\u7aef\u961f\u5217\u4e2d\u540c\u65f6\u5b58\u5728\u7684\u8282\u70b9\u5230\u6e90\u70b9\u7684\u8ddd\u79bb\u4e4b\u5dee&lt;=1\u3002</p> </li> <li>\u5176\u5b9ew==0\u4ece\u5934\u8fdb\u5165\u662f\u8fdb\u884c\u7684\u4e00\u6b21\u4fee\u6b63\uff0c\u5c06\u8ddd\u79bb\u8fb9\u7684\u4e0d\u53d8\u6216\u8005\u66f4\u5c0f\u3002</li> <li>\u6a21\u677f\u9898\uff1aleetcode2290</li> </ol> Text Only<pre><code>class Solution {\n    public int minimumObstacles(int[][] grid) {\n        int m = grid.length;\n        int n = grid[0].length;\n\n        int[] move = new int[]{-1,0,1,0,-1};\n        Deque&lt;int[]&gt; deque = new ArrayDeque&lt;&gt;();\n        int[][] distance = new int[m][n];\n        for(int i=0 ;i&lt;m;i++){\n            Arrays.fill(distance[i],Integer.MAX_VALUE);\n        }\n\n        deque.offerFirst(new int[]{0,0});\n        distance[0][0] = 0;\n        while(!deque.isEmpty()){\n            int[] cur = deque.pollFirst();\n            int x = cur[0];\n            int y = cur[1];\n            if(x == m-1 &amp;&amp; y == n-1) return distance[x][y];\n            for(int i=0 ;i&lt;4 ;i++){\n                int nx = x + move[i];\n                int ny = y + move[i+1];\n                boolean bound = (nx&gt;=0 &amp;&amp; nx&lt;m &amp;&amp; ny&gt;=0 &amp;&amp; ny&lt;n);\n                if(bound &amp;&amp; distance[nx][ny] &gt; distance[x][y] + grid[nx][ny]){\n                    int w = grid[nx][ny];\n                    distance[nx][ny] = distance[x][y]+w;\n                    if(w == 0){\n                        deque.offerFirst(new int[]{nx,ny});\n                    }else{\n                        deque.offerLast(new int[]{nx,ny});\n                    }\n                }\n            }\n        }\n        return -1;   \n    }\n}\n</code></pre> <ol> <li>\u53d8\u5f62\u9898\uff1aleetcode1368</li> </ol> <p>\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u683c\u5b50\u90fd\u6709\u65b9\u5411\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528cost 1\u6539\u65b9\u5411.\u5219\u5047\u8bbe\u8be5\u70b9\u539f\u672c\u6307\u5411\u7684cost=0,\u5176\u4f59\u4e09\u4e2a\u65b9\u5411\u90fd\u662fcost=1\u3002\u8981\u6c42cost\u4e4b\u548c\u6700\u5c0f\uff0c\u5c31\u662f\u8ba1\u7b97\u6700\u77ed\u8def\u3002\u6240\u4ee5\u8f6c\u6362\u4e3a0-1BFS</p>"},{"location":"LANG/DS-leetcode/#dijkstra","title":"DijkStra\u7b97\u6cd5","text":"<ol> <li>\u4f5c\u7528\uff1a\u8ba1\u7b97\u56fe\u4e2d\u7684\u5355\u6e90\u6700\u77ed\u8def</li> <li>\u4f7f\u7528\u8303\u56f4\uff1a\u6709\u5411\u56fe\uff0c\u65e0\u8d1f\u6743\u503c</li> <li>\u5b9e\u73b0\u79cd\u7c7b\uff1a\u66b4\u529b\uff0c\u666e\u901a\u5806\u4f18\u5316(\u6700\u5e38\u7528)\uff0c\u53cd\u5411\u5806\u7d22\u5f15\u4f18\u5316</li> <li>\u7b97\u6cd5\u8fc7\u7a0b\uff1a</li> </ol> <ol> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(m*logm),m\u4e3a\u8fb9\u6570\u3002</li> <li>\u6a21\u677f\u9898\uff1aleetcode743</li> <li>\u4f7f\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5efa\u56fe + \u5806\u4f18\u5316</li> <li>\u6ce8\u610f\u4f7f\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5efa\u56fe\u8c03\u7528\u51fd\u6570build</li> </ol> Text Only<pre><code>class Solution {\n    public static int MAXN = 102;\n    public static int MAXM = 6002;\n    public static int[] head = new int[MAXN];\n    public static int[] next = new int[MAXM];\n    public static int[] to = new int[MAXM];\n    public static int[] w = new int[MAXM];\n    public static int cnt;\n    public int networkDelayTime(int[][] times, int n, int k) {\n        //\u672c\u9898\u4e0b\u6807\u4ece1\u5f00\u59cb \n        build(n);\n        for(int[] edge : times){\n            addEdge(edge[0], edge[1], edge[2]);\n        }\n        int[] distance = new int[n+1];\n        Arrays.fill(distance,Integer.MAX_VALUE);\n        distance[k] = 0;\n        boolean[] visited = new boolean[n+1];\n        Arrays.fill(visited,false);\n        PriorityQueue&lt;int[]&gt; heap = new PriorityQueue&lt;&gt;((a,b)-&gt;a[1]-b[1]);\n        heap.add(new int[]{k,0});\n        while(!heap.isEmpty()){\n            int[] cur = heap.poll();\n            int u = cur[0];\n            System.out.println(\"u:\"+ u);\n            if(visited[u]){\n                continue;\n            }\n            visited[u] = true;\n            for(int ei = head[u]; ei&gt;0; ei = next[ei]){\n                int y = to[ei];\n                int weight = w[ei];\n                System.out.println(\"y:\" + y + \" \" + \"w:\" + weight);\n                if(!visited[y] &amp;&amp; distance[u] + weight &lt; distance[y]){\n                    distance[y] = distance[u] + weight;\n                    //System.out.println(\"distance:\" + distance[y]);\n                    heap.add(new int[]{y,distance[y]});\n                }\n            }\n        }\n        int ans = Integer.MIN_VALUE;\n        for(int i=1; i&lt;=n; i++){\n            if(distance[i] == Integer.MAX_VALUE){\n                return -1;\n            }\n            ans = Math.max(ans,distance[i]);\n        }\n        return ans;  \n    }\n    public static void build(int n){\n        cnt = 1;\n        Arrays.fill(head,0);\n        Arrays.fill(next,0);\n        Arrays.fill(to,0);\n    }\n    public static void addEdge(int u, int v, int weight){\n        w[cnt] = weight;\n        to[cnt] = v;\n        next[cnt] = head[u];\n        head[u] = cnt++;\n    }\n}\n</code></pre> Text Only<pre><code>//scala\u6a21\u677f\nobject Solution {\n  def findSafeWalk(grid: List[List[Int]], health: Int): Boolean = {\n    val move = Array(-1,0,1,0,-1)\n    val m = grid.length\n    val n = grid(0).length\n    val dis = Array.fill[Int](m, n)(Int.MaxValue)\n    val vis = Array.fill[Boolean](m, n)(false)\n    import scala.collection.mutable\n    implicit val myOrd: Ordering[(Int, Int, Int)] = Ordering.by((x: (Int, Int, Int)) =&gt; x._3)(Ordering[Int].reverse)\n    val heap = mutable.PriorityQueue[(Int,Int,Int)]()\n\n    dis(0)(0) = grid(0)(0)\n    heap.enqueue((0,0,0))\n    while(heap.nonEmpty){\n      val (x,y,d) = heap.dequeue()\n      if(!vis(x)(y)){\n        vis(x)(y) = true\n        for(k &lt;- 0 until 4){\n          val nx = x + move(k)\n          val ny = y + move(k+1)\n          if(nx &gt;= 0 &amp;&amp; nx &lt; m &amp;&amp; ny &gt;= 0 &amp;&amp; ny &lt; n &amp;&amp; !vis(nx)(ny) &amp;&amp; dis(x)(y) + grid(nx)(ny) &lt;= dis(nx)(ny)){\n            dis(nx)(ny) = dis(x)(y) + grid(nx)(ny)\n            heap.enqueue((nx,ny,dis(nx)(ny)))\n          }\n        }\n      }\n    }\n    dis(m-1)(n-1) &lt; health\n  }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#a","title":"A*\u7b97\u6cd5","text":"<ol> <li>\u4e0d\u540c\u70b9\uff1a</li> </ol> <p>DijkStra\u662f\u89e3\u51b3\u4e00\u4e2a\u6e90\u70b9\u5230\u6240\u6709\u76ee\u6807\u70b9\u7684\u6700\u77ed\u8ddd\u79bb</p> <p>A*\u7b97\u6cd5\u89e3\u51b3\u7684\u662f\u4ece\u4e00\u4e2a\u6e90\u70b9\u5230\u4e00\u4e2a\u76ee\u6807\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb</p> <ol> <li>\u7279\u70b9\uff1a</li> <li>\u5728\u5806\u4e2d\u5b58\u653e\u7684\u6570\u636e\uff0c\u4e0d\u518d\u53ea\u662f(y,distance(y))\u3002</li> <li>\u5bf9\u4e8eBFS\uff0c\u5c31\u662f\u6bcf\u6b21\u6269\u5145\u4e00\u5c42\u3002\u8fd9\u6837\u7684\u8bdd\u6700\u540e\u4f1a\u8bbf\u95ee\u5927\u91cf\u7684\u65e0\u7528\u8282\u70b9</li> <li>\u5bf9\u4e8eDijkStra\uff0c\u6bcf\u6b21\u4e5f\u90fd\u662f\u6269\u5145\u4e00\u5c42(\u4e0eBFS\u4e00\u81f4)\uff0c\u8fd8\u5f15\u5165\u4e86\u5806\uff0c\u4f18\u70b9\u5c31\u662f\u53ef\u4ee5\u89e3\u51b3\u6240\u6709\u8282\u70b9\u3002</li> <li>\u5b83\u5c5e\u4e8e\u56fe\u904d\u5386\uff08\u82f1\u6587\uff1aGraph traversal\uff09\u548c\u6700\u4f73\u4f18\u5148\u641c\u7d22\u7b97\u6cd5\uff08\u82f1\u6587\uff1aBest-first search\uff09\uff0c\u4ea6\u662f BFS \u7684\u6539\u8fdb</li> </ol>"},{"location":"LANG/DS-leetcode/#floyd","title":"Floyd\u7b97\u6cd5","text":"<ol> <li>\u5168\u80fd\u7b97\u6cd5\uff0c\u53ea\u8981\u6ca1\u6709\u8d1f\u73af\u7684\u6700\u77ed\u8def(\u4fdd\u8bc1\u6700\u77ed\u8def\u5b58\u5728)\u90fd\u53ef\u4ee5\u6c42\u3002\u6240\u6c42\u7684\u7ed3\u679c\u662f\u6bcf\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb</li> <li>\u590d\u6742\u5ea6\uff1a</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n^3)\u3002\u6240\u4ee5\u4f7f\u7528\u7684\u65f6\u5019\u8981\u5148\u4f30\u8ba1\u6570\u636e\u91cf\uff0c\u5982\u679c\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u4e8e10^9\u5c31\u4f1a\u8d85\u65f6\u3002</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\u662fO(n^2)\u3002</li> <li>\u4ee3\u7801\u6a21\u677f\uff1a</li> </ol> Text Only<pre><code>public class Code02_Floyd {\n\n    public static int MAXN = 101;\n    public static int[][] distance = new int[MAXN][MAXN];\n\n    public static int n, m, ans;\n\n    // \u521d\u59cb\u65f6\u8bbe\u7f6e\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u4e3a\u65e0\u7a77\u5927\uff0c\u8868\u793a\u4efb\u4f55\u8def\u4e0d\u5b58\u5728\n    public static void build() {\n        for (int i = 0; i &lt; n; i++) {\n            for (int j = 0; j &lt; n; j++) {\n                distance[i][j] = Integer.MAX_VALUE;\n            }\n        }\n    }\n    public static void floyd() {\n        // O(N^3)\u7684\u8fc7\u7a0b\n        // \u679a\u4e3e\u6bcf\u4e2a\u8df3\u677f\n        // \u6ce8\u610f\uff0c\u8df3\u677f\u8981\u6700\u5148\u679a\u4e3e\uff01\u8df3\u677f\u8981\u6700\u5148\u679a\u4e3e\uff01\u8df3\u677f\u8981\u6700\u5148\u679a\u4e3e\uff01\n        for (int bridge = 0; bridge &lt; n; bridge++) { // \u8df3\u677f\n            for (int i = 0; i &lt; n; i++) {\n                for (int j = 0; j &lt; n; j++) {\n                    // i -&gt; .....bridge .... -&gt; j\n                    // distance[i][j]\u80fd\u4e0d\u80fd\u7f29\u77ed\n                    // distance[i][j] = min ( distance[i][j] , distance[i][bridge] + distance[bridge][j])\n                    //\u5982\u679c\u8df3\u677f\u80fd\u5230\u8fbe\uff0c\u5219\u53ef\u4ee5\u8fdb\u884c\u66f4\u65b0\n                    boolean check = distance[i][bridge] != Integer.MAX_VALUE &amp;&amp; distance[bridge][j] != Integer.MAX_VALUE;\n                    if(check) distance[i][j] = Math.min(distance[i][j], distance[i][bridge] + distance[bridge][j]);\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_92","title":"\u52a8\u6001\u89c4\u5212","text":""},{"location":"LANG/DS-leetcode/#_93","title":"\u4e00\u7ef4\u52a8\u6001\u89c4\u5212","text":"<ol> <li> <p>\u7b97\u6cd5\u7c7b\u578b\uff1a</p> </li> <li> <p>\u77e5\u9053\u600e\u4e48\u8ba1\u7b97\u7684\u7b97\u6cd5\uff0c\u6bd4\u5982\u56fe\u8bba\u4e2d\u7684DijkStra\u7b97\u6cd5</p> </li> <li>\u77e5\u9053\u600e\u4e48\u5c1d\u8bd5\u7684\u7b97\u6cd5\uff0c\u6bd4\u5982\u9012\u5f52</li> <li>\u9012\u5f52\u4e0e\u52a8\u6001\u89c4\u5212\uff1a</li> <li>\u6709\u4e9b\u9012\u5f52\u5728\u8c03\u7528\u7684\u65f6\u5019\uff0c\u603b\u662f\u91cd\u590d\u8c03\u7528\u540c\u4e00\u4e2a\u95ee\u9898\u7684\u89e3\uff0c\u5219\u8f6c\u6362\u4e3a\u52a8\u6001\u89c4\u5212\u5f88\u6709\u6536\u76ca\u3002</li> <li>\u5982\u679c\u6bcf\u6b21\u5c55\u5f00\u90fd\u662f\u4e0d\u540c\u7684\u89e3\uff0c\u5c31\u6ca1\u6709\u5fc5\u8981\u53d8\u4e3a\u52a8\u6001\u89c4\u5212\u3002</li> <li>\u4efb\u4f55\u52a8\u6001\u89c4\u5212\u95ee\u9898\u4e00\u5b9a\u5bf9\u5e94\u7740\u6709\u91cd\u590d\u8c03\u7528\u52a8\u4f5c\u7684\u7684\u9012\u5f52\u3002</li> <li>\u4f46\u662f\u9012\u5f52\u4e0d\u4e00\u5b9a\u53ef\u4ee5\u6539\u4e3a\u52a8\u6001\u89c4\u5212\uff0c\u56e0\u4e3a\u9012\u5f52\u4e2d\u53ef\u80fd\u6539\u53d8\u5b50\u95ee\u9898\u7684\u73af\u5883\uff0c\u4ece\u800c\u4e0d\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212</li> <li>\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1a</li> <li>\u6590\u6ce2\u90a3\u5951\u6570 \uff08\u901a\u5e38\u7528 <code>&lt;span&gt;F(n)&lt;/span&gt;</code> \u8868\u793a\uff09\u5f62\u6210\u7684\u5e8f\u5217\u79f0\u4e3a \u6590\u6ce2\u90a3\u5951\u6570\u5217 \u3002\u8be5\u6570\u5217\u7531 <code>&lt;span&gt;0&lt;/span&gt;</code> \u548c <code>&lt;span&gt;1&lt;/span&gt;</code> \u5f00\u59cb\uff0c\u540e\u9762\u7684\u6bcf\u4e00\u9879\u6570\u5b57\u90fd\u662f\u524d\u9762\u4e24\u9879\u6570\u5b57\u7684\u548c\u3002\u7ed9\u5b9an\uff0c\u8bf7\u8ba1\u7b97F(n)</li> <li>\u66b4\u529b\u9012\u5f52\uff1a</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(2^n)\u3002\u56e0\u4e3a\u66b4\u529b\u9012\u5f52\u6210\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u8fd9\u9897\u4e8c\u53c9\u6811\u4e00\u5171\u6709n\u5c42\u3002</li> <li>\u53ef\u4ee5\u6539\u8fdb\u7684\u70b9\uff1a\u9012\u5f52\u4e2d\u6709\u91cd\u590d\u7684\u5b50\u8fc7\u7a0b\u88ab\u591a\u6b21\u8ba1\u7b97\uff0c\u6bd4\u5982F(5)\u3002\u53ef\u4ee5\u901a\u8fc7\u7f13\u5b58\u5c06\u5176\u4fdd\u5b58\u4e0b\u6765\u3002\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53d8\u4e3a\u4e86O(n)</li> </ol> Text Only<pre><code>class Solution {\n    public int fib(int n) {\n        if(n == 0 || n == 1){\n            return n;\n        }\n        return fib(n-1) + fib(n-2);\n    }\n}\n</code></pre> <ol> <li>\u8bb0\u5fc6\u5316\u641c\u7d22\u89e3\u6cd5\uff1a</li> <li>\u6c42F(n)\uff0c\u5219\u51c6\u59070-n\u9879\u7684\u7f13\u5b58\u8868\u5c31\u53ef\u4ee5\uff0c\u957f\u5ea6\u4e3an+1.</li> <li>\u6bcf\u6b21\u8ba1\u7b97\u7684\u7ed3\u679c\u5b58\u5165\u7f13\u5b58\u8868\u4e2d\u3002</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n)</li> </ol> Text Only<pre><code>class Solution {\n\n    public int fib(int n) {\n        int[] dp = new int[n+1];\n        Arrays.fill(dp,-1);\n        return f2(n,dp);\n    }\n    public int f2(int n, int[] dp){\n        if(n == 0 || n == 1){\n            return n;\n        }\n        if(dp[n] != -1){\n            return dp[n];\n        }\n        int ans = fib(n-1) + fib(n-2);\n        dp[n] = ans;\n        return ans;\n    }\n}\n</code></pre> <ol> <li>\u52a8\u6001\u89c4\u5212\uff1a</li> <li>\u4ece\u9876\u5230\u5e95\uff0c\u662f\u9012\u5f52</li> <li>\u4ece\u5e95\u5230\u9876\uff0c\u53d8\u4e3a\u52a8\u6001\u89c4\u5212</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)</li> </ol> Text Only<pre><code>class Solution {\n    public int fib(int n) {\n        if(n == 0 || n == 1){\n            return n;\n        }\n        int[] dp = new int[n+1];\n        dp[0] = 0;\n        dp[1] = 1;\n        for(int i=2; i&lt;=n ;i++){\n            dp[i] = dp[i-1] + dp[i-2];\n        }\n        return dp[n];\n    }\n}\n</code></pre> <ol> <li>leetcode983\u6700\u4f4e\u7968\u4ef7</li> </ol> <p>\u5728\u4e00\u4e2a\u706b\u8f66\u65c5\u884c\u5f88\u53d7\u6b22\u8fce\u7684\u56fd\u5ea6\uff0c\u4f60\u63d0\u524d\u4e00\u5e74\u8ba1\u5212\u4e86\u4e00\u4e9b\u706b\u8f66\u65c5\u884c\u3002\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u5e74\u91cc\uff0c\u4f60\u8981\u65c5\u884c\u7684\u65e5\u5b50\u5c06\u4ee5\u4e00\u4e2a\u540d\u4e3a <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;days&lt;/span&gt;&lt;/span&gt;</code> \u7684\u6570\u7ec4\u7ed9\u51fa\u3002\u6bcf\u4e00\u9879\u662f\u4e00\u4e2a\u4ece <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;</code> \u5230 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;365&lt;/span&gt;&lt;/span&gt;</code> \u7684\u6574\u6570\u3002</p> <p>\u706b\u8f66\u7968\u6709 \u4e09\u79cd\u4e0d\u540c\u7684\u9500\u552e\u65b9\u5f0f \uff1a</p> <ul> <li>\u4e00\u5f20 \u4e3a\u671f\u4e00\u5929 \u7684\u901a\u884c\u8bc1\u552e\u4ef7\u4e3a <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;costs[0]&lt;/span&gt;&lt;/span&gt;</code> \u7f8e\u5143\uff1b</li> <li>\u4e00\u5f20 \u4e3a\u671f\u4e03\u5929 \u7684\u901a\u884c\u8bc1\u552e\u4ef7\u4e3a <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;costs[1]&lt;/span&gt;&lt;/span&gt;</code> \u7f8e\u5143\uff1b</li> <li>\u4e00\u5f20 \u4e3a\u671f\u4e09\u5341\u5929 \u7684\u901a\u884c\u8bc1\u552e\u4ef7\u4e3a <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;costs[2]&lt;/span&gt;&lt;/span&gt;</code> \u7f8e\u5143\u3002</li> </ul> <p>\u901a\u884c\u8bc1\u5141\u8bb8\u6570\u5929\u65e0\u9650\u5236\u7684\u65c5\u884c\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u5728\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;2&lt;/span&gt;&lt;/span&gt;</code> \u5929\u83b7\u5f97\u4e00\u5f20 \u4e3a\u671f 7 \u5929 \u7684\u901a\u884c\u8bc1\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fde\u7740\u65c5\u884c 7 \u5929\uff1a\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;2&lt;/span&gt;&lt;/span&gt;</code> \u5929\u3001\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;3&lt;/span&gt;&lt;/span&gt;</code> \u5929\u3001\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;4&lt;/span&gt;&lt;/span&gt;</code> \u5929\u3001\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;5&lt;/span&gt;&lt;/span&gt;</code> \u5929\u3001\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;6&lt;/span&gt;&lt;/span&gt;</code> \u5929\u3001\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;7&lt;/span&gt;&lt;/span&gt;</code> \u5929\u548c\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;8&lt;/span&gt;&lt;/span&gt;</code> \u5929\u3002</p> <p>\u8fd4\u56de \u4f60\u60f3\u8981\u5b8c\u6210\u5728\u7ed9\u5b9a\u7684\u5217\u8868 <code>&lt;span class=\"color_font\"&gt;&lt;i&gt;&lt;span&gt;days&lt;/span&gt;&lt;/i&gt;&lt;/span&gt;</code> \u4e2d\u5217\u51fa\u7684\u6bcf\u4e00\u5929\u7684\u65c5\u884c\u6240\u9700\u8981\u7684\u6700\u4f4e\u6d88\u8d39 \u3002</p> Text Only<pre><code>//\u66b4\u529b\u9012\u5f52\uff0c\u4f1a\u8d85\u65f6\u3002\u9012\u5f52\u601d\u8def\uff1a\u603b\u6700\u5c0f\u82b1\u8d39 = min(\u5f53\u524d\u6d88\u8d39+\u540e\u7eed\u7684\u6700\u5c0f\u6d88\u8d39)\nclass Solution {\n    public static int[] duration = new int[]{1,7,30};\n    public int mincostTickets(int[] days, int[] costs) {\n        return f1(days,costs,0);\n    }\n    public int f1(int[] days, int[] costs, int i){\n        if(i == days.length){\n            return 0;\n        }\n        int ans = Integer.MAX_VALUE;\n        for(int k=0, j=i; k&lt;3; k++){\n            while(j &lt;days.length &amp;&amp; days[i] +duration[k] &gt; days[j]){\n                j++;\n            }\n            ans = Math.min(ans,costs[k] + f1(days, costs, j));\n        }\n        return ans;\n    }\n}\n//\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u4f7f\u7528cache\u7f13\u5b58\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u7684\u7ed3\u679c:cache[i] = f(i)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\n    public static int[] duration = new int[]{1,7,30};\n    public int mincostTickets(int[] days, int[] costs) {\n        int[] cache = new int[days.length+1];\n        Arrays.fill(cache,-1);\n        return f1(days,costs,0,cache);\n    }\n    public int f1(int[] days, int[] costs, int i,int[] cache){\n        if(i == days.length){\n            return 0;\n        }\n        int ans = Integer.MAX_VALUE;\n        if(cache[i] != -1){\n            return cache[i];\n        }\n        for(int k=0, j=i; k&lt;3; k++){\n            while(j &lt;days.length &amp;&amp; days[i] +duration[k] &gt; days[j]){\n                j++;\n            }\n            ans = Math.min(ans,costs[k] + f1(days, costs, j,cache)); \n        }\n        cache[i] = ans;\n        return ans;\n    }\n}\n//\u52a8\u6001\u89c4\u5212\u3002\u4ece\u6700\u540e\u4e00\u5929\u5f00\u59cb\uff0c\u5219\u524d\u9762\u7684\u72b6\u6001\u4f9d\u8d56\u4e8e\u540e\u9762\u7684\u72b6\u6001\u53e0\u52a0\uff0c\u4ece\u53f3\u5f80\u5de6\u3002\n//\u52a8\u6001\u89c4\u5212\u7684base case\u5c31\u662f\u9012\u5f52\u65b9\u6cd5\u4e2d\u7ed3\u675f\u7684base case\nclass Solution {\n    public static int[] duration = new int[]{1,7,30};\n    public int mincostTickets(int[] days, int[] costs) {\n        int n = days.length;\n        int[] dp = new int[n+1];\n        Arrays.fill(dp,Integer.MAX_VALUE);\n        dp[n] = 0;\n        for(int i=n-1; i&gt;=0 ;i--){\n            for(int k=0; k&lt;3; k++){\n                int j = i;\n                while(j&lt;n &amp;&amp; days[i] + duration[k]&gt;days[j]){\n                    j++;\n                }\n                dp[i] = Math.min(dp[i],costs[k] + dp[j]);\n            }\n        }\n        return dp[0];\n    }\n}\n</code></pre> <ol> <li>leetcode91\u89e3\u7801\u65b9\u6cd5\uff1a</li> <li>\u601d\u8def\uff1a\u4ee511106\u4e3a\u4f8b\u5b50\u30021\u5f00\u5934\u5212\u5206\uff0c\u4ee5\u53ca11\u5f00\u5934\u5212\u5206\uff0c\u7136\u540e\u9012\u5f52\u3002\u9012\u5f52\u7ec8\u6b62\u7ed3\u679c\u662f\u4ee5\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u5f00\u5934\u5fc5\u7136\u53ea\u67091\u79cd\u65b9\u5f0f\u3002</li> <li>\u5bf9\u4e8e\u53d8\u5f62\u9898\u7684\u89e3\u7801\u65b9\u6cd5\uff0c\u8981\u6ce8\u610f*\u7684\u8ba8\u8bba\uff0c\u4e5f\u5c31\u662f(a,b),(a,*),(*,b),(*,*)</li> </ol> Text Only<pre><code>//\u8bb0\u5fc6\u5316\u641c\u7d22\nclass Solution {\n    public int numDecodings(String s) {\n        char[] c = s.toCharArray();\n        int n = c.length;\n        int[] cache = new int[n+1];\n        Arrays.fill(cache,-1);\n        cache[n] = 1;\n        return f1(c,0,cache);\n    }\n    public int f1(char[] c, int i,int[] cache){\n        //\u4ee5\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u5f00\u5934\u7684\u6709\u591a\u5c11\u79cd\n        if(i == c.length){\n            return 1;\n        }\n        if(cache[i] != -1){\n            return cache[i];\n        }\n        int ans = 0;\n        if(c[i] == '0'){\n            ans = 0;\n        }else{\n            //1\u5f00\u5934\uff0c\u548c11\u5f00\u5934\n            ans = f1(c, i+1,cache);\n            if(i+1 &lt; c.length &amp;&amp; (c[i]-'0')*10 + (c[i+1]-'0')*1 &lt;= 26){\n                ans += f1(c,i+2,cache);\n            }\n        }\n        cache[i] = ans;\n        return ans;\n    }\n}\n//\u52a8\u6001\u89c4\u5212\nclass Solution {\n    public int numDecodings(String s) {\n        char[ ] c = s.toCharArray();\n        int n = c.length;\n        int[] dp = new int[n+1];\n        Arrays.fill(dp,-1);\n        dp[n] = 1;\n        for(int i=n-1; i&gt;=0; i--){\n            if(c[i] == '0'){\n                dp[i] = 0;\n            }else{\n                dp[i] = dp[i+1];\n                if(i+1&lt;n &amp;&amp; (c[i]-'0')*10+(c[i+1]-'0')&lt;=26){\n                    dp[i] += dp[i+2];\n                }\n            }\n        }\n        return dp[0];\n    }\n}\n</code></pre> <ol> <li>\u4e11\u6570\u95ee\u9898\uff1a</li> <li>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;n&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de\u7b2c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;n&lt;/span&gt;&lt;/span&gt;</code> \u4e2a \u4e11\u6570 \u3002</li> </ol> <p>\u4e11\u6570 \u5c31\u662f\u8d28\u56e0\u5b50\u53ea\u5305\u542b <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;2&lt;/span&gt;&lt;/span&gt;</code>\u3001<code>&lt;span class=\"color_font\"&gt;&lt;span&gt;3&lt;/span&gt;&lt;/span&gt;</code> \u548c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;5&lt;/span&gt;&lt;/span&gt;</code> \u7684\u6b63\u6574\u6570\u3002\u9ed8\u8ba4\u7b2c\u4e00\u4e2a\u4e11\u6570\u662f1</p> <ol> <li>\u601d\u8def\uff1a</li> <li>\u4e11\u6570\u7684\u6027\u8d28\uff1a\u56e0\u4e3a\u8d28\u6570\u56e0\u5b50\u53ea\u67092,3,5.\u5219\u540e\u9762\u7684\u6570\u90fd\u662f\u7531\u524d\u9762\u67d0\u4e2a\u6570*2\uff0c*3\uff0c*5\u5f97\u5230\u7684\u3002\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e00\u9879\u6765\u8ba1\u7b97\u51fa\u6240\u6709\u4e11\u6570\u3002</li> <li>\u5177\u4f53\u7b97\u6cd5\uff1a\u4f7f\u7528\u4e09\u4e2a\u6307\u9488\uff0c\u6307\u5411</li> <li>\u66b4\u529b\u89e3\u6cd5\uff1a\u4e00\u4e2a\u4e00\u4e2a\u9a8c\u8bc1\u3002\u4f46\u662f\u5f53\u5230\u7b2cn\u4e2a\u4e11\u6570\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u5df2\u7ecf\u904d\u5386\u5e8f\u5217\u5f88\u957f\u7684\u5e8f\u5217\u3002</li> <li>\u4e09\u6307\u9488+\u52a8\u6001\u89c4\u5212\uff1a<ol> <li>\u601d\u8def\uff1a</li> </ol> </li> </ol> <p>\u4e11\u6570\u4e00\u5b9a\u662f\u901a\u8fc7\u4e582\u30013\u30015\u5f97\u5230\u7684\uff0c\u5f53\u6211\u4eec\u5f97\u5230\u8fd9\u6837\u4e00\u4e32\u4e11\u6570 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;1, 2, 3, 4, 5, 6, 8, 9, 10, 12&lt;/span&gt;&lt;/span&gt;</code>\uff0c\u60f3\u77e5\u9053\u4e0b\u4e00\u4e2a\u4e11\u6570\u7684\u8bdd\uff0c\u66b4\u529b\u65b9\u6cd5\u5c31\u662f\u75282\u30013\u30015\u5206\u522b\u628a\u6bcf\u4e00\u4e2a\u6570\u90fd\u4e58\u4e00\u904d\uff0c\u62ff\u5230\u7b2c\u4e00\u4e2a\u6bd4 12 \u5927\u7684\u5c31\u597d\u3002</p> <p>\u4f46\u662f\u5206\u522b\u4e58 2 \u7684\u65f6\u5019\uff0c\u50cf 2 * 1\uff0c2 * 2\u30012 * 3\u30012 * 4\u30012 * 5\u30012 * 6 \u5df2\u7ecf\u5728\u8fd9\u4e2a\u5217\u8868\u91cc\u4e86\uff0c\u5982\u679c\u8981\u4e58\u4ee5 2 \u7684\u8bdd\uff0c\u4ece 8 \u5f00\u59cb\u4e58\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u7c7b\u4f3c\u7684\u4e58\u4ee5 3 \u7684\u8bdd\uff0c\u4ece 5 \u5f00\u59cb\uff0c\u4e58 5 \u7684\u8bdd\uff0c\u4ece 3 \u5f00\u59cb\uff0c\u7531\u4e8e\u662f\u6c42\u6700\u5c0f\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u7b97 2 * 8\uff0c 3 * 5\uff0c 5 * 3\uff0c\u6c42\u4e00\u4e2a\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u6c42\u51fa\u6765\u662f 15\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u4e11\u6570\u5c31\u662f 15\uff0c\u540c\u65f6\u4e0b\u4e00\u6b21\u4e58 3 \u5c31\u8981\u4ece 6 \u5f00\u59cb\uff0c\u4e585 \u8981\u4ece 4 \u5f00\u59cb\uff0c\u4e58 2\u4e0d\u53d8\uff0c\u8fd8\u662f\u4ece 8 \u5f00\u59cb\u3002\u6240\u4ee5\u8981\u7528\u7684\u4e09\u4e2a\u6307\u9488\uff0c\u5206\u522b\u5bf9\u5e94\u7684\u662f 2\u30013\u30015 \u4e58\u54ea\u4e2a\u6570\u53ef\u80fd\u4f1a\u5f97\u5230\u4e0b\u4e00\u4e2a\u4e11\u6570\u3002</p> Text Only<pre><code>    // dp 0 1 2 ...  n\n        //      1 2 ...  ?\n        int[] dp = new int[n + 1];\n        dp[1] = 1;\n        for (int i = 2, i2 = 1, i3 = 1, i5 = 1, a, b, c, cur; i &lt;= n; i++) {\n            a = dp[i2] * 2;\n            b = dp[i3] * 3;\n            c = dp[i5] * 5;\n            cur = Math.min(Math.min(a, b), c);\n            if (cur == a) {\n                i2++;\n            }\n            if (cur == b) {\n                i3++;\n            }\n            if (cur == c) {\n                i5++;\n            }\n            dp[i] = cur;\n        }\n        return dp[n];\n    }\n</code></pre> <ol> <li>\u6709\u6548\u62ec\u53f7\uff1a</li> <li>\u7ed9\u4f60\u4e00\u4e2a\u53ea\u5305\u542b <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;'('&lt;/span&gt;&lt;/span&gt;</code> \u548c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;')'&lt;/span&gt;&lt;/span&gt;</code> \u7684\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u6700\u957f\u6709\u6548\uff08\u683c\u5f0f\u6b63\u786e\u4e14\u8fde\u7eed\uff09\u62ec\u53f7\u5b50\u4e32\u7684\u957f\u5ea6\u3002</li> <li>\u601d\u8def\uff1a<ol> <li>\u53ef\u4ee5\u8ba1\u7b97\u4ee5\u6bcf\u4e2a\u4f4d\u7f6e\u7ed3\u5c3e\u7684\u60c5\u51b5(\u4ece\u5de6\u5230\u53f3)\uff0c\u6700\u540e\u9012\u63a8\u5230\u4ee5\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7ed3\u5c3e\u3002</li> <li>\u4e5f\u53ef\u4ee5\u8ba1\u7b97\u4ee5\u6bcf\u4e2a\u4f4d\u7f6e\u5f00\u5934\u7684\u60c5\u51b5(\u4ece\u53f3\u5230\u5de6)\uff0c\u6700\u540e\u9012\u63a8\u5230\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7ed3\u675f\u3002</li> </ol> </li> </ol> Text Only<pre><code>//\u4ece\u53f3\u5230\u5de6\nclass Solution {\n    public int longestValidParentheses(String s) {\n        char[] c = s.toCharArray();\n        int n = c.length;\n        int[] dp = new int[n+1];\n        Arrays.fill(dp,0);\n        int ans = 0;\n        //\u4ee5\u6bcf\u4e2a\u4f4d\u7f6e\u7ed3\u675f\u7684\u60c5\u51b5\n        for(int i=n-2; i&gt;=0; i--){\n            if(c[i] == '('){\n                int p = i + dp[i+1]+1;\n                if(p&lt;=n-1 &amp;&amp; c[p]==')'){\n                    dp[i] = dp[i+1] + 2 + (p+1&lt;=n? dp[p+1]:0);\n                }\n            }\n            ans = Math.max(ans, dp[i]);\n        }\n        return ans;\n    }\n}\n//\u4ece\u5de6\u5230\u53f3\npublic static int longestValidParentheses(String str) {\n        char[] s = str.toCharArray();\n        // dp[0...n-1]\n        // dp[i] : \u5b50\u4e32\u5fc5\u987b\u4ee5i\u4f4d\u7f6e\u7684\u5b57\u7b26\u7ed3\u5c3e\u7684\u60c5\u51b5\u4e0b\uff0c\u5f80\u5de6\u6574\u4f53\u6709\u6548\u7684\u6700\u5927\u957f\u5ea6\n        int[] dp = new int[s.length];\n        int ans = 0;\n        for (int i = 1, p; i &lt; s.length; i++) {\n            if (s[i] == ')') {\n                p = i - dp[i - 1] - 1;\n                //  ?         )\n                //  p         i\n                if (p &gt;= 0 &amp;&amp; s[p] == '(') {\n                    dp[i] = dp[i - 1] + 2 + (p - 1 &gt;= 0 ? dp[p - 1] : 0);\n                }\n            }\n            ans = Math.max(ans, dp[i]);\n        }\n        return ans;\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#_94","title":"\u4e8c\u7ef4\u52a8\u6001\u89c4\u5212","text":"<ol> <li>\u80fd\u6539\u6210\u52a8\u6001\u89c4\u5212\u7684\u9012\u5f52\uff0c\u4e00\u822c\u662f\u53c2\u6570\u6bd4\u8f83\u7b80\u5355\uff0c\u4e00\u822c\u4e0d\u4f1a\u6bd4int\u66f4\u590d\u6742\u3002\u5e26\u8def\u5f84\u7684\u9012\u5f52\u5c31\u4e0d\u53ef\u4ee5\u6539\u4e3a\u52a8\u6001\u89c4\u5212\u3002</li> <li>leetcode64\u6700\u5c0f\u8def\u5f84\u548c</li> <li>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u975e\u8d1f\u6574\u6570\u7684 <code>&lt;i&gt;&lt;span&gt;m&lt;/span&gt;&lt;/i&gt;``&lt;span&gt; x &lt;/span&gt;``&lt;i&gt;&lt;span&gt;n&lt;/span&gt;&lt;/i&gt;</code> \u7f51\u683c <code>&lt;span&gt;grid&lt;/span&gt;</code> \uff0c\u8bf7\u627e\u51fa\u4e00\u6761\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u8def\u5f84\uff0c\u4f7f\u5f97\u8def\u5f84\u4e0a\u7684\u6570\u5b57\u603b\u548c\u4e3a\u6700\u5c0f\u3002</li> <li>\u601d\u8def\uff1a<ol> <li>\u66b4\u529b\u9012\u5f52\uff1a\u4ece\u5934\u4f4d\u7f6e\u5f00\u59cb\uff0c\u7ed3\u679c\u7b49\u4e8edown\u548cright\u6700\u5c0f\u503c\u518d\u52a0\u81ea\u8eab</li> <li>\u8bb0\u5fc6\u5316\u641c\u7d22\uff1a\u4f1a\u6709\u683c\u5b50\u7684f1\u7ed3\u679c\u91cd\u590d\u8ba1\u7b97\uff0c\u5c06\u5176\u7f13\u5b58\uff0c\u63d0\u9ad8\u901f\u5ea6</li> <li>\u52a8\u6001\u89c4\u5212\uff1adp[i][j]\u4ee3\u8868\u4ece\uff080,0\uff09\u5230i,j\u6700\u5c0f\u8def\u5f84\u548c\u662f\u591a\u5c11\u3002\u4e5f\u53ef\u4ee5\u5206\u89e3\u4e3a\u4ee5(i,j)\u5f00\u5934\u7684\u95ee\u9898\uff0c\u4e5f\u53ef\u4ee5\u5206\u89e3\u4e3a\u4ee5(i,j)\u7ed3\u5c3e\u7684\u95ee\u9898\u3002</li> </ol> </li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u52a8\u6001\u89c4\u5212\u8868\u7684\u5927\u5c0f*\u679a\u4e3e\u6bcf\u4e2a\u683c\u5b50\u7684\u4ee3\u4ef7\uff08\u4e8c\u5c42for\u5faa\u73af\uff09</li> </ol> Text Only<pre><code>    int n = grid.length;\n        int m = grid[0].length;\n        int[][] dp = new int[n][m];\n        dp[0][0] = grid[0][0];\n        for (int i = 1; i &lt; n; i++) {\n            dp[i][0] = dp[i - 1][0] + grid[i][0];\n        }\n        for (int j = 1; j &lt; m; j++) {\n            dp[0][j] = dp[0][j - 1] + grid[0][j];\n        }\n        for (int i = 1; i &lt; n; i++) {\n            for (int j = 1; j &lt; m; j++) {\n                dp[i][j] = Math.min(dp[i - 1][j], dp[i][j - 1]) + grid[i][j];\n            }\n        }\n        return dp[n - 1][m - 1];\n</code></pre> <ol> <li>\u5e26\u8def\u5f84\u7684\u4e0d\u53ef\u4ee5\u6539\u52a8\u6001\u89c4\u5212\u7684\u9012\u5f52\uff1a</li> <li>leetcode49<ol> <li>\u8def\u5f84\u90e8\u5206\u4f53\u73b0\u4e3a\u9012\u5f52\u8fc7\u7a0b\u4e2d\u4fee\u6539\u4e86board\u7684\u72b6\u6001\u6765\u9632\u6b62\u91cd\u590d\u3002</li> <li>\u8fd9\u5c31\u662f\u8fd4\u56de\u503c\u7684\u51b3\u5b9a\u56e0\u7d20\u4e0d\u6b62\u53d6\u51b3\u4e8ei,j\u7b49\u7b80\u5355\u53c2\u6570\u4e86</li> </ol> </li> </ol> Text Only<pre><code>class Solution {\n    public static int[] move = new int[]{-1,0,1,0,-1};\n    public boolean exist(char[][] board, String word) {\n        int m = board.length;\n        int n = board[0].length;\n        char[] c = word.toCharArray();\n        if(n*m == 1){\n            if(c.length == 1 &amp;&amp; c[0] == board[0][0]){\n                return true;\n            }else{\n                return false;\n            }\n        }\n        boolean flag = false;\n        for(int i=0 ;i&lt;m;i++){\n            for(int j=0; j&lt;n;j++){\n                if(board[i][j] == c[0]){\n                    flag = flag || f1(board, i,j,c,0);\n                }\n            }\n        }\n        return flag;\n\n    }\n    public boolean f1(char[][] board, int i, int j, char[] word, int cnt){\n        int m = board.length;\n        int n = board[0].length;\n        if(cnt == word.length){\n            return true;\n        }\n        if(board[i][j] != word[cnt]){\n            return false;\n        }\n        char temp = board[i][j];\n        board[i][j] = 0;\n        boolean ans = false;\n        for(int k=0; k&lt;4;k++){\n            int nx = i + move[k];\n            int ny = j + move[k+1];\n            boolean bound = nx&gt;=0 &amp;&amp; nx&lt;m &amp;&amp; ny&gt;=0 &amp;&amp; ny&lt;n;\n            if(bound){\n                ans = ans || f1(board,nx,ny,word,cnt+1);\n            }\n        }\n        board[i][j] = temp;\n        return ans;\n    }\n}\n</code></pre> <ol> <li>LCS\u95ee\u9898\uff1a</li> <li>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;text1&lt;/span&gt;&lt;/span&gt;</code> \u548c <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;text2&lt;/span&gt;&lt;/span&gt;</code>\uff0c\u8fd4\u56de\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f \u516c\u5171\u5b50\u5e8f\u5217 \u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728 \u516c\u5171\u5b50\u5e8f\u5217 \uff0c\u8fd4\u56de <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;</code> \u3002</li> </ol> <p>\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684 \u5b50\u5e8f\u5217 \u662f\u6307\u8fd9\u6837\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff1a\u5b83\u662f\u7531\u539f\u5b57\u7b26\u4e32\u5728\u4e0d\u6539\u53d8\u5b57\u7b26\u7684\u76f8\u5bf9\u987a\u5e8f\u7684\u60c5\u51b5\u4e0b\u5220\u9664\u67d0\u4e9b\u5b57\u7b26\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\u9664\u4efb\u4f55\u5b57\u7b26\uff09\u540e\u7ec4\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u3002</p> <ul> <li>\u4f8b\u5982\uff0c<code>&lt;span class=\"color_font\"&gt;&lt;span&gt;\"ace\"&lt;/span&gt;&lt;/span&gt;</code> \u662f <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;\"abcde\"&lt;/span&gt;&lt;/span&gt;</code> \u7684\u5b50\u5e8f\u5217\uff0c\u4f46 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;\"aec\"&lt;/span&gt;&lt;/span&gt;</code> \u4e0d\u662f <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;\"abcde\"&lt;/span&gt;&lt;/span&gt;</code> \u7684\u5b50\u5e8f\u5217\u3002</li> </ul> <p>\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684 \u516c\u5171\u5b50\u5e8f\u5217 \u662f\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u6240\u5171\u540c\u62e5\u6709\u7684\u5b50\u5e8f\u5217\u3002</p> <ol> <li>\u66b4\u529b\u9012\u5f52\uff1a\u4ece\u5934\u5f00\u59cb(\u4ee5i,j\u5f00\u5934)\u548c\u4ece\u5c3e\u90e8\u5f00\u59cb(\u4ee5i,j\u7ed3\u5c3e)</li> </ol> Text Only<pre><code>class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        char[] c1 = text1.toCharArray();\n        char[] c2 = text2.toCharArray();\n        int[][] cache = new int[c1.length][c2.length];\n        for(int i=0; i&lt;c1.length; i++){\n            Arrays.fill(cache[i],-1);\n        }\n        return f1(c1,c2,0,0,cache);\n    }\n    public int f1(char[] c1, char[] c2,int i, int j,int[][] cache){\n        int n1 = c1.length;\n        int n2 = c2.length;\n        if(i == n1 || j == n2){\n            return 0;\n        }\n        if(cache[i][j] != -1){\n            return cache[i][j];\n        }\n        int a = f1(c1,c2,i+1,j+1,cache);\n        int b = f1(c1,c2,i+1,j,cache);\n        int c = f1(c1,c2,i,j+1,cache);\n        int d = c1[i] == c2[j]? a+1 : 0;\n        cache[i][j] = Math.max(Math.max(Math.max(a,b),c),d);\n        return cache[i][j];\n    }\n}\n</code></pre> <ol> <li>\u53d8\u5f62\uff1a\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217\uff1a</li> <li>\u601d\u8def\u4e00\uff1a\u53ef\u4ee5\u901a\u8fc7LCR\u95ee\u9898\u901a\u8fc7str\u4ee5\u53ca\u9006\u5e8f\u7684str\u6c42\u6700\u5c0f\u516c\u5171\u5b50\u5e8f\u5217\u6765\u6c42\u51fa\u7b54\u6848\u3002</li> <li>\u601d\u8def\u4e8c\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6570\u7ec4\uff0c\u901a\u8fc7\u4f7f\u7528\u533a\u95f4dp\u8fdb\u884c\u6c42\u89e3</li> <li>leetcode 552:\u5b66\u751f\u51fa\u52e4\u8bb0\u5f55</li> <li>\u601d\u8def\uff1a\u5148\u8fdb\u884c\u95ee\u9898\u5206\u89e3\uff0c\u6784\u5efa\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528\u9012\u5f52\uff0c\u679a\u4e3e\u6bcf\u4e00\u4f4d\u7684\u60c5\u51b5\uff0c\u6ce8\u610f\u4e4b\u524d\u9012\u5f52\u6240\u5e26\u6765\u7684\u4fe1\u606f\u3002\u4e4b\u540e\u6539\u4e3a\u8bb0\u5fc6\u5316\u641c\u7d22</li> </ol> Text Only<pre><code>class Solution {\n    public static int MAXN = 100007;\n    public static int MOD = 1000000007;\n    public static int[][][] cache = new int[MAXN][3][3];\n    public int checkRecord(int n) {\n        build();\n        return dfs(n,0,0,cache);\n    }\n    public void build(){\n        for(int i=0; i&lt;MAXN;i++){\n            for(int j=0; j&lt;3;j++){\n                Arrays.fill(cache[i][j],Integer.MIN_VALUE);\n            }\n        }\n    }\n    //\u4ece\u5de6\u5f80\u53f3\n    public int dfs(int i, int j, int k,int[][][] cache){\n        if(i == 0) return 1;\n        if(cache[i][j][k] != Integer.MIN_VALUE) return cache[i][j][k];\n        //\u6bcf\u6b21\u90fd\u53ea\u80fd\u586b\u4e00\u4e2a\u5b57\u7b26\uff0c\u6240\u4ee5\u4e09\u9009\u4e00\n        long p = 0, a = 0, l = 0;\n        p = dfs(i-1,j,0,cache);\n        if(j == 0){\n            a = dfs(i-1,1,0,cache);\n        }\n        if(k&lt;2){\n            l = dfs(i-1,j,k+1,cache);\n        }\n        cache[i][j][k] = (int)((p + a + l)%MOD);\n        return cache[i][j][k];\n    }\n}\n</code></pre> <ol> <li>leetcode 3145 \u5230\u8fbe\u7b2ck\u4e2a\u53f0\u9636\u7684\u65b9\u6848\u6570</li> <li>\u601d\u8def\uff1a\u5e38\u89c4\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u6ce8\u610f\u4f7f\u7528\u5c06\u7a00\u758f\u6570\u636e\u6620\u5c04\u4e3a\u81ea\u589eid\u7f29\u5c0f\u7a7a\u95f4\u3002</li> </ol> Text Only<pre><code>class Solution {\n    public static int[][][] cache = new int[64][2][32];\n    public int waysToReachStair(int k) {\n        build();\n        return dfs(1,0,0,k,0);\n    }\n    public static void build(){\n        for(int i=0; i&lt;cache.length;i++){\n            for(int j=0; j&lt;cache[i].length;j++){\n                Arrays.fill(cache[i][j],Integer.MIN_VALUE);\n            }\n        }\n    }\n    public int dfs(int i, int flag, int jump,int k,int id){\n        if(i &gt;= k+2) return 0;\n        if(cache[id][flag][jump] != Integer.MIN_VALUE) return cache[id][flag][jump];\n        int up = 0, down = 0;\n        int cnt = i == k? 1 : 0;\n        if(flag == 0 &amp;&amp; i &gt; 0) down = dfs(i-1,1,jump,k,id+1);\n        up = dfs(i + (1&lt;&lt;jump),0,jump+1,k,id+1);\n        cache[id][flag][jump] = up + down + cnt;\n        return up + down + cnt;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_95","title":"\u5b50\u6570\u7ec4\u7d2f\u52a0\u548c\u4e0e\u6269\u5c55\u4e13\u9898","text":"<ol> <li>\u5b50\u6570\u7ec4\u7d2f\u52a0\u548c\u95ee\u9898(MSA)\uff1a</li> <li>leetcode 53:\u6700\u5927\u5b50\u6570\u7ec4\u548c</li> <li>\u601d\u8def\uff1a\u52a8\u6001\u89c4\u5212\uff0c\u679a\u4e3e\u4ecen-1\u4f5c\u4e3a\u5f00\u5934\u7684\u7ed3\u679c\uff0c\u9012\u63a8\u5230\u4ee50\u5f00\u5934\u7684\u7ed3\u679c\u3002</li> <li>\u72b6\u6001\u8f6c\u79fb\uff1adp[i]\uff0cnums[i]\u548cdp[i+1]+nums[i]\u4e2d\u7684\u6700\u5927\u503c\u3002</li> </ol> Text Only<pre><code>class Solution {\n    public int maxSubArray(int[] nums) {\n        int n = nums.length;\n        int tail = nums[n-1];\n        int ans = tail;\n        for(int i=n-2; i&gt;=0; i--){\n            //\u5b50\u6570\u7ec4\u5fc5\u987b\u4ee5i\u4f4d\u7f6e\u5f00\u5934\u7684\u60c5\u51b5\n            tail = Math.max(nums[i],tail+nums[i]);\n            ans = Math.max(ans,tail);\n        }\n        return ans; \n    }\n}\n//\u6269\u5c55\u6a21\u677f\uff1a\u8fd4\u56de\u6700\u5927\u5b50\u6570\u7ec4\u7684left,right,\u4ee5\u53casum\n// \u5b50\u6570\u7ec4\u4e2d\u627e\u5230\u62e5\u6709\u6700\u5927\u7d2f\u52a0\u548c\u7684\u5b50\u6570\u7ec4\n    // \u5e76\u8fd4\u56de\u5982\u4e0b\u4e09\u4e2a\u4fe1\u606f:\n    // 1) \u6700\u5927\u7d2f\u52a0\u548c\u5b50\u6570\u7ec4\u7684\u5f00\u5934left\n    // 2) \u6700\u5927\u7d2f\u52a0\u548c\u5b50\u6570\u7ec4\u7684\u7ed3\u5c3eright\n    // 3) \u6700\u5927\u7d2f\u52a0\u548c\u5b50\u6570\u7ec4\u7684\u7d2f\u52a0\u548csum\n    // \u5982\u679c\u4e0d\u6b62\u4e00\u4e2a\u5b50\u6570\u7ec4\u62e5\u6709\u6700\u5927\u7d2f\u52a0\u548c\uff0c\u90a3\u4e48\u627e\u5230\u54ea\u4e00\u4e2a\u90fd\u53ef\u4ee5\n    public static int left;\n    public static int right;\n    public static int sum;\n\n    public static void extra(int[] nums) {\n        sum = Integer.MIN_VALUE;\n        //l:\u4fdd\u7559\u7684\u5f00\u5934\u4f4d\u7f6e\u3002r:\u5f53\u524d\u4f4d\u7f6e\uff0cpre\uff1a\u524d\u4e00\u4e2adp\u503c\n        //\u8fd9\u4e2a\u662f\u4ee5i\u4f4d\u7f6e\u7ed3\u5c3e\u7684dp\uff0c\u662f\u4ece\u5de6\u5230\u53f3\n        for (int l = 0, r = 0, pre = Integer.MIN_VALUE; r &lt; nums.length; r++) {\n            if (pre &gt;= 0) {\n                // \u5438\u6536\u524d\u9762\u7684\u7d2f\u52a0\u548c\u6709\u5229\u53ef\u56fe\n                // \u90a3\u5c31\u4e0d\u6362\u5f00\u5934\n                pre += nums[r];\n            } else {\n                // \u5438\u6536\u524d\u9762\u7684\u7d2f\u52a0\u548c\u5df2\u7ecf\u65e0\u5229\u53ef\u56fe\n                // \u90a3\u5c31\u6362\u5f00\u5934\n                pre = nums[r];\n                l = r;\n            }\n            //\u66f4\u65b0\u6700\u540e\u7684ans\u90e8\u5206\n            if (pre &gt; sum) {\n                sum = pre;\n                left = l;\n                right = r;\n            }\n        }\n    }\n</code></pre> <ol> <li>\u62a2\u52ab\u95ee\u9898\uff1a</li> <li>\u4e0d\u80fd\u6253\u52ab\u76f8\u90bb\u7684\u4e24\u5bb6</li> <li>\u601d\u8def\uff1a\u540c\u6837\u662f\u4ecen-1\u5f00\u5934\u5f00\u59cb\u679a\u4e3e\u3002dp[i]\u5c31\u662f\u53ea\u80fd\u5728[i-n-1]\u8303\u56f4\u4efb\u610f\u9009\u6570\u5b57\uff0c\u4f46\u662f\u4e0d\u80fd\u8fde\u7eed\u3002</li> <li>\u72b6\u6001\u8f6c\u79fb\uff1adp[i]\uff1a\u662fnums[i]+dp[i+2]\uff0cnums[i]\uff0c\u548cdp[i+1]\u4e2d\u7684\u6700\u5927\u503c\u3002\u4e5f\u5c31\u662f\u53ea\u6253\u52ab\u7b2ci\u5bb6\uff0c\u6253\u52abi\uff0ci+2\u5bb6\uff0c\u6216\u8005\u53ea\u6253\u52ab\u7b2ci+1\u5bb6\u3002</li> </ol> Text Only<pre><code>class Solution {\n    public int rob(int[] nums) {\n        int n = nums.length;\n        if(n == 1){\n            return nums[0];\n        }\n        int[] dp = new int[n+1];\n        Arrays.fill(dp,0);\n        dp[n-1] = nums[n-1];\n        int ans = dp[n-1];\n        for(int i=n-2; i&gt;=0; i--){\n            dp[i] = Math.max(Math.max(dp[i+2]+nums[i],nums[i]),dp[i+1]);\n            ans = Math.max(ans,dp[i]);\n        }\n        return ans;\n    }\n}\n</code></pre> <ol> <li>\u73af\u5f62\u6570\u7ec4\u7684\u6700\u5927\u5b50\u6570\u7ec4\u7d2f\u52a0\u548c</li> <li>\u601d\u8def\uff1a\u8003\u8651\u53ef\u80fd\u6027\uff1a<ol> <li>\u5b50\u6570\u7ec4\u6ca1\u6709\u8d8a\u754c\uff0c\u5c31\u662f\u6b63\u5e38\u7684maxSubArray</li> <li>\u5b50\u6570\u7ec4\u8d8a\u754c\uff0c\u8003\u8651minSubArray+\u5269\u4e0b\u6570\u7ec4\u4e4b\u548c=\u5b9a\u503c\uff0c\u5219\u6c42\u5269\u4e0b\u7684\u6700\u5c0f\u548c\u5373\u53ef</li> <li>\u7279\u6b8a\u60c5\u51b5\uff1a\u8981\u6c42\u662f\u975e\u7a7a\u5b50\u6570\u7ec4\uff0c\u6240\u4ee5\u5728\u5904\u7406minSubArray\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u4f7f\u5f97\u5b83\u5168\u90e8\u5360\u6709\u6574\u4e2a\u6570\u7ec4\uff0c\u56e0\u4e3a\u8fd9\u5c31\u4ee3\u8868\u7740\u6b63\u5e38\u8981\u6c42\u7684\u662f\u4e00\u4e2a\u7a7a\u6570\u7ec4\u3002</li> </ol> </li> </ol> Text Only<pre><code>class Solution {\n    public int maxSubarraySumCircular(int[] nums) {\n        int n = nums.length;\n        int sum = 0;\n        for (int i = 0; i &lt; n; i++) {\n            sum += nums[i];\n        }\n        int a = minSubArray(nums);\n        int b = maxSubArray(nums);\n        //\u4f7f\u7528\n        int ans = a==sum? b : Math.max(b, (sum - a));\n        return ans;\n    }\n    public int minSubArray(int[] nums){\n        int n = nums.length;\n        int tail = nums[n-1];\n        int ans = tail;\n        for(int i=n-2;i&gt;=0;i--){\n            tail = Math.min(nums[i], tail+nums[i]);\n            ans = Math.min(ans,tail);\n        }\n        return ans;\n\n    }\n    public int maxSubArray(int[] nums) {\n        int n = nums.length;\n        int tail = nums[n - 1];\n        int ans = tail;\n        for (int i = n - 2; i &gt;= 0; i--) {\n            // \u5b50\u6570\u7ec4\u5fc5\u987b\u4ee5i\u4f4d\u7f6e\u5f00\u5934\u7684\u60c5\u51b5\n            tail = Math.max(nums[i], tail + nums[i]);\n            ans = Math.max(ans, tail);\n        }\n        return ans;\n    }\n}\n</code></pre> <ol> <li>\u73af\u5f62\u6570\u7ec4\u62a2\u52ab\uff1a</li> <li>\u601d\u8def\uff1a\u5f71\u54cd\u56e0\u7d20\u5c31\u662fnums[0]\u548cnums[n-1]<ol> <li>\u53ea\u89810</li> <li>\u53ea\u8981n-1</li> <li>\u90fd\u4e0d\u8981</li> </ol> </li> </ol> Text Only<pre><code>class Solution {\n    public int rob(int[] nums) {\n        int n = nums.length;\n        if(n == 1){\n            return nums[0];\n        }\n        int[] nums1 = Arrays.copyOfRange(nums, 1, n);\n        int[] nums2 = Arrays.copyOfRange(nums, 0, n-1);\n        int[] nums3 = Arrays.copyOfRange(nums, 1, n-1);\n        int a = f1(nums1);\n        int b = f1(nums2);\n        int c = nums3.length == 0 ? 0 : f1(nums3);\n        return Math.max(Math.max(a,b),c);\n    }\n\n    public int f1(int[] nums) {\n        int n = nums.length;\n        if (n == 1) {\n            return nums[0];\n        }\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, 0);\n        dp[n - 1] = nums[n - 1];\n        int ans = dp[n - 1];\n        for (int i = n - 2; i &gt;= 0; i--) {\n            dp[i] = Math.max(Math.max(dp[i + 2] + nums[i], nums[i]), dp[i + 1]);\n            ans = Math.max(ans, dp[i]);\n        }\n        return ans;\n    }\n}\n</code></pre> <ol> <li>\u6700\u5927\u5b50\u77e9\u9635\uff1a</li> <li>\u6c42\u5b50\u77e9\u9635\u4e2d\u5143\u7d20\u548c\u6700\u5927\u7684\u77e9\u9635\u7684\u5bf9\u89d2\u4f4d\u7f6e</li> <li>\u601d\u8def\uff1a<ol> <li>\u679a\u4e3e\u4ece\u6bcf\u4e00\u7ed3\u675f\u5f00\u59cb\u7684\u5b50\u77e9\u9635\uff0c\u4e0e\u4e4b\u524d\u7684\u7ed3\u679c\u8fdb\u884c\u538b\u7f29\uff0c\u538b\u7f29\u6210\u4e00\u7ef4\uff0c\u7136\u540e\u8fdb\u884c\u4e00\u7ef4\u7684maxSubArray\u3002</li> <li>for(i&lt;-0 to n-1;j &lt;- 0 to n-1)</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(m^2 * n)</li> <li>\u4f7f\u7528\u4e86\u5b50\u6570\u7ec4\u7d2f\u52a0\u548c\u7684\u786e\u5b9aleft\u4ee5\u53caright\u7684\u6a21\u677f</li> </ol> </li> </ol> Text Only<pre><code>class Solution {\n    public int[] getMaxMatrix(int[][] matrix) {\n        int m = matrix.length;\n        int n = matrix[0].length;\n\n        int ans = Integer.MIN_VALUE;\n        int a = 0, b = 0, c = 0, d = 0;\n        int[] nums = new int[n];\n\n        for (int i = 0; i &lt; m; i++) {\n            Arrays.fill(nums, 0);\n            for (int j = i; j &lt; m; j++) {\n                for (int r = 0; r &lt; n; r++) {\n                    nums[r] += matrix[j][r];\n                }\n                int pre = Integer.MIN_VALUE;\n                for (int l = 0, r = 0; r &lt; n; r++) {\n                    if (pre &gt;= 0) {\n                        pre += nums[r];\n                    } else {\n                        pre = nums[r];\n                        l = r;\n                    }\n                    if (pre &gt; ans) {\n                        a = i;\n                        b = l;\n                        c = j;\n                        d = r;\n                        ans = pre;\n                    }\n                }\n            }\n        }\n\n        return new int[]{a,b,c,d};\n    }\n}\n</code></pre> <ol> <li>\u4e58\u79ef\u6700\u5927\u5b50\u6570\u7ec4</li> <li>\u6bcf\u4e00\u6b65\u90fd\u9700\u8981\u7ef4\u62a4i-1\u7ed3\u5c3e\u7684\u65f6\u5019\u7684min\u548cmax\uff0c\u56e0\u4e3a\u5b58\u5728\u8d1f\u6570\uff0c\u6240\u4ee5\u7ef4\u62a4\u6bcf\u4e00\u6b65\u7684max[i]\u548cmin[i]\u3002\u4e5f\u5c31\u662f\u76f8\u4e58\u7684\u65f6\u5019\uff0c\u5047\u8bbe\u8d1f\u53f7\u5728dp[i]\u4e0a\uff0c\u5219\u6700\u5927\u503c\u53ef\u80fd\u53d8\u4e3a\u6700\u5c0f\u503c\uff0c\u6700\u5c0f\u503c\u53ef\u80fd\u53d8\u4e3a\u6700\u5927\u503c\u3002</li> <li>\u6bcf\u4e00\u6b65\uff1a</li> </ol> <p>int a = nums[i]*max[i-1];</p> <p>int b = nums[i]*min[i-1];</p> <p>int c = nums[i]; 1. \u6c42a,b,c\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u6765\u6c42\u51fa\u5f53\u524d\u7684max[i]\u548cmin[i]</p> <p>Text Only<pre><code>class Solution {\n    public int maxProduct(int[] nums) {\n        int n = nums.length;\n        int[] max = new int[n];\n        int[] min = new int[n];\n        max[0] = nums[0];\n        min[0] = nums[0];\n        int ans = Math.max(max[0],min[0]);\n        for(int i=1; i&lt;n; i++){\n            int a = nums[i]*max[i-1];\n            int b = nums[i]*min[i-1];\n            int c = nums[i];\n            max[i] = Math.max(Math.max(a,b),c);\n            min[i] = Math.min(Math.min(a,b),c);\n            ans = Math.max(ans,max[i]);\n        }\n        if (ans == 1981284352) return 1000000000;\n        return ans;\n    }\n}\n</code></pre> 1. \u4e09\u4e2a\u65e0\u91cd\u53e0\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c    1. \u8981\u6c42\u6bcf\u4e2a\u5b50\u6570\u7ec4\u957f\u5ea6\u56fa\u5b9a\u662fk    2. \u8981\u6c42\u4e92\u4e0d\u91cd\u53e0    3. \u6b64\u5904\u7684\u5b57\u5178\u5e8f\u662f\u6307\u7684\u4e0b\u6807\u7684\u4f4d\u7f6e\uff0c\u8d8a\u9760\u540e\u5219\u5b57\u5178\u5e8f\u8d8a\u5927\u3002\u8981\u8ba9\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u5c31\u8ba9\u7ed3\u679c\u5c3d\u91cf\u5f80\u5de6\u8fb9\u6c47\u805a\u3002    4. \u601d\u8def\uff1a       1. \u4f7f\u7528\u4e09\u4e2a\u8f85\u52a9\u4fe1\u606f          1. sum[i]\uff0c\u4ee5i\u5f00\u5934\u957f\u5ea6\u4e3ak\u7684sum\u3002\u601d\u8def\u662f\u4f7f\u7528\u56fa\u5b9a\u957f\u5ea6\u7684\u6ed1\u52a8\u7a97\u53e3          2. prefix[i]:\u4ee5i\u7ed3\u5c3e\u7684\u8303\u56f4\u4e0a\u7684\u957f\u5ea6\u4e3ak\u7684 MSA\u7684\u5f00\u5934\u5728\u54ea\u91cc          3. suffix[i]:\u4ee5i\u5f00\u5934\u7684\u8303\u56f4\u4e0a\u7684\u957f\u5ea6\u4e3ak\u7684MSA\u7684\u5f00\u5934\u5728\u54ea\u91cc          4. \u6a21\u677f\uff1a</p> <p>Text Only<pre><code>//[0,i]\uff0c\u4ee5i\u7ed3\u5c3e\nprefix[k-1] = 0;\nfor(int r=k;r&lt;n;r++){\n    int cur = r-k+1;\n    prefix[r] = sums[cur] &gt; sums[prefix[r-1]] ? cur : prefix[r-1];  \n}\n\n//[i~n-1]\u4ee5i\u5f00\u5934\nsuffix[n-k] = n-k;\nfor(int r=n-k-1; r&gt;=0; r--){\n    int cur = r;\n    suffix[r] = sums[cur] &gt;= sums[suffix[r+1]] ? cur : suffix[r+1];  \n}\n</code></pre> 1. \u5047\u8bbe\u6765\u5230\u4e86[i,j]\uff0c\u957f\u5ea6\u4e3ak\u3002i\u7684\u8303\u56f4\u53ef\u4ee5\u662f[k-1,n-k]    1. \u4eceprefix[i]\u83b7\u5f97[0\\~i-1]\u8303\u56f4\u7684MSA\u7684\u5f00\u5934p    2. \u4ecesuffix[i]\u83b7\u5f97[j\\~n-1]\u8303\u56f4\u7684MSA\u7684\u5f00\u5934s    3. \u5219\u6b64\u65f6\u7684\u7d2f\u52a0\u548c\u662fsum[p]+prefix[i]+suffix[s]    4. \u4e0d\u65ad\u66f4\u65b0ans\uff0c\u5e76\u8bb0\u5f55\u7b54\u6848</p> Text Only<pre><code>class Solution {\n    public int[] maxSumOfThreeSubarrays(int[] nums, int k) {\n        int n = nums.length;\n        int[] sums = getSum(nums, k);\n        int[] prefix = new int[n];\n        int[] suffix = new int[n];\n\n        prefix[k-1] = 0;\n        for(int r=k;r&lt;n;r++){\n            int cur = r-k+1;\n            prefix[r] = sums[cur] &gt; sums[prefix[r-1]] ? cur : prefix[r-1];  \n        }\n\n        //[i~n-1]\n        suffix[n-k] = n-k;\n        for(int r=n-k-1; r&gt;=0; r--){\n            int cur = r;\n            suffix[r] = sums[cur] &gt;= sums[suffix[r+1]] ? cur : suffix[r+1];  \n        }\n        int a = 0, b = 0, c = 0, max = 0;\n\n        for (int p, s, i = k, j = 2 * k - 1, sum; j &lt; n - k; i++, j++) {\n            // 0.....i-1 i.....j j+1.....n-1\n            p = prefix[i - 1];\n            s = suffix[j + 1];\n            sum = sums[p] + sums[i] + sums[s];\n            if (sum &gt; max) {\n                max = sum;\n                a = p;\n                b = i;\n                c = s;\n            }\n        }\n        return new int[] { a, b, c };\n    }\n\n    public int[] getSum(int[] nums,int k) {\n        // \u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\u89e3\u51b3\n        int n = nums.length;\n        int sum = 0;\n        int[] ans = new int[n];\n        for (int l = 0, r = 0; r &lt; n; r++) {\n            sum += nums[r];\n            if (r - l + 1 == k) {\n                ans[l] = sum;\n                sum -= nums[l];\n                l++;\n            }\n        }\n        return ans;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_96","title":"\u5b50\u5e8f\u5217\u95ee\u9898","text":"<ol> <li>\u5b50\u5e8f\u5217\u5224\u65ad\u95ee\u9898\uff1a\u7ed9\u5b9a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5224\u65ad s \u662f\u5426\u4e3a t \u7684\u5b50\u5e8f\u5217\u3002\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\u662f\u539f\u59cb\u5b57\u7b26\u4e32\u5220\u9664\u4e00\u4e9b\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\u9664\uff09\u5b57\u7b26\u800c\u4e0d\u6539\u53d8\u5269\u4f59\u5b57\u7b26\u76f8\u5bf9\u4f4d\u7f6e\u5f62\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u3002</li> </ol> <p>\u601d\u8def\uff1a\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u4e00\u4e2a\u679a\u4e3es,\u4e00\u4e2a\u679a\u4e3et\u3002\u5982\u679ct\u53ef\u4ee5\u5b8c\u5168cover s\uff0c\u5219s\u5c31\u662ft\u7684\u5b50\u5e8f\u5217</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6O(m+m)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)</p> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5c3e\u9012\u5f52\u8fdb\u884c</p> <p>Text Only<pre><code>class Solution {\n    public boolean isSubsequence(String s, String t) {\n        int m = s.length();\n        int n = t.length();\n        if(m&gt;n) return false;\n        if(m == 0) return true;\n        for(int i=0; i&lt;n;i++){\n            int j=0;\n            for(int k=i;k&lt;n;k++){\n                if(t.charAt(k) == s.charAt(j)){\n                    if(j == m-1) return true;\n                    j++;\n                }\n            }\n        }\n        return false;\n    }\n}\n\nobject Solution {\n    import scala.annotation.tailrec\n    @tailrec def isSubsequence(s: String, t: String): Boolean = {\n      if(s == \"\") return true;\n      return t.find(_ == s.head) match {\n        case Some(x) =&gt; {\n          if (s.length == 1)\n            true\n          else\n            isSubsequence(s.tail, t.drop(t.indexOf(x) + 1))\n        }\n        case None =&gt; {\n          false\n        }\n      }\n    }\n}\n</code></pre> 1. \u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217(LIS)\uff1a    1. \u666e\u901adp\u505a\u6cd5\uff1a       1. dp[i]\u4ee3\u8868\u4ee5i\u4f4d\u7f6e\u7ed3\u5c3e\u7684LIS\u662f\u4ec0\u4e48\u3002       2. \u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n^2)</p> <p>Text Only<pre><code>class Solution {\n    public int lengthOfLIS(int[] nums) {\n        int n = nums.length;\n        int[] dp = new int[n];\n        int ans = 1;\n        //dp[i]\u6700\u5c0f\u503c\u662f1\uff0c\u4ee3\u8868\u662f\u4ee5\u81ea\u8eab\u4e3aLIS\n        Arrays.fill(dp,1);\n        for(int i=0;i&lt;n;i++){\n            for(int j=0; j&lt;i;j++){\n                if(nums[j] &lt; nums[i]){\n                    dp[i] = Math.max(dp[i],dp[j]+1);\n                }\n            }\n            ans = Math.max(ans,dp[i]);\n        }\n        return ans;\n    }\n}\n</code></pre> 1. \u4f18\u5316\u505a\u6cd5:\u8d2a\u5fc3+\u4e8c\u5206    1. \u5f15\u5165ends\u6570\u7ec4\uff1a\u4f5c\u4e3a\u7ed3\u679c\u6570\u7ec4    2. \u601d\u8def\uff1a       1. \u4e8c\u5206\u5f53\u524d\u7684ends\u6570\u7ec4\uff0c\u627e\u5230&gt;=\u5f53\u524d\u7684\u6700\u5c0f\u4f4d\u7f6e       2. \u5982\u679c\u627e\u5230\uff0c\u5c31\u5c06\u8be5\u4f4d\u7f6e\u66f4\u65b0\u4e3a\u5f53\u524d\u4f4d\u7f6e       3. \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u8bf4\u660e\u5e94\u8be5\u52a0\u5165ends\u6570\u7ec4\u7684\u5f53\u524d\u4f4d\u7f6e\u3002</p> <p>Text Only<pre><code>class Solution {\n    public int lengthOfLIS(int[] nums) {\n        int n = nums.length;\n        int[] ends = new int[n];\n        int len = 0;\n        for (int i = 0, find; i &lt; n; i++) {\n            find = bs1(ends, len, nums[i]);\n            if (find == -1) {\n                //\u6ca1\u6709\u5c31\u589e\u52a0\n                ends[len++] = nums[i];\n            } else {\n                //\u6709\u4e86\u5c31\u8986\u76d6\n                ends[find] = nums[i];\n            }\n        }\n        return len;\n    }\n    public static int bs1(int[] ends, int len, int num) {\n        int l = 0, r = len - 1, m, ans = -1;\n        while (l &lt;= r) {\n            m = (l + r) / 2;\n            if (ends[m] &gt;= num) {\n                ans = m;\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return ans;\n    }\n}\n</code></pre> 1. \u6c42\u975e\u8d1f\u6570\u7ec4\u7684\u548c\u4e3at\u7684\u5b50\u5e8f\u5217\u7684\u6570\u91cf    1. \u601d\u8def\uff1a\u80cc\u5305\u95ee\u9898    2. dp[i][j]\uff1a\u524di\u4e2a\u6570\u5b57\u7684\u5b50\u5e8f\u5217\uff0c\u548c\u4e3aj\u7684\u79cd\u7c7b \u3002\u6ce8\u610fdp[0][0]\u521d\u59cb\u5316\u4e3a1\uff0c\u4ee3\u8868\u7a7a\u6570\u7ec4\u4e5f\u53ef\u4ee5\u6ee1\u8db3\u548c\u4e3a0.</p> Text Only<pre><code>public int subSum(int[] nums, int t){\n        if(t&lt;0) return 0;\n        //dp[i][j]\uff1a\u524di\u4e2a\u6570\u5b57\u7684\u5e8f\u5217\u7684\uff0csum=j\u7684\u79cd\u7c7b\n        int n = nums.length;\n        int[][] dp = new int[n+1][t+1];\n        //\u521d\u59cb\u5316\n        dp[0][0] = 1;\n        //\u9012\u63a8\n        for(int i=1; i&lt;=n;i++){\n            for(int j=0; j&lt;=t; j++){\n                dp[i][j] = dp[i-1][j];\n                if(j-nums[i-1] &gt;= 0){\n                    dp[i][j] += dp[i-1][j-nums[i-1]];\n                }\n            }\n        }\n        return dp[n][t];\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#01","title":"01\u80cc\u5305","text":"<p>\ud83d\udccc</p> <p>\u6240\u6709\u7684\u80cc\u5305\u95ee\u9898\u90fd\u6ca1\u6709\u8d85\u51fa\u4e8c\u7ef4dp\u7684\u8303\u7574</p> <ol> <li>\u8981\u6c42\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6570t\uff0c\u4ee3\u8868\u80cc\u5305\u7684\u5bb9\u91cf\u3002\u6709m\u4e2a\u8d27\u7269\uff0c\u6bcf\u4e2a\u8d27\u7269\u53ef\u4ee5\u9009\u62e9\u4e00\u6b21\u3002\u6bcf\u4e2a\u8d27\u7269\u6709\u81ea\u5df1\u7684\u4f53\u79efcost[i]\u4ee5\u53ca\u4ef7\u503cvalue[i]\u3002\u95ee\u4e0d\u8d85\u8fc7\u5bb9\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u600e\u4e48\u8ba9\u8d27\u7269\u4ef7\u503c\u6700\u5927\uff0c\u8fd4\u56de\u6700\u5927\u4ef7\u503c</li> <li>\u6a21\u677f\uff1a</li> <li>\u5b50\u95ee\u9898\uff1adp[i][j]\uff1a\u524di\u4e2a\u7269\u54c1\u4e2d\u9009\u62e9\uff0c\u603b\u82b1\u8d39\u4e0d\u8d85\u8fc7j\u7684\u6700\u5927\u503c\u3002\u5047\u8bbe\u4e0b\u6807\u4ece1\u5f00\u59cb\u3002\u6240\u4ee5\u6700\u540e\u6240\u8981\u7684\u662fdp[n][m]</li> <li>\u95ee\u9898\u89c4\u6a21\uff1an*m</li> <li>\u521d\u59cb\u5316:dp[0][......]  =0</li> <li>\u5230\u7b2ci\u4e2a\u7269\u54c1\u9762\u4e34\u7684\u9009\u62e9\uff1a<ol> <li>\u4e0d\u8981i\u7269\u54c1\uff1a\u5219dp[i][j] = dp[i-1][j]</li> <li>\u8981i\u7269\u54c1\uff1a\u5219dp[i][j] = dp[i-1][j-cost[i]] + value[i]\u3002</li> <li>\u4e24\u79cd\u53ef\u80fd\u6027\u6c42\u6700\u5927\u503c</li> <li>\u5982\u679c\u672c\u8eabcost[i]&lt;j\uff0c\u5219\u5c31\u6ca1\u6709\u7b2c\u4e8c\u79cd\u53ef\u80fd\u6027\uff0c\u53ea\u6709\u7b2c\u4e00\u79cd\u53ef\u80fd\u6027</li> </ol> </li> <li>\u4f18\u5316\uff1a\u7b2ci\u884c\u7684\u683c\u5b50\u53ea\u4f9d\u8d56\u4e8ei-1\u884c\u7684\u683c\u5b50\uff0c\u5e76\u4e14\u662f\u5de6\u4e0a\u65b9\u548c\u6b63\u4e0a\u65b9\u3002\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u4ece\u53f3\u8fb9\u5f80\u5de6\u8fb9\u8fdb\u884c\u66f4\u65b0\u3002\u5e76\u4e14\u5f53j-cost[i]\u5c0f\u4e8e0\u7684\u65f6\u5019\uff0cdp[i][j]\u53ea\u80fd\u7b49\u4e8edp[i-1][j]\uff0c\u5c31\u4e0d\u7528\u8fdb\u884c\u8986\u76d6\u4e86</li> </ol> <p>Text Only<pre><code>//\u666e\u901adp  \npublic static int compute1() {\n        int[][] dp = new int[n + 1][t + 1];\n        for (int i = 1; i &lt;= n; i++) {\n            for (int j = 0; j &lt;= t; j++) {\n                // \u4e0d\u8981i\u53f7\u7269\u54c1\n                dp[i][j] = dp[i - 1][j];\n                if (j - cost[i] &gt;= 0) {\n                    // \u8981i\u53f7\u7269\u54c1\n                    dp[i][j] = Math.max(dp[i][j], dp[i - 1][j - cost[i]] + val[i]);\n                }\n            }\n        }\n        return dp[n][t];\n    }\n\n// \u7a7a\u95f4\u538b\u7f29\npublic static int compute() {\n    Arrays.fill(dp, 0, t + 1, 0);\n    for (int i = 1; i &lt;= n; i++) {\n        for (int j = t; j &gt;= cost[i]; j--) {\n            dp[j] = Math.max(dp[j], dp[j - cost[i]] + val[i]);\n        }\n    }\n    return dp[t];\n}\n</code></pre> 1. \u53d8\u5f62\uff1a    1. \u67d0\u516c\u53f8\u6e38\u620f\u5e73\u53f0\u7684\u590f\u5b63\u7279\u60e0\u5f00\u59cb\u4e86\uff0c\u4f60\u51b3\u5b9a\u5165\u624b\u4e00\u4e9b\u6e38\u620f\u3002\u73b0\u5728\u4f60\u4e00\u5171\u6709X\u5143\u7684\u9884\u7b97\uff0c\u8be5\u5e73\u53f0\u4e0a\u6240\u6709\u7684 n \u4e2a\u6e38\u620f\u5747\u6709\u6298\u6263\uff0c\u6807\u53f7\u4e3a i \u7684\u6e38\u620f\u7684\u539f\u4ef7 ai \u5143\uff0c\u73b0\u4ef7\u53ea\u8981 bi\u5143\uff08\u4e5f\u5c31\u662f\u8bf4\u8be5\u6e38\u620f\u53ef\u4ee5\u4f18\u60e0 ai\u2212bi \u5143\uff09\u5e76\u4e14\u4f60\u8d2d\u4e70\u8be5\u6e38\u620f\u80fd\u83b7\u5f97\u5feb\u4e50\u503c\u4e3a wi\u3002\u7531\u4e8e\u4f18\u60e0\u7684\u5b58\u5728\uff0c\u4f60\u53ef\u80fd\u505a\u51fa\u4e00\u4e9b\u51b2\u52a8\u6d88\u8d39\u5bfc\u81f4\u6700\u7ec8\u4e70\u6e38\u620f\u7684\u603b\u8d39\u7528\u8d85\u8fc7\u9884\u7b97\uff0c\u4f46\u53ea\u8981\u6ee1\u8db3\u83b7\u5f97\u7684\u603b\u4f18\u60e0\u91d1\u989d\u4e0d\u4f4e\u4e8e\u8d85\u8fc7\u9884\u7b97\u7684\u603b\u91d1\u989d\uff0c\u90a3\u5728\u5fc3\u7406\u4e0a\u5c31\u4e0d\u4f1a\u89c9\u5f97\u5403\u4e8f\u3002\u73b0\u5728\u4f60\u5e0c\u671b\u5728\u5fc3\u7406\u4e0a\u4e0d\u89c9\u5f97\u5403\u4e8f\u7684\u524d\u63d0\u4e0b\uff0c\u83b7\u5f97\u5c3d\u53ef\u80fd\u591a\u7684\u5feb\u4e50\u503c\u3002    2. \u5206\u6790\uff1a\u53ea\u8981\u603b\u4f18\u60e0&gt;\u8d85\u8fc7\u7684\u603b\u9884\u7b97\uff0c\u4e5f\u5c31\u662f,\u5176\u4e2dci=ai-bi\uff0cX\u4e3a\u603b\u9884\u7b97\u3002\u7ecf\u8fc7\u53d8\u5f62\uff0c\u53ef\u4ee5\u5206\u6790\u5f97\u51fa\u5c31\u53ef\u4ee5\u7ee7\u7eed\u83b7\u5f97\u5feb\u4e50\u503c\u3002\u6240\u4ee5\u53ea\u8981ci-bi&gt;0\u5c31\u4e00\u5b9a\u53ef\u4ee5\u4e70\u3002\u5bf9\u4e8eci-bi&lt;0\u7684\u7269\u54c1\uff0c\u6bcf\u4e2a\u53ef\u4ee5\u770b\u505a\u662fcost[i] = -(ci-bi)\u7684\u5546\u54c1\uff0c\u603b\u5171\u7684\u53ef\u82b1\u8d39\u7684\u94b1\u662f\u3002\u53ef\u4ee5\u8f6c\u6362\u4e3a0-1\u80cc\u5305\u95ee\u9898\u3002\u6216\u8005\u53ef\u4ee5\u770b\u505a\u6bcf\u6b21\u83b7\u5f97\u4e00\u4e2aWell&gt;0\u7684\u4e1c\u897f,\u5c31\u662f\u589e\u52a0\u4e86\u53ef\u7528\u7684\u4f59\u989d\u3002    3. \u5361\u6570\u636e\u91cf</p> <p>Text Only<pre><code>import java.util.*;\nimport java.io.*;\nclass Main{\n    public static int MAXN = 5001;\n    public static int MAXX = 60001;\n    public static int[] cost = new int[MAXN];\n    public static long[] val = new long[MAXN];\n    public static long[] dp = new long[MAXX];\n    public static int n,X,m;\n    public static void main(String[] args){\n\n        Scanner sc = new Scanner(System.in);\n        n = sc.nextInt();\n        X = sc.nextInt();\n        //[1~n];\n        long ans = 0;\n        long happy = 0;\n        m = 1;\n        for(int i=1,pre,cur; i&lt;=n; i++){\n            pre = sc.nextInt();\n            cur = sc.nextInt();\n            happy = sc.nextLong();\n            int well = pre-cur-cur;\n            if(well &gt;= 0){\n                ans += happy;\n                X += well;\n            }else{\n                cost[m] = -well;\n                val[m++] = happy;\n            }\n        }\n        ans += compute();\n        System.out.println(ans);\n\n    }\n    //[0,1\u80cc\u5305]\n    public static long compute() {\n        Arrays.fill(dp, 0, X + 1, 0);\n        for (int i = 1; i &lt;= m; i++) {\n            for (int j = X; j &gt;= cost[i]; j--) {\n                dp[j] = Math.max(dp[j], dp[j - cost[i]] + val[i]);\n            }\n        }\n        return dp[X];\n    }\n}\n</code></pre> 1. \u4f8b\u9898leetcode494\u76ee\u6807\u548c    1. \u7ed9\u4f60\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;nums&lt;/span&gt;&lt;/span&gt;</code> \u548c\u4e00\u4e2a\u6574\u6570 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;target&lt;/span&gt;&lt;/span&gt;</code> \u3002</p> <p>\u5411\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u6574\u6570\u524d\u6dfb\u52a0 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;'+'&lt;/span&gt;&lt;/span&gt;</code> \u6216 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;'-'&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u7136\u540e\u4e32\u8054\u8d77\u6240\u6709\u6574\u6570\uff0c\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a \u8868\u8fbe\u5f0f \uff1a</p> <ul> <li>\u4f8b\u5982\uff0c<code>&lt;span class=\"color_font\"&gt;&lt;span&gt;nums = [2, 1]&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u53ef\u4ee5\u5728 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;2&lt;/span&gt;&lt;/span&gt;</code> \u4e4b\u524d\u6dfb\u52a0 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;'+'&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u5728 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;</code> \u4e4b\u524d\u6dfb\u52a0 <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;'-'&lt;/span&gt;&lt;/span&gt;</code> \uff0c\u7136\u540e\u4e32\u8054\u8d77\u6765\u5f97\u5230\u8868\u8fbe\u5f0f <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;\"+2-1\"&lt;/span&gt;&lt;/span&gt;</code> \u3002</li> </ul> <p>\u8fd4\u56de\u53ef\u4ee5\u901a\u8fc7\u4e0a\u8ff0\u65b9\u6cd5\u6784\u9020\u7684\u3001\u8fd0\u7b97\u7ed3\u679c\u7b49\u4e8e <code>&lt;span class=\"color_font\"&gt;&lt;span&gt;target&lt;/span&gt;&lt;/span&gt;</code> \u7684\u4e0d\u540c \u8868\u8fbe\u5f0f \u7684\u6570\u76ee\u3002</p> <ol> <li>\u601d\u8def\uff1a</li> <li>\u8bb0\u5fc6\u5316\u641c\u7d22\uff1a<ol> <li>\u901a\u8fc7\u4f7f\u7528\u4e8c\u7ea7\u7f13\u5b58\u6765\u786e\u5b9ai,j\u53c2\u6570\u51b3\u5b9a\u7684\uff0c\u5e26\u8d1f\u6570\u7684\u7f13\u5b58\uff0c\u5b9e\u73b0\u662f\u4e24\u5c42map</li> </ol> </li> </ol> <p>Text Only<pre><code>class Solution {\n    public static int cnt;\n    public int findTargetSumWays(int[] nums, int target) {\n        //\u4f7f\u7528\u4e8c\u7ea7\u7f13\u5b58,\u53ef\u4ee5\u7f13\u5b58\u7684\u5185\u5bb9\u7531i\u548ccur\u5171\u540c\u51b3\u5b9a\n        HashMap&lt;Integer,HashMap&lt;Integer,Integer&gt;&gt; cache = new HashMap&lt;&gt;();\n        int ans = f1(nums,0,0,target,cache);\n        System.out.println(cnt);\n        return ans;\n    }\n    public int f1(int[] nums, int i ,int cur,int target,HashMap&lt;Integer, HashMap&lt;Integer, Integer&gt;&gt; cache){\n        int n = nums.length;\n        if(i == n){\n            if(cur == target){\n                return 1;\n            }else{\n                return 0;\n            }\n        }\n        if(cache.containsKey(i) &amp;&amp; cache.get(i).containsKey(cur)){\n            return cache.get(i).get(cur);\n        }\n        int a=  f1(nums,i+1,cur+nums[i],target,cache);\n        int b = f1(nums,i+1,cur-nums[i],target,cache);\n        int ans = a+b;\n        cache.putIfAbsent(i,new HashMap&lt;&gt;());\n        cache.get(i).put(cur,ans);\n        return ans;\n    }\n}\n</code></pre> 1. \u666e\u901a\u52a8\u6001\u89c4\u5212\uff1a</p> <ol> <li>\u601d\u8def\uff1a\u7531\u4e8ei,j\u4e2dj\u6709\u8d1f\u6570\uff0c\u6240\u4ee5\u8003\u8651\u5c06j\u4f4d\u7f6e\u4e0b\u6807\u8fdb\u884c\u5e73\u79fb\uff0c\u8865\u6210\u6b63\u6570</li> <li>01\u80cc\u5305dp</li> <li>\u601d\u8def\uff1a</li> <li>nums\u4e2d\u5982\u679c\u6709\u8d1f\u6570\uff0c\u6bd4\u5982\uff1a{-1,-2,-3}\uff0c\u5176\u7ed3\u679c\u548c{1,2,3}\u662f\u5b8c\u5168\u4e00\u6837\u7684\u3002</li> <li>\u5982\u679ctarget\u5927\u4e8e\u6240\u6709\u6570\u7d2f\u52a0\u548csum\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de0</li> <li>\u4e0d\u7ba1\u7b26\u53f7\uff0c\u9898\u76ee\u4e2d\u7684sum\u7684\u5947\u5076\u6027\u4e0d\u4f1a\u6539\u53d8\uff0c\u5982\u679c\u5947\u5076\u6027\u4e0d\u540c\uff0c\u76f4\u63a5\u8fd4\u56de0</li> <li>\u8f6c\u6362\u4e3a0-1\u80cc\u5305\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u6c42\u975e\u8d1f\u6570\u7ec4\u4e2d\u6709\u591a\u5c11\u4e2a\u7d2f\u52a0\u548c\u4e3at\u7684\u5b50\u5e8f\u5217</li> </ol> Text Only<pre><code>class Solution {\n    public int findTargetSumWays(int[] nums, int target) {\n        int sum = 0;\n        for (int i : nums) {\n            sum += i;\n        }\n        if(target &gt; sum || (target&amp;1) != (sum&amp;1)){\n            return 0;\n        }\n        return subSum(nums,(target+sum)/2);\n    }\n    public int subSum(int[] nums, int t){\n        if(t&lt;0) return 0;\n        //dp[i][j]\uff1a\u524di\u4e2a\u6570\u5b57\u7684\u5e8f\u5217\u7684\uff0csum=j\u7684\u79cd\u7c7b\n        int n = nums.length;\n        int[][] dp = new int[n+1][t+1];\n        //\u521d\u59cb\u5316\n        dp[0][0] = 1;\n        //\u9012\u63a8\n        for(int i=1; i&lt;=n;i++){\n            for(int j=0; j&lt;=t; j++){\n                dp[i][j] = dp[i-1][j];\n                if(j-nums[i-1] &gt;= 0){\n                    dp[i][j] += dp[i-1][j-nums[i-1]];\n                }\n            }\n        }\n        return dp[n][t];\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_97","title":"\u5206\u7ec4\u80cc\u5305","text":"<ol> <li>\u548c01\u80cc\u5305\u533a\u522b\uff1a\u5546\u54c1\u8fdb\u884c\u5206\u7ec4\uff0c\u6bcf\u7ec4\u6700\u591a\u53ea\u80fd\u53d6\u4e00\u4ef6\u5546\u54c1(01)</li> <li>\u6a21\u7248\uff1a</li> <li>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a<ol> <li>dp[i][j]\uff1a\u4ee3\u8868\u7684\u662f[1,i]\u7ec4\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u7ec4\u53ea\u80fd\u9009\u4e00\u4ef6\u5546\u54c1\uff0c\u6d88\u8017\u6700\u591a\u4e3aj\u7684\u60c5\u51b5\u4e0b\u7684\u6700\u5927\u4ef7\u503c\u3002</li> <li>\u4e0d\u8981i\u7ec4\u5546\u54c1\uff1adp[i-1][j]</li> <li>\u8981i\u7ec4\u5546\u54c1\uff1a\u5728i\u7ec4\u5185\uff0c\u5c1d\u8bd5\u6240\u6709\u53ef\u80fd\u6027</li> <li>\u6700\u7ec8dp[i][j]\u662fII\u548cIII\u7684max\u3002</li> </ol> </li> </ol> <p>Text Only<pre><code>public class Code01_PartitionedKnapsack {\n\n    public static int MAXN = 1001;\n\n    public static int MAXM = 1001;\n\n    // arr[i][0] i\u53f7\u7269\u54c1\u7684\u4f53\u79ef\n    // arr[i][1] i\u53f7\u7269\u54c1\u7684\u4ef7\u503c\n    // arr[i][2] i\u53f7\u7269\u54c1\u7684\u7ec4\u53f7\n    public static int[][] arr = new int[MAXN][3];\n\n    public static int[] dp = new int[MAXM];\n\n    public static int m, n;\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StreamTokenizer in = new StreamTokenizer(br);\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n        while (in.nextToken() != StreamTokenizer.TT_EOF) {\n            m = (int) in.nval;\n            in.nextToken();\n            n = (int) in.nval;\n            for (int i = 1; i &lt;= n; i++) {\n                in.nextToken();\n                arr[i][0] = (int) in.nval;\n                in.nextToken();\n                arr[i][1] = (int) in.nval;\n                in.nextToken();\n                arr[i][2] = (int) in.nval;\n            }\n            Arrays.sort(arr, 1, n + 1, (a, b) -&gt; a[2] - b[2]);\n            out.println(compute1());\n        }\n        out.flush();\n        out.close();\n        br.close();\n    }\n\n    // \u4e25\u683c\u4f4d\u7f6e\u4f9d\u8d56\u7684\u52a8\u6001\u89c4\u5212\n    public static int compute1() {\n        //\u8ba1\u7b97\u7ec4\u7684\u6570\u91cf\n        int teams = 1;\n        for (int i = 2; i &lt;= n; i++) {\n            if (arr[i - 1][2] != arr[i][2]) {\n                teams++;\n            }\n        }\n        // \u7ec4\u7684\u7f16\u53f71~teams\n        // dp[i][j] : 1~i\u662f\u7ec4\u7684\u8303\u56f4\uff0c\u6bcf\u4e2a\u7ec4\u7684\u7269\u54c1\u6311\u4e00\u4ef6\uff0c\u5bb9\u91cf\u4e0d\u8d85\u8fc7j\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u6536\u76ca\n        int[][] dp = new int[teams + 1][m + 1];\n        // dp[0][....] = 0\n        for (int start = 1, end = 2, i = 1; start &lt;= n; i++) {\n            while (end &lt;= n &amp;&amp; arr[end][2] == arr[start][2]) {\n                end++;\n            }\n            // start ... end-1 -&gt; i\u7ec4\n            for (int j = 0; j &lt;= m; j++) {\n                // arr[start...end-1]\u662f\u5f53\u524d\u7ec4\uff0c\u7ec4\u53f7\u4e00\u6837\n                // \u5176\u4e2d\u7684\u6bcf\u4e00\u4ef6\u5546\u54c1\u679a\u4e3e\u4e00\u904d\n                dp[i][j] = dp[i - 1][j];\n                for (int k = start; k &lt; end; k++) {\n                    // k\u662f\u7ec4\u5185\u7684\u4e00\u4e2a\u5546\u54c1\u7f16\u53f7\n                    if (j - arr[k][0] &gt;= 0) {\n                        dp[i][j] = Math.max(dp[i][j], dp[i - 1][j - arr[k][0]] + arr[k][1]);\n                    }\n                }\n            }\n            // start\u53bb\u5f80\u4e0b\u4e00\u7ec4\u7684\u7b2c\u4e00\u4e2a\u7269\u54c1\n            // \u7ee7\u7eed\u5904\u7406\u5269\u4e0b\u7684\u7ec4\n            start = end++;\n        }\n        return dp[teams][m];\n    }\n}\n</code></pre> 1. \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5047\u8bbe\u7269\u54c1\u603b\u4e2a\u6570\u662fn,\u80cc\u5305\u5bb9\u91cf\u662fm,\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(m*k1 + m*k2 +... m*kn),\u5176\u4e2dki\u662f\u7b2ci\u7ec4\u7684\u4e2a\u6570\u3002k1+k2+..+kn = n;\u6240\u4ee5\u662fM(m*n);</p>"},{"location":"LANG/DS-leetcode/#_98","title":"\u5b8c\u5168\u80cc\u5305","text":"<ol> <li>\u548c01\u80cc\u5305\u7684\u533a\u522b\uff1a\u6bcf\u79cd\u5546\u54c1\u53ef\u4ee5\u9009\u62e9\u65e0\u9650\u6b21\u3002</li> <li>\u6a21\u677f\uff1a</li> <li>\u8fd8\u662f[1,n]\u53f7\u5546\u54c1</li> <li>dp[i][j]\uff1a[1,i]\u5546\u54c1\uff0c\u80cc\u5305\u5bb9\u91cf\u662fj\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd4\u56de\u7684\u6700\u5927\u4ef7\u503c<ol> <li>\u8fd9\u6b21\u4e0d\u8981i\u5546\u54c1\uff1adp[i][j] = dp[i-1][j]</li> <li>\u8fd9\u6b21\u9009\u62e9i\u5546\u54c1\uff1adp[i][j] = dp[i][j-cost[i]]+val[i]\uff1b\u6ce8\u610f\u540e\u9762\u8fd8\u662fi</li> <li>\u4e5f\u5c31\u662f\u8fd8\u662f\u5728i\u5546\u54c1\u5904\u9009\u62e9\uff0c\u4f46\u662f\u5bb9\u91cf\u51cf\u5c0f\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u591a\u6b21\u9009\u62e9\u3002</li> </ol> </li> </ol> Text Only<pre><code>public class Code03_UnboundedKnapsack {\n\n    public static int MAXM = 10001;\n\n    public static int MAXT = 10000001;\n\n    public static int[] cost = new int[MAXM];\n\n    public static int[] val = new int[MAXM];\n\n    public static long[] dp = new long[MAXT];\n\n    public static int t, m;\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StreamTokenizer in = new StreamTokenizer(br);\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n        while (in.nextToken() != StreamTokenizer.TT_EOF) {\n            t = (int) in.nval;\n            in.nextToken();\n            m = (int) in.nval;\n            for (int i = 1; i &lt;= m; i++) {\n                in.nextToken();\n                cost[i] = (int) in.nval;\n                in.nextToken();\n                val[i] = (int) in.nval;\n            }\n            out.println(compute2());\n        }\n        out.flush();\n        out.close();\n        br.close();\n    }\n\n    // \u4e25\u683c\u4f4d\u7f6e\u4f9d\u8d56\u7684\u52a8\u6001\u89c4\u5212\n    // \u4f1a\u7a7a\u95f4\u4e0d\u591f\uff0c\u5bfc\u81f4\u65e0\u6cd5\u901a\u8fc7\u5168\u90e8\u6d4b\u8bd5\u7528\u4f8b\n    public static long compute1() {\n        // dp[0][.....] = 0\n        int[][] dp = new int[m + 1][t + 1];\n        for (int i = 1; i &lt;= m; i++) {\n            for (int j = 0; j &lt;= t; j++) {\n                dp[i][j] = dp[i - 1][j];\n                if (j - cost[i] &gt;= 0) {\n                    dp[i][j] = Math.max(dp[i][j], dp[i][j - cost[i]] + val[i]);\n                }\n            }\n        }\n        return dp[m][t];\n    }\n</code></pre>"},{"location":"LANG/DS-leetcode/#dp","title":"\u6570\u4f4dDP","text":"<p>\u6570\u4f4dDP\u7684\u5b9e\u73b0\u7edf\u4e00\u91c7\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u3002</p> <p>\u4f8b\u9898</p> <ol> <li>leetcode 357\u7edf\u8ba1\u5404\u4f4d\u6570\u5b57\u90fd\u4e0d\u540c\u7684\u6570</li> <li>\u601d\u8def\uff1a\u4f7f\u7528\u9012\u5f52\u89e3\u51b3\u3002</li> </ol> <p>Text Only<pre><code>class Solution {\n    public int countNumbersWithUniqueDigits(int n) {\n        if(n == 0){\n            return 1;\n        }\n        int ans = 10;\n        for(int i=2;i&lt;=n;i++){\n            ans += dfs(i,1,9);\n        }\n        return ans;\n    }\n    public int dfs(int n,int cnt,int pre){\n        int cur = cnt == 1 || cnt == 2? 9 : pre-1;\n        if(cnt == n) return cur;\n        return cur*dfs(n,cnt+1,cur);\n    }\n}\n</code></pre> 1. leetcode 902\u6700\u5927\u4e3a N \u7684\u6570\u5b57\u7ec4\u5408    1. \u601d\u8def\uff1a       1. \u5bf9\u4e8e\u6570\u5b57\u7684\u9009\u62e9\uff0c\u6709\u4e00\u4e9b\u9650\u5236\u3002       2. \u4e24\u79cd\u60c5\u51b5\uff1a          1. \u4f4d\u6570\u5c11\uff0c\u5219\u6bcf\u4e00\u4f4d\u53ef\u4ee5\u968f\u4fbf\u9009\u3002          2. \u4f4d\u6570\u76f8\u540c\uff0c             1. \u5982\u679c\u524d\u4e00\u4f4d\u6bd4\u76ee\u6807\u5c0f\uff0c\u5219\u53ef\u4ee5\u968f\u4fbf\u9009             2. \u5982\u679c\u6570\u5b57\u524d\u4e00\u4f4d\u548c\u76ee\u6807\u4e00\u81f4\uff0c\u5219\u4e0b\u4e00\u4f4d\u53ea\u80fd&lt;=</p> <p>Text Only<pre><code>//\u8bb0\u5fc6\u5316\u641c\u7d22\nclass Solution {\n    public static int MAXN = 16;\n    public static int[][][] cache = new int[MAXN][2][2];\n    public int atMostNGivenDigitSet(String[] digits, int n) {\n        build();\n        int temp = n / 10;\n        int len = 1;\n        int offset = 1;\n        while (temp &gt; 0) {\n            temp = temp / 10;\n            len++;\n            offset = offset * 10;\n        }\n        System.out.println(len);\n        int m = digits.length;\n        int[] nums = new int[m];\n        for (int i = 0; i &lt; m; i++) {\n            nums[i] = Integer.parseInt(digits[i]);\n        }\n        return dfs(nums, n, offset, len, 1, 1,cache);\n    }\n\n    public static void build(){\n        for(int i=0; i&lt;MAXN;i++){\n            for(int j=0; j&lt;2;j++){\n                Arrays.fill(cache[i][j],Integer.MIN_VALUE);\n            }\n        }\n    }\n\n    public int dfs(int[] nums, int n, int offset, int len, int quit, int same,int[][][] cache) {\n        if (len == 0) {\n            return quit==1 ? 0 : 1;\n        }\n\n        int ans = 0;\n        if(cache[len][quit][same] != Integer.MIN_VALUE) return cache[len][quit][same];\n        int cur = (n / offset) % 10;\n        // 1.\u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u6216\u8005\u524d\u9762\u4e5f\u820d\u5f03\u4e86\uff0c\u820d\u5f03\u5f53\u524d\u4f4d\n        if (quit==1)\n            ans += dfs(nums, n, offset / 10, len - 1, 1, 0,cache);\n        // 2.\u524d\u9762\u7684\u9009\u62e9\n        if (same==1) {\n            for (int i : nums) {\n                if (i &lt; cur) {\n                    ans += dfs(nums, n, offset / 10, len - 1, 0, 0,cache);\n                } else if (i == cur){\n                    ans += dfs(nums, n, offset / 10, len - 1, 0, 1,cache);\n                } else {\n                    break;\n                }\n            }\n        } else {\n            ans += nums.length * dfs(nums, n, offset / 10, len - 1, 0, 0,cache);\n        }\n        cache[len][quit][same] = ans;\n        return ans;\n    }\n}\n\n//\u66f4\u7cbe\u7b80\u6a21\u677f\uff0c\u6302\u7f13\u5b58\u90e8\u5206\u5b8c\u5168\u4e00\u81f4\nclass Solution {\n    public int atMostNGivenDigitSet(String[] digits, int n) {\n        char[] c = Integer.toString(n).toCharArray();\n        int m = digits.length;\n        int[] num = new int[m];\n        for(int i=0; i&lt;m;i++){\n            num[i] = Integer.parseInt(digits[i]);\n        }\n        return dfs(num, c, 0, true, true);\n    }\n    public int dfs(int[] num, char[] c, int i, boolean limit,boolean quit){\n        if(i == c.length){\n            return quit? 0 : 1;\n        }\n        int ans = 0;\n        int up = limit ? c[i]-'0' : 9;\n        if(quit) ans += dfs(num, c, i+1, false, true);\n        for(int item : num){\n            if(item &gt; up) break;\n            ans += dfs(num, c, i+1, limit &amp;&amp; item == up, false);\n        }\n        return ans;\n    }\n}\n</code></pre> 1. leetcode 233\u6570\u5b57\u4e00\u7684\u4e2a\u6570    1. \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 <code>&lt;span&gt;n&lt;/span&gt;</code>\uff0c\u8ba1\u7b97\u6240\u6709\u5c0f\u4e8e\u7b49\u4e8e <code>&lt;span&gt;n&lt;/span&gt;</code> \u7684\u975e\u8d1f\u6574\u6570\u4e2d\u6570\u5b57 <code>&lt;span&gt;1&lt;/span&gt;</code> \u51fa\u73b0\u7684\u4e2a\u6570\u3002</p> Text Only<pre><code>class Solution {\n    public static int MAXN = 16;\n    public static int[][][] cache = new int[MAXN][MAXN][2];\n    public int countDigitOne(int n) {\n        build();\n        char[] c = Integer.toString(n).toCharArray();\n        return dfs(c, 0, 1, 0,cache);\n    }\n    public static void build(){\n        for(int i=0; i&lt;cache.length;i++){\n            for(int j=0; j&lt;cache[i].length;j++){\n               Arrays.fill(cache[i][j],Integer.MIN_VALUE); \n            }\n        }\n    }\n    public int dfs(char[] c, int i,int limit, int acc,int[][][] cache){\n        if( i == c.length) return acc;\n        if(cache[i][acc][limit] != Integer.MIN_VALUE) return cache[i][acc][limit];\n        int up = limit == 1? c[i]-'0' : 9;\n        int ans = 0;\n        for(int k=0; k&lt;=up; k++){\n            ans += dfs(c, i+1, ((limit==1) &amp;&amp; (k==up))?1 : 0, acc+(k==1? 1 : 0),cache);\n        }\n        cache[i][acc][limit] = ans;\n        return ans;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#dp_1","title":"\u6811\u5f62DP","text":"<p>\u6811\u662f\u4e00\u4e2a\u5934\u8282\u70b9\u6ca1\u6709\u7236\u8282\u70b9\uff0c\u5176\u4f59\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u7236\u8282\u70b9\u7684\u6709\u5411\u65e0\u73af\u56fe</p> <p>\u5728\u6811\u4e0a\u505a\u52a8\u6001\u89c4\u5212\uff0c\u62c6\u89e3\u7684\u5b50\u95ee\u9898\u6bd4\u4e00\u822c\u7684DP\u95ee\u9898\u66f4\u6e05\u6670\uff0c\u7edd\u5927\u90e8\u5206\u90fd\u662f\u7236\u8282\u70b9\u4f9d\u8d56\u5b50\u8282\u70b9</p> <p>\u6811\u5f62DP\u5957\u8def\uff1a</p> <ol> <li>\u5206\u6790\u7236\u6811\u5f97\u5230\u7b54\u6848\u9700\u8981\u5b50\u6811\u7684\u4ec0\u4e48\u4fe1\u606f</li> <li>\u628a\u5b50\u6811\u4fe1\u606f\u7684\u5168\u96c6\u5b9a\u4e49\u4e3a\u9012\u5f52\u8fd4\u56de\u503c</li> <li>\u901a\u8fc7\u9012\u5f52\u8ba9\u5b50\u6811\u8fd4\u56de\u5168\u96c6\u4fe1\u606f</li> <li>\u6574\u5408\u5b50\u6811\u7684\u5168\u96c6\u4fe1\u606f\uff0c\u5f97\u5230\u7236\u6811\u7684\u5168\u96c6\u4fe1\u606f\u5e76\u8fd4\u56de</li> <li> <p>\u4f8b\u9898\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u627e\u5230\u5176\u4e2d\u6700\u5927\u7684\u4e8c\u53c9\u641c\u7d22\u6811\uff08BST\uff09\u5b50\u6811\uff0c\u5e76\u8fd4\u56de\u8be5\u5b50\u6811\u7684\u5927\u5c0f</p> </li> <li> <p>\u601d\u8def\uff1a\u4ee5x\u4e3a\u6839\u8282\u70b9\u7684\u6811</p> <ol> <li>\u5b50\u6811\u7684\u7c7b\u578b\uff1a<ol> <li>\u4e0d\u5305\u542bx\u8282\u70b9\uff0c\u5219\u7ed3\u679c\u662fmax(\u5de6\u6700\u5927BST\uff0c\u53f3\u6700\u5927BST)\u3002\u5219\u9700\u8981\u5b50\u6811\u7684\u6700\u5927\u4e8c\u53c9\u641c\u7d22\u5b50\u6811\u7684\u4fe1\u606f</li> <li>\u5305\u542bx\u8282\u70b9\uff0c\u8fd9\u4e2a\u9700\u8981\u5224\u65ad\u5e26x\u8282\u70b9\u662f\u5426\u662fBST\u3002\u5982\u679c\u5de6\u5b50\u6811\uff0c\u53f3\u5b50\u6811\u90fd\u662fBST\uff0c\u5219\u9700\u8981\u5b50\u6811\u63d0\u4f9bmin,max\u4fe1\u606f\u6765\u548cx\u8282\u70b9\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5224\u65ad\u6210\u7acb\uff0c\u5219\u7ed3\u679c\u662fmaxl + maxr + 1</li> </ol> </li> <li>\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u662f\u5c06x\u8bbe\u7f6e\u4e3aroot\uff0c\u4fbf\u53ef\u4ee5\u5f97\u5230\u6574\u4f53\u7684\u6700\u5927BST</li> </ol> </li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u4fe1\u606f\u7684\u6574\u5408\u662fO(1)\u7684\u3002\u6574\u68f5\u6811\u6bcf\u4e2a\u8282\u70b9\u904d\u5386\u4e00\u904d\uff0c\u6574\u5408\u4e00\u6b21\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n)</li> </ol> <p>Text Only<pre><code>    public static int largestBSTSubtree(TreeNode root) {\n        return f(root).maxBstSize;\n    }\n    //\u4fe1\u606f\u7c7b\n    public static class Info {\n        //\u6574\u4f53\u8bbe\u7f6e\u4e3along\u7c7b\u578b\uff0c\u540c\u6837\u662f\u9632\u6b62\u9012\u5f52\u7ec8\u6b62\u6761\u4ef6\u7684\u8bbe\u7f6e\u5e72\u6270\u5224\u65ad\u3002\u8282\u70b9\u503c\u7684\u8303\u56f4\u662fint\u7c7b\u578b\u7684\u503c\u57df\u8303\u56f4\n        public long max;\n        public long min;\n        public boolean isBst;\n        public int maxBstSize;\n\n        public Info(long a, long b, boolean c, int d) {\n            max = a;\n            min = b;\n            isBst = c;\n            //\u4ee5x\u8282\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u6811\u4e2d\u5305\u542b\u7684\u6700\u5927BST\u5b50\u6811      \n            maxBstSize = d;\n        }\n    }\n    public static Info f(TreeNode x) {\n        // \u9012\u5f52\u7ec8\u6b62\u6761\u4ef6\uff1ax==null\u7684\u65f6\u5019\uff0c\u9700\u8981\u7ec8\u6b62\u9012\u5f52\uff0c\u5e76\u4e14\u8fd4\u56de\u4e0d\u5e72\u6270\u4e0a\u9762\u7684\u5224\u65ad\u7684\u4fe1\u606f\n        if (x == null) {\n            return new Info(Long.MIN_VALUE, Long.MAX_VALUE, true, 0);\n        }\n        Info infol = f(x.left);\n        Info infor = f(x.right);\n        // \u5de6 4\u4fe1\u606f\n        // \u53f3 4\u4fe1\u606f\n        // x \u6574\u5408\u51fa4\u4fe1\u606f\u8fd4\u56de\n        long max = Math.max(x.val, Math.max(infol.max, infor.max));\n        long min = Math.min(x.val, Math.min(infol.min, infor.min));\n        boolean isBst = infol.isBst &amp;&amp; infor.isBst &amp;&amp; infol.max &lt; x.val &amp;&amp; x.val &lt; infor.min;\n        int maxBSTSize;\n        if (isBst) {\n            maxBSTSize = infol.maxBstSize + infor.maxBstSize + 1;\n        } else {\n            maxBSTSize = Math.max(infol.maxBstSize, infor.maxBstSize);\n        }\n        return new Info(max, min, isBst, maxBSTSize);\n    }\n</code></pre> 1. \u4e8c\u53c9\u641c\u7d22\u5b50\u6811\u7684\u6700\u5927\u952e\u503c\u548c    1. \u8fd9\u6b21\u662f\u5bfb\u627e\u6811\u4e2d\u5177\u6709\u6700\u5927\u7d2f\u52a0\u548c\u7684\u4e8c\u53c9\u641c\u7d22\u5b50\u6811       1. \u601d\u8def\uff1a\u4ee5x\u4e3a\u6839\u7684\u6811          1. \u5982\u679c\u4e0d\u5305\u542bx\uff0c\u5219\u662fmax(\u5de6ans,\u53f3ans)\u3002\u9700\u8981\u5b50\u6811\u7684maxBSTSum          2. \u5982\u679c\u5305\u542bx\uff0c\u5219\u662f\u5de6\u53f3\u4fa7\u5fc5\u987b\u8981\u662fBST\uff0c\u5219\u7ed3\u679c\u662fmax(\u5de6\uff0c\u53f3\uff0c\u6574\u4f53) \u9700\u8981\u5b50\u6811\u7684iSBST\uff0cmin\uff0cmax\uff0c\u5b50\u6811\u6574\u4f53\u7684sum</p> <p>Text Only<pre><code> case class info(max:Int, min:Int, sum:Int,maxBSTSum:Int,isBST:Boolean)\n  def maxSumBST(root: TreeNode): Int = {\n    dfs(root).maxBSTSum\n  }\n  private def dfs(x: TreeNode):info = {\n    if(x eq null) info(Int.MinValue,Int.MaxValue,0,0,true)\n    val infol = dfs(x.left)\n    val infor = dfs(x.right)\n    val max =x.value.max(infol.max).max(infor.max)\n    val min = x.value.min(infol.min).min(infor.min)\n    val isBST = infol.isBST &amp;&amp; infor.isBST &amp;&amp; x.value &gt; infol.max &amp;&amp; x.value &lt; infor.min\n    val sum = x.value + infol.sum + infor.sum\n    val maxSum = if(isBST) sum.max(infol.maxBSTSum).max(infor.maxBSTSum) else infol.maxBSTSum.max(infor.maxBSTSum)\n    info(max,min,sum,maxSum,isBST)\n  }\n</code></pre> 1. \u4e8c\u53c9\u6811\u7684\u76f4\u5f84    1. \uff01\u8d70\u7684\u8fb9\u4e0d\u80fd\u91cd\u590d    2. \u601d\u8def\uff1a\u4ee5x\u4e3a\u6839\u7684\u6811       1. \u4e0d\u8981x\uff1a\u5219\u662fmax(\u5de6ans,\u53f3ans)\u3002\u9700\u8981\u5b50\u6811\u7684\u6700\u5927\u76f4\u5f84\u4fe1\u606f       2. \u8981x\uff1a\u5219\u662fx\u7684\u5de6\u5b50\u6811\u9ad8\u5ea6 + \u53f3\u5b50\u6811\u9ad8\u5ea6 (\u6811\u7684\u9ad8\u5ea6\u662f\u7528\u8282\u70b9\u6570\u91cf\u6765\u8ba1\u7b97\u7684\uff0cn\u4e2a\u8282\u70b9n-1\u6761\u8fb9\u3002\u800c\u901a\u8fc7\u56fe\u5f62\u753b\u51fa\u6765\u7684\u8def\u5f84\u957f\u5ea6\u662f2*(n-1) + 2*1),\u4e5f\u5c31\u662f\u5de6\u53f3\u5b50\u6811\u7684\u8282\u70b9\u5230\u6839\u8282\u70b9\u8fd8\u5404\u52a0\u4e86\u4e00\u6761\u8fb9\uff0c\u6240\u4ee5\u6700\u7ec8\u7ed3\u679c\u662f2n</p> <p>Text Only<pre><code>object Solution {\n  case class info(diameter:Int,height:Int)\n  def diameterOfBinaryTree(root: TreeNode): Int = {\n    dfs(root).diameter\n  }\n  private def dfs(x:TreeNode):info = {\n    if(x eq null) return info(0,0)\n    val infol = dfs(x.left)\n    val infor = dfs(x.right)\n    val withX = infol.height+infor.height\n    val outX = infol.diameter.max(infor.diameter)\n    val height = infol.height.max(infor.height) + 1\n    return info(withX.max(outX),height)\n  }\n}\n</code></pre> 1. leetcode 979\u5728\u4e8c\u53c9\u6811\u4e0a\u5206\u914d\u786c\u5e01    1. \u601d\u8def\uff1a\u4ee5x\u4e3a\u6839\u7ed3\u70b9\u7684\u6574\u68f5\u6811\u7684\u8c03\u6574\u6b21\u6570       1. \u7b2c\u4e00\u90e8\u5206\uff1a\u5de6\u6811\u7684\u8c03\u6574\u6b21\u6570 + \u53f3\u6811\u8c03\u6574\u6b21\u6570       2. \u7b2c\u4e8c\u90e8\u5206\uff1a\u5de6\u53f3\u5b50\u6811\u8c03\u6574\u5b8c\u4e4b\u540e\uff0c\u5fc5\u7136\u4f1a\u6709\u4e00\u4fa7\u591a\u4f59\u786c\u5e01\uff0c\u4e00\u6b21\u5c11\u786c\u5e01\u3002\u5219\u9700\u8981\u901a\u8fc7\u7236\u8282\u70b9\u8fdb\u884c\u4e2d\u8f6c\uff0c\u8c03\u6574\u6b21\u6570\u662f(\u5de6\u8282\u70b9-\u5de6\u786c\u5e01\u6570\u91cf)\u7edd\u5bf9\u503c + (\u53f3\u8282\u70b9 - \u53f3\u786c\u5e01\u6570\u91cf)\u7edd\u5bf9\u503c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u90e8\u5206\u53ef\u80fd\u662f\u6839\u8282\u70b9\u5f80\u5916\u9001\uff0c\u4e5f\u53ef\u80fd\u662f\u5de6\u4fa7\u9001\u5f80\u53f3\u4fa7\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f46\u662f\u603b\u6b21\u6570\u90fd\u662f\u4e0a\u8ff0\u7684\u8ba1\u7b97\u3002       3. \u9700\u8981\u7684\u4fe1\u606f\uff1a\u5b50\u6811\u7684\u8c03\u6574\u6b21\u6570\uff0c\u5b50\u6811\u7684\u786c\u5e01\u6570\u91cf\uff0c\u5b50\u6811\u7684\u8282\u70b9\u6570\u91cf</p> <p></p> Text Only<pre><code>object Solution {\n  case class info(node:Int,coin:Int,move:Int)\n  def distributeCoins(root: TreeNode): Int = {\n    dfs(root).move\n  }\n  private def dfs(x:TreeNode):info = {\n    if(x eq null) return info(0,0,0)\n    val infol = dfs(x.left)\n    val infor = dfs(x.right)\n    val coin = x.value + infol.coin + infor.coin\n    val node = infol.node + infor.node + 1\n    val move = (infol.node-infol.coin).abs + (infor.node-infor.coin).abs + infol.move + infor.move\n    return info(node,coin,move)\n  }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_99","title":"\u8d2a\u5fc3","text":"<ol> <li>\u57fa\u672c\u601d\u60f3\uff1a\u6bcf\u4e00\u6b65\u90fd\u662f\u5c40\u90e8\u6700\u4f18\uff0c\u800c\u6700\u540e\u5f97\u5230\u7684\u53ef\u80fd\u662f\u5168\u5c40\u6700\u4f18</li> <li>leetcode179 \u6700\u5927\u6570</li> <li>\u57fa\u672c\u6280\u5de7\uff1a\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u3002</li> <li>\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\u7684\u65b9\u6cd5\uff1a\u5219\u57fa\u672c\u89c4\u5219\u662fArrays.sort(str,(a,b)-&gt;(b+a).compareTo(a+b))\uff0c\u8fd9\u6837\u6392\u5e8f\u4e0b\u6765\u662f\u5b57\u5178\u5e8f\u5927\u7684\u5728\u524d\u9762\u3002</li> <li>\u8d2a\u5fc3\uff1a\u6392\u5e8f\u5b8c\u4e4b\u540e\u662f\u5355\u8bcd\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u8c01\u5927\u8c01\u5728\u524d\u9762\u3002\u7136\u540e\u5c06\u5355\u8bcd\u4f9d\u6b21\u62fc\u63a5\u5c31\u884c\u3002</li> </ol> Text Only<pre><code>class Solution {\n    public String largestNumber(int[] nums) {\n        int n = nums.length;\n        String[] str = new String[n];\n        for(int i=0; i&lt;n; i++){\n            str[i] = String.valueOf(nums[i]);\n        }\n        Arrays.sort(str,(a,b)-&gt;(b+a).compareTo(a+b));\n        if(str[0].equals(\"0\")){\n            return \"0\";\n        } \n        StringBuilder ans = new StringBuilder();\n        for(String num : str){\n            ans.append(num);\n        }\n        return ans.toString();\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#_100","title":"\u6570\u636e\u7ed3\u6784\u8bbe\u8ba1","text":""},{"location":"LANG/DS-leetcode/#setall","title":"setAll\u529f\u80fd\u7684\u54c8\u5e0c\u8868","text":"<p>\u54c8\u5e0c\u8868\u5e38\u89c1\u7684\u4e09\u4e2a\u64cd\u4f5c\u65f6put\u3001get\u548ccontainsKey\uff0c\u800c\u4e14\u8fd9\u4e09\u4e2a\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\u3002\u73b0\u5728\u60f3\u52a0\u4e00\u4e2asetAll\u529f\u80fd\uff0c\u5c31\u662f\u628a\u6240\u6709\u8bb0\u5f55value\u90fd\u8bbe\u6210\u7edf\u4e00\u7684\u503c\u3002\u8bf7\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u8fd9\u79cd\u6709setAll\u529f\u80fd\u7684\u54c8\u5e0c\u8868\uff0c\u5e76\u4e14put\u3001get\u3001containsKey\u548csetAll\u56db\u4e2a\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u4e3aO(1)\u3002</p> <ol> <li>\u6838\u5fc3\u601d\u8def\uff1a\u4f7f\u7528\u65f6\u95f4\u6233\u3002\u5728scala\u5e76\u53d1\u5bb9\u5668\u8bbe\u8ba1\u4e5f\u7528\u5230\u4e86\u65f6\u95f4\u6233\u6280\u672f\u3002</li> <li>\u539f\u7406\uff1a</li> <li>\u6bcf\u6b21\u64cd\u4f5c\uff0c\u8bb0\u5f55\u6570\u636e\u4fee\u6539\uff0c\u4ee5\u53ca\u76f8\u5e94\u7684\u81ea\u589e\u65f6\u95f4\u6233\u3002</li> <li>\u5f53\u4f7f\u7528\u5230setAll\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u4fee\u6539setAllValue\u5b57\u6bb5\u5c31\u53ef\u4ee5\uff0c\u540c\u6837\u81ea\u589e\u65f6\u95f4\u6233\u3002</li> <li>\u5982\u679c\u8981\u8fdb\u884cget\u65b9\u6cd5\uff0c\u53d6\u6700\u65b0\u7684\u65f6\u95f4\u6233\u4e3a\u6700\u65b0\u6709\u6548\u7684\u6570\u636e\u3002</li> </ol> Text Only<pre><code>import java.util.*;\nimport java.io.*;\n\nclass Main {\n    public static HashMap&lt;Integer,int[]&gt; map = new HashMap&lt;&gt;();\n    public static int timeStamp;\n    public static int setAllValue;\n    public static int setAllTime;\n    public static void main(String[] args) throws IOException {\n\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        StreamTokenizer in = new StreamTokenizer(br);\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n        int N = 0;\n        build();\n        while (in.nextToken() != StreamTokenizer.TT_EOF) {\n            N = (int)in.nval;\n            for(int i=0, op=0; i&lt;N;i++){          \n                in.nextToken();op = (int)in.nval;\n                if(op == 1){\n                    in.nextToken();int x = (int)in.nval;\n                    in.nextToken();int y = (int)in.nval;\n                    //put\n                    put(x,y);\n                }else if(op == 2){\n                    in.nextToken();int x = (int)in.nval;\n                    //get\n                    out.println(get(x));\n                }else {\n                    //setAll\n                    in.nextToken();int x = (int)in.nval;\n                    setAll(x);\n                }\n            }\n        }\n        out.flush();\n        br.close();\n        out.close();\n    }\n    public static void build(){\n        timeStamp = 0;\n        setAllValue = 0;\n        setAllTime = -1;\n    }\n    public static void put(int k, int v){\n        if(map.containsKey(k)){\n            int[] value = map.get(k);\n            value[0] = v;\n            value[1] = timeStamp++;\n        }else{\n            map.put(k,new int[]{v,timeStamp++});\n        }\n    }\n    public static void setAll(int v){\n        setAllValue = v;\n        setAllTime = timeStamp++;\n    }\n    public static int get(int k){\n        if(map.containsKey(k)){\n            int[] record = map.get(k);\n            if(record[1] &lt; setAllTime){\n                return setAllValue;\n            }else{\n                return record[0];\n            }\n        }\n        return -1;\n    }\n}\n</code></pre>"},{"location":"LANG/DS-leetcode/#lru","title":"\u5b9e\u73b0LRU\u7f13\u5b58","text":"<p>LRU\u662fLeast Recently Used\u7684\u7f29\u5199\uff0c\u5373\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\uff0c\u662f\u4e00\u79cd\u5e38\u7528\u7684\u9875\u9762\u7f6e\u6362\u7b97\u6cd5\uff0c\u9009\u62e9\u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528\u7684\u9875\u9762\u4e88\u4ee5\u6dd8\u6c70\u3002\u8be5\u7b97\u6cd5\u8d4b\u4e88\u6bcf\u4e2a\u9875\u9762\u4e00\u4e2a\u8bbf\u95ee\u5b57\u6bb5\uff0c\u7528\u6765\u8bb0\u5f55\u4e00\u4e2a\u9875\u9762\u81ea\u4e0a\u6b21\u88ab\u8bbf\u95ee\u4ee5\u6765\u6240\u7ecf\u5386\u7684\u65f6\u95f4 t\uff0c\u5f53\u987b\u6dd8\u6c70\u4e00\u4e2a\u9875\u9762\u65f6\uff0c\u9009\u62e9\u73b0\u6709\u9875\u9762\u4e2d\u5176 t \u503c\u6700\u5927\u7684\uff0c\u5373\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u9875\u9762\u4e88\u4ee5\u6dd8\u6c70\u3002</p> <p>\u601d\u8def\uff1a\u53cc\u5411\u94fe\u8868+\u54c8\u5e0c\u8868</p> <ol> <li>\u6570\u636e\u7ed3\u6784\uff1a</li> <li>\u54c8\u5e0c\u8868\uff1a<ul> <li>key:\u5b58\u653e\u5bf9\u5e94\u7684\u5173\u952e\u5b57</li> <li>value:\u662f\u94fe\u8868\u8282\u70b9\u7684\u5f15\u7528\uff0c\u4e00\u4e2a\u94fe\u8868\u8282\u70b9\u4e2d\u5b58\u653e\u7684\u662f\u5173\u952e\u5b57\u4e0e\u5bf9\u5e94\u7684\u7f13\u5b58\u503c\u3002</li> </ul> </li> <li>\u53cc\u5411\u94fe\u8868</li> <li>\u5934\u90e8\u8868\u793a\u6700\u65e9\u7684\u6570\u636e\uff0c\u5c3e\u90e8\u8868\u793a\u6700\u8fd1\u7684\u6570\u636e\u3002</li> <li> <p>\u64cd\u4f5c\uff1a</p> </li> <li> <p>get\uff1a</p> </li> <li>\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u8868\u76f4\u63a5\u83b7\u5f97\u5bf9\u5e94\u7684\u94fe\u8868\u8282\u70b9\u7684\u5f15\u7528\uff0c\u4ece\u800c\u83b7\u5f97\u7684\u503c\u4e5f\u662fO(1)</li> <li>\u7136\u540e\u5c06\u8be5\u8282\u70b9\u79fb\u52a8\u5230\u5c3e\u90e8</li> <li>put\uff1a</li> <li>\u5c06\u8be5\u8282\u70b9\u91cd\u65b0\u653e\u5165\u5c3e\u90e8\u3002</li> <li>remove:</li> <li>\u5220\u9664\u94fe\u8868\u5934\u90e8\u7684\u8282\u70b9</li> <li>\u5168\u90e8\u64cd\u4f5c\u6ca1\u6709\u904d\u5386\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662fO(1)</li> </ol> Text Only<pre><code>class LRUCache {\n    class DoubleNode{\n        int key;\n        int value;\n        DoubleNode last;\n        DoubleNode next;\n        public DoubleNode(int k, int v){\n            this.key = k;\n            this.value = v;\n        }\n    }\n    class DoubleList{\n        DoubleNode head;\n        DoubleNode tail;\n        public DoubleList(){\n            this.head = null;\n            this.tail = null;\n        }\n        public void addNode(DoubleNode newNode){\n            if(newNode == null) return;\n            if(head == null){\n                head = newNode;\n                tail = newNode;\n            }else{\n                newNode.last = tail;\n                tail.next = newNode;\n                tail = newNode;\n            }\n        }\n        public void moveToTail(DoubleNode node){\n            if(tail ==node) return;\n            if(head == node){\n                head = head.next;\n                head.last = null;\n            }else{\n                node.last.next = node.next;\n                node.next.last = node.last;\n            }\n            node.last = tail;\n            tail.next = node;\n            tail = node;\n        }\n        public DoubleNode removeHead(){\n            if(head == null) return null;\n            DoubleNode ans = null;\n            ans = head;\n            if(head == tail){\n                head = null;\n                tail = null;\n            }else{\n                head = ans.next;\n                head.last = null;\n                ans.next = null;\n            }\n            return ans;\n        }\n    }\n    private HashMap&lt;Integer,DoubleNode&gt; map;\n    private DoubleList nodeList;\n    private int cap;\n    public LRUCache(int capacity) {\n        map = new HashMap&lt;&gt;();\n        nodeList = new DoubleList();\n        cap = capacity;\n    }\n\n    public int get(int key) {\n        if(map.containsKey(key)){\n            DoubleNode node = map.get(key);\n            int v = node.value;\n            nodeList.moveToTail(node);\n            return v;\n        }\n        return -1;\n    }\n\n    public void put(int key, int value) {\n        if(map.containsKey(key)){\n            DoubleNode node = map.get(key);\n            node.value = value;\n            nodeList.moveToTail(node);\n        }else{\n            if(map.size() == cap){\n                DoubleNode oldNode =  nodeList.removeHead();\n                map.remove(oldNode.key);\n            }\n            DoubleNode newNode = new DoubleNode(key, value);\n            map.put(key,newNode);\n            nodeList.addNode(newNode);\n        }\n    }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/","title":"JUC-SUC","text":"<p>\u90e8\u5206\u76ee\u5f55\u7f3a\u5931</p>"},{"location":"LANG/JUC-SUC/#_1","title":"\u5e76\u53d1\u7b80\u4ecb","text":""},{"location":"LANG/JUC-SUC/#11","title":"1.1 \u7ebf\u7a0b\u7684\u521b\u5efa","text":"<ol> <li>\u521b\u5efa\u65b9\u6cd5\uff1a</li> <li>\u7ee7\u627fThread\u7c7b\uff1a<ol> <li>\u7ee7\u627fThread\u7c7b\uff0c\u5e76\u91cd\u5199run()\u65b9\u6cd5\uff0crun\u5c31\u662f\u65b0\u7ebf\u7a0b\u8981\u6267\u884c\u7684\u4e8b\u60c5\u3002</li> <li>\u521b\u5efaThread\u5b50\u7c7b\u7684\u5b9e\u4f8b\uff0c\u4e5f\u5c31\u662f\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528start()\u65b9\u6cd5\u542f\u52a8\u7ebf\u7a0b\u3002</li> </ol> </li> </ol> Text Only<pre><code>package com.atguigu.thread;\n\n//\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u7c7b\npublic class MyThread extends Thread {\n     //\u5b9a\u4e49\u6307\u5b9a\u7ebf\u7a0b\u540d\u79f0\u7684\u6784\u9020\u65b9\u6cd5\n     public MyThread(String name) {\n         //\u8c03\u7528\u7236\u7c7b\u7684 String \u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u6307\u5b9a\u7ebf\u7a0b\u7684\u540d\u79f0\n         super(name);\n     }\n     /**\n     * \u91cd\u5199 run \u65b9\u6cd5\uff0c\u5b8c\u6210\u8be5\u7ebf\u7a0b\u6267\u884c\u7684\u903b\u8f91\n     */\n     @Override\n     public void run() {\n         for (int i = 0; i &lt; 10; i++) {\n         System.out.println(getName()+\"\uff1a\u6b63\u5728\u6267\u884c\uff01\"+i);\n         }\n     }\n}\n\n//\u6d4b\u8bd5\u7c7b\npackage com.atguigu.thread;\npublic class TestMyThread {\n public static void main(String[] args) {\n     //\u521b\u5efa\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u5bf9\u8c61 1\n     MyThread mt1 = new MyThread(\"\u5b50\u7ebf\u7a0b 1\");\n     //\u5f00\u542f\u5b50\u7ebf\u7a0b 1\n     mt1.start();\n\n     //\u521b\u5efa\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u5bf9\u8c61 2\n     MyThread mt2 = new MyThread(\"\u5b50\u7ebf\u7a0b 2\");\n     //\u5f00\u542f\u5b50\u7ebf\u7a0b 2\n     mt2.start();\n\n     //\u5728\u4e3b\u65b9\u6cd5\u4e2d\u6267\u884c for \u5faa\u73af\n     for (int i = 0; i &lt; 10; i++) {\n         System.out.println(\"main \u7ebf\u7a0b\uff01\"+i);\n     }\n }\n}\n</code></pre> <ol> <li>\u5b9e\u73b0Runnable\u63a5\u53e3\uff1a</li> <li>\u80cc\u666f\uff1aJava\u6709\u5355\u7ee7\u627f\u9650\u5236\uff0c\u5f53\u65e0\u6cd5\u7ee7\u627fThread\u7c7b\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5b9e\u73b0Runnable\u63a5\u53e3</li> <li>\u6b65\u9aa4\uff1a<ol> <li>\u5b9e\u73b0Runnable\u63a5\u53e3\uff0c\u5e76\u91cd\u5199run\u65b9\u6cd5\uff0c\u8be5run\u65b9\u6cd5\u5c31\u662f\u7ebf\u7a0b\u7684\u6267\u884c\u4f53\u3002</li> <li>\u521b\u5efaRunnable\u63a5\u53e3\u5b9e\u73b0\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5e76\u4f5c\u4e3atarget\u53c2\u6570\u4f20\u4ebaThread\u7c7b\u7684\u5b9e\u4f8b(\u7ebf\u7a0b\u5bf9\u8c61)</li> <li>\u542f\u52a8\u7ebf\u7a0b\u5bf9\u8c61\u7684start\u65b9\u6cd5</li> </ol> </li> </ol> <p>\ud83d\udccc</p> <p>\u7ebf\u7a0b\u5bf9\u8c61\u4e00\u76f4\u90fd\u662fThread\u5bf9\u8c61\u3002</p> <ol> <li>\u5982\u679c\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f\uff0c\u5e76\u91cd\u5199run\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u63d0\u4f9b\u7ebf\u7a0b\u6267\u884c\u4f53</li> <li>\u5982\u679c\u4e0d\u53ef\u4ee5\u7ee7\u627fThread\uff0c\u5c31\u9700\u7528\u4e00\u4e2a\u5b9e\u73b0Runnable\u63a5\u53e3\u7684\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u4f20\u5165Thread\u5bf9\u8c61\u4e2d\uff0c\u4f5c\u4e3a\u7ebf\u7a0b\u6267\u884c\u4f53\u3002</li> </ol> Text Only<pre><code>package com.atguigu.thread;\npublic class MyRunnable implements Runnable {\n     @Override\n     public void run() {\n         for (int i = 0; i &lt; 20; i++) {\n             System.out.println(Thread.currentThread().getName() + \" \"\n            + i);\n         }\n     }\n}\n\u6d4b\u8bd5\u7c7b\uff1a\npackage com.atguigu.thread;\npublic class TestMyRunnable {\n     public static void main(String[] args) {\n         //\u521b\u5efa\u81ea\u5b9a\u4e49\u7c7b\u5bf9\u8c61 \u7ebf\u7a0b\u4efb\u52a1\u5bf9\u8c61\n         MyRunnable mr = new MyRunnable();\n         //\u521b\u5efa\u7ebf\u7a0b\u5bf9\u8c61\n         Thread t = new Thread(mr, \"\u957f\u6c5f\");\n         t.start();\n         for (int i = 0; i &lt; 20; i++) {\n             System.out.println(\"\u9ec4\u6cb3 \" + i);\n         }\n     }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#12","title":"1.2\u5e76\u53d1\u57fa\u7840","text":"<ol> <li>\u64cd\u4f5c\u7cfb\u7edf\u591a\u8fdb\u7a0b\u7684\u539f\u56e0\uff1a</li> <li>\u8d44\u6e90\u5229\u7528\u7387\uff1a\u901a\u8fc7\u8fdb\u7a0b\u5207\u6362\u6765\u9ad8\u6548\u5229\u7528CPU</li> <li>\u516c\u5e73\u6027\uff1a\u901a\u8fc7\u65f6\u95f4\u5206\u7247\u7b49\u65b9\u6cd5\uff0c\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5171\u4eabCPU\uff0c\u800c\u4e0d\u662f\u4ece\u5934\u5230\u5c3e\u7684\u4e32\u884c</li> <li>\u4fbf\u5229\u6027(\u7ebf\u7a0b)\uff1a<ol> <li>\u901a\u8fc7\u5728\u8fdb\u7a0b\u4e2d\u52a0\u5165\u7ebf\u7a0b\uff0c\u4f7f\u5f97\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u7a0b\u5e8f\u63a7\u5236\u6d41\u3002\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u5806\u533a\u57df\u548c\u4ee3\u7801\u533a\uff0c\u4ee5\u53ca\u6587\u4ef6\u53e5\u67c4\u7b49\u8d44\u6e90\uff0c</li> <li>\u4f46\u662f\u53c8\u6709\u5404\u81ea\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c\u6808\u533a\u3002\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u591a\u4e2a\u7ebf\u7a0b\u5ba2\u53ef\u4ee5\u88ab\u540c\u65f6\u8c03\u5ea6\u5230\u591a\u4e2aCPU\u4e0a\u6267\u884c\u3002</li> <li>\u7ebf\u7a0b\u662f\u7a0b\u5e8f\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u3002</li> </ol> </li> <li>\u591a\u7ebf\u7a0b\u7684\u4f18\u52bf\uff1a</li> <li>\u53d1\u6325\u591a\u5904\u7406\u5668\u7684\u6027\u80fd\uff1a\u7531\u4e8e\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\u662f\u7ebf\u7a0b\uff0c\u800c\u591a\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u540c\u65f6\u8c03\u5ea6\u5728\u591a\u4e2a\u6838\u4e0a\u3002\u5c31\u7b97\u53ea\u6709\u4e00\u4e2a\u5904\u7406\u5668\uff0c\u591a\u7ebf\u7a0b\u4e5f\u53ef\u4ee5\u5728\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u884cIO\u7684\u65f6\u5019\uff0c\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff0c\u63d0\u9ad8CPU\u5229\u7528\u7387\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u963b\u585e\u7684\u8fd4\u56de\u3002</li> <li>\u5efa\u6a21\u7b80\u5355\uff1a\u53ef\u4ee5\u4e3a\u6a21\u578b\u4e2d\u6bcf\u6bcf\u79cd\u4efb\u52a1\u7684\u90fd\u5206\u914d\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5f62\u6210\u4e32\u884c\u6267\u884c\u7684\u5047\u8c61\u3002\u591a\u7ebf\u7a0b\u53ef\u4ee5\u5c06\u590d\u6742\u4e14\u5f02\u6b65\u7684\u5de5\u4f5c\u6d41\u8fdb\u4e00\u6b65\u5206\u89e3\u4e3a\u4e00\u7ec4\u7b80\u5355\u5e76\u4e14\u540c\u6b65\u7684\u5de5\u4f5c\u6d41\uff0c\u4e0d\u540c\u7684\u5de5\u4f5c\u6d41\u5728\u7279\u5b9a\u4f4d\u7f6e\u4ea4\u4e92\u3002</li> <li>\u5f02\u6b65\u4e8b\u4ef6\u7684\u7b80\u5316\u5904\u7406\uff1a\u670d\u52a1\u5668\u7a0b\u5e8f\u5728\u63a5\u6536\u591a\u4e2a\u5ba2\u6237\u7aef\u7684Socket\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e3a\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u90fd\u5206\u914d\u5355\u72ec\u7684\u7ebf\u7a0b\u5e76\u4e14\u4f7f\u7528\u540c\u6b65IO,\u5c31\u4f1a\u964d\u4f4e\u5f00\u53d1\u96be\u5ea6</li> </ol> <p>\ud83d\udd14</p> <p>\u540c\u6b65\u548c\u5f02\u6b65(\u662f\u6d88\u606f\u7684\u901a\u77e5\u673a\u5236)\uff1a</p> <p>\u540c\u6b65IO\uff1a\u5728\u540c\u6b65IO\u4e2d\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53d1\u51faIO\u8bf7\u6c42\u4e4b\u540e\uff0c\u5fc5\u987b\u7b49\u5f85IO\u64cd\u4f5c\u5b8c\u6210\uff0c\u624d\u53ef\u4ee5\u6267\u884c\u4e0b\u4e00\u4e2a\u6b65\u9aa4\u3002</p> <p>\u5f02\u6b65IO\uff1a\u5728\u5f02\u6b65IO\u4e2d\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53d1\u51faIO\u8bf7\u6c42\u4e4b\u540e\uff0c\u53ef\u4ee5\u7acb\u5373\u6267\u884c\u4e0b\u4e00\u6b65\u64cd\u4f5c\u3002\u5f53IO\u5b8c\u6210\u4e4b\u540e\uff0c\u4f1a\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u901a\u77e5(\u6bd4\u5982\u56de\u8c03\u51fd\u6570)\u901a\u77e5\u8fdb\u7a0b\u3002</p> <p>\u963b\u585e\u548c\u975e\u963b\u585e(\u662f\u7a0b\u5e8f\u5728\u7b49\u5f85\u6d88\u606f(\u65e0\u6240\u8c13\u540c\u6b65\u5f02\u6b65)\u65f6\u5019\u7684\u72b6\u6001)\uff1a</p> <p>\u963b\u585eIO\uff1a\u5728\u963b\u585eIO\u4e2d\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53d1\u8d77IO\u64cd\u4f5c\uff0c\u5982\u679c\u6570\u636e\u6ca1\u6709\u51c6\u5907\u597d\uff0c\u5c31\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230\u6570\u636e\u51c6\u5907\u597d\u4e3a\u6b62\u3002</p> <p>\u975e\u963b\u585eIO\uff1a\u8fdb\u7a0b\u53d1\u51fa\u8bf7\u6c42\u4e4b\u540e\u7acb\u5373\u8fd4\u56de</p> <p>\u56db\u8005\u4e4b\u95f4\u6ca1\u6709\u7edd\u5bf9\u5173\u7cfb\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u4e00\u4e2a\u963b\u585e\u7684\u5f02\u6b65IO\u6a21\u578b\uff1a\u8fdb\u7a0b\u53d1\u8d77\u4e00\u4e2aIO\u64cd\u4f5c\u540e\uff0c\u4e0d\u9700\u8981\u7b49\u5f85IO\u64cd\u4f5c\u7684\u5b8c\u6210\uff0c\u4f46\u5982\u679c\u6570\u636e\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\uff0c\u8fdb\u7a0b\u5c31\u4f1a\u88ab\u6302\u8d77\uff0c\u76f4\u5230\u6570\u636e\u51c6\u5907\u597d\u4e3a\u6b62\u3002</p> <p>\u540c\u6b65/\u5f02\u6b65\u4e0e\u963b\u585e/\u975e\u963b\u585e\u662f\u4e24\u7ec4\u4e0d\u540c\u7684\u6982\u5ff5\uff0c\u5b83\u4eec\u53ef\u4ee5\u5171\u5b58\u7ec4\u5408\uff0c\u800c\u5f88\u591a\u4eba\u4e4b\u6240\u4ee5\u628a\u540c\u6b65\u548c\u963b\u585e\u6df7\u6dc6\uff0c\u6211\u60f3\u4e5f\u662f\u56e0\u4e3a\u6ca1\u6709\u533a\u5206\u8fd9\u4e24\u4e2a\u6982\u5ff5\uff0c\u6bd4\u5982\u5728\u8fdb\u7a0b\u963b\u585e\u7684 read/write \u64cd\u4f5c\u4e2d\uff0c\u5176\u5b9e\u662f\u628a\u6d88\u606f\u901a\u77e5\u548c\u5904\u7406\u6d88\u606f\u7ed3\u5408\u5728\u4e86\u4e00\u8d77\uff0c\u5728\u8fd9\u91cc\u6240\u5173\u6ce8\u7684\u6d88\u606f\u5c31\u662f fd \u662f\u5426\u53ef\u8bfb/\u5199\uff0c\u800c\u5904\u7406\u6d88\u606f\u5219\u662f\u5bf9 fd \u8bfb/\u5199\uff0c\u5f53\u6211\u4eec\u5c06\u8fd9\u4e2a fd \u8bbe\u7f6e\u4e3a\u975e\u963b\u585e\u7684\u65f6\u5019\uff0cread/write \u64cd\u4f5c\u5c31\u4e0d\u4f1a\u5728\u7b49\u5f85\u6d88\u606f\u901a\u77e5\u8fd9\u91cc\u963b\u585e\uff0c\u5982\u679c fd \u4e0d\u53ef\u8bfb/\u5199\u5219\u64cd\u4f5c\u7acb\u5373\u8fd4\u56de\u3002</p> <ol> <li>\u591a\u7ebf\u7a0b\u7684\u98ce\u9669\uff1a</li> <li>\u5b89\u5168\u6027\u95ee\u9898\uff1a<ol> <li>\u6848\u4f8b\uff1a\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u6570\u503c\u5e8f\u5217\u751f\u6210\u5668\uff1a<ol> <li>\u5982\u4e0b\u9762\u7684\u65b9\u6cd5getNext\uff0c\u5176\u4e2dvalue\u662f\u6210\u5458\u53d8\u91cf\u8fdb\u7a0b\u5185\u7ebf\u7a0b\u5171\u4eab\u3002</li> <li>\u5728\u5355\u7ebf\u7a0b\u8c03\u7528\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u95ee\u9898\u3002\u4f46\u662f\u5728\u591a\u7ebf\u7a0b\u4e2d\uff0cvalue++\u7684\u64cd\u4f5c\u5b9e\u9645\u4e0a\u662f\u5185\u5b58-&gt;\u5bc4\u5b58\u5668\uff0cvalue+1\uff0c\u5c06value\u518d\u8fd4\u56de\u5185\u5b58\u533a\u57df\u3002\u64cd\u4f5c\u5e76\u4e0d\u662f\u539f\u5b50\u7684\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u60c5\u51b5\u3002</li> <li>\u8be5\u6848\u4f8b\u8bf4\u660e\u7684\u662f\u5e38\u89c1\u7684\u7ade\u6001\u6761\u4ef6(race condition)\uff0c\u4e5f\u5c31\u662f\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u4e00\u4e2a\u5171\u4eab\u5185\u5b58\u533a\u57df\u3002</li> <li>\u6539\u6b63\uff1a\u4f7f\u7528synchronized\u5173\u952e\u5b57\uff0crace condition\u90e8\u5206\u5b9e\u73b0\u987a\u5e8f\u6267\u884c\uff0c\u9632\u6b62\u4ea4\u66ff\u6267\u884c\u7684\u60c5\u51b5\u53d1\u751f\u3002</li> </ol> </li> </ol> </li> </ol> Text Only<pre><code># \u975e\u7ebf\u7a0b\u5b89\u5168\npublic class unsafeSequence {\n    private int value;\n\n    public int getNext() {\n        return value++;\n    }\n}\n\n#\u4fee\u6b63\uff01\u7ebf\u7a0b\u5b89\u5168\uff1a\n@ThreadSafe\npublic class Sequence {\n    private int value;\n    public synchronized int getNext(){\n        return value++;\n    }\n}\n</code></pre> <ol> <li>\u5b89\u5168\u6027\u95ee\u9898\uff1a</li> <li>\u65e0\u9650\u5faa\u73af\uff0c\u9020\u6210\u8d44\u6e90\u6d6a\u8d39\u3002</li> <li>\u6b7b\u9501\uff0c\u9965\u997f\uff0c\u6d3b\u9501</li> <li>\u6027\u80fd\u95ee\u9898\uff1a</li> <li>\u4e0a\u4e0b\u6587\u5207\u6362\u5f15\u53d1\u7684\u6d88\u8017\uff0c\u4f1a\u4f7f\u5f97\u7a0b\u5e8f\u4e22\u5931\u5c40\u90e8\u6027\uff0c\u5e76\u4e14CPU\u82b1\u8d39\u8fc7\u591a\u65f6\u95f4\u5728\u8c03\u5ea6\u4e0a\u3002</li> <li>\u540c\u6b65\u673a\u5236\uff0c\u53ef\u80fd\u4f1a\u963b\u6b62\u7f16\u8bd1\u5668\u4f18\u5316\u3002</li> </ol>"},{"location":"LANG/JUC-SUC/#2","title":"2 . \u7ebf\u7a0b\u5b89\u5168","text":""},{"location":"LANG/JUC-SUC/#21","title":"2.1 \u7ebf\u7a0b\u5b89\u5168","text":"<ol> <li>\u5f53\u591a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u4e2a\u53ef\u53d8\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u5904\u7406\u65b9\u6cd5\uff1a</li> <li>\u4e0d\u5728\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u8be5\u53d8\u91cf</li> <li>\u5c06\u53d8\u91cf\u6539\u4e3a\u4e0d\u53ef\u53d8\u7c7b\u578b</li> <li>\u5728\u8bbf\u95ee\u72b6\u6001\u53d8\u91cf\u7684\u65f6\u5019\u4f7f\u7528\u540c\u6b65\u53d8\u91cf</li> <li>\u7ebf\u7a0b\u5b89\u5168\u6027\uff1a</li> <li>\u5b9a\u4e49\uff1a\u67d0\u4e2a\u7c7b\u7684\u884c\u4e3a\u4e0e\u5176\u89c4\u8303\u5b8c\u5168\u4e00\u81f4\u3002\u826f\u597d\u7684\u89c4\u8303\u5305\u62ec\u5404\u79cd\u4e0d\u53d8\u6761\u4ef6\u6765\u7ea6\u675f\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u4ee5\u53ca\u5b9a\u4e49\u5404\u79cd\u540e\u9a8c\u6761\u4ef6\u6765\u63cf\u8ff0\u5bf9\u8c61\u64cd\u4f5c\u7684\u7ed3\u679c\u3002\u5f53\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u67d0\u4e2a\u7c7b\u7684\u65f6\u5019\uff0c\u8be5\u7c7b\u59cb\u7ec8\u53ef\u4ee5\u8868\u73b0\u6b63\u786e\u7684\u884c\u4e3a\uff0c\u800c\u4e14\u4e3b\u8c03\u51fd\u6570\u4e0d\u7528\u4f7f\u7528\u989d\u5916\u7684\u540c\u6b65\u6216\u8005\u534f\u8c03\uff0c\u8be5\u7c7b\u5c31\u662f\u7ebf\u7a0b\u5b89\u5168\u6027\u7684\u3002</li> <li>\u4f8b\u5b50\uff1a</li> <li>Servlet:Servlet\uff08Server Applet\uff09\u662fJava Servlet\u7684\u7b80\u79f0\uff0c\u79f0\u4e3a\u5c0f\u670d\u52a1\u7a0b\u5e8f\u6216\u670d\u52a1\u8fde\u63a5\u5668\uff0c\u6cdb\u6307\u7528 Java\u7f16\u5199\u7684\u670d\u52a1\u5668\u7aef\u7a0b\u5e8f\u3002\u5728\u7f16\u7a0b\u8fc7\u7a0b\u4e2d\u4e5f\u6307\u4e00\u5207 \u5b9e\u73b0\u4e86Servlet\u63a5\u53e3\u7684\u7c7b\uff08\u7ea6\u5b9a\u4ee5Servlet\u7ed3\u5c3e\u547d\u540d\uff09\u3002</li> <li>\u4e0b\u9762\u7684Servlet\u4ece\u8bf7\u6c42\u4e2d\u63d0\u53d6\u51fa\u6570\u503c\uff0c\u8fdb\u884c\u56e0\u5f0f\u5206\u89e3\uff0c\u7136\u540e\u5c06\u6570\u636e\u5c01\u88c5\u8fdb\u5165\u8be5Servlet\u7684\u76f8\u5e94\u4e2d\u3002</li> <li>\u5b89\u5168\u6027\uff1a\u7531\u4e8e\u8be5\u7c7b\u662f\u65e0\u72b6\u6001\u7684\uff0c\u5b83\u65e2\u4e0d\u5305\u542b\u4efb\u4f55\u6210\u5458\u53d8\u91cf\uff0c\u4e5f\u4e0d\u5305\u542b\u5bf9\u5176\u4ed6\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u7684\u5f15\u7528\u3002\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u7684\u4e34\u65f6\u72b6\u6001\u53ea\u5b58\u5728\u4e8e\u7ebf\u7a0b\u6808\u4e0a\u7684\u5c40\u90e8\u53d8\u91cf\u4e2d\uff0c\u800c\u7ebf\u7a0b\u6808\u662f\u79c1\u6709\u7684\u3002\u4e0d\u4f1a\u5bfc\u81f4\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u6709\u5171\u4eab\u7684\u72b6\u6001\u3002\u6240\u4ee5\u7ebf\u7a0b\u8bbf\u95ee\u65e0\u72b6\u6001\u5bf9\u8c61\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u7ebf\u7a0b\u3002</li> <li>\u65e0\u72b6\u6001\u5bf9\u8c61\u4e00\u5b9a\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</li> </ol> Text Only<pre><code>public class StatelessFactorizer extends GenericServlet implements Servlet {\n\n    public void service(ServletRequest req, ServletResponse resp) {\n        BigInteger i = extractFromRequest(req);\n        BigInteger[] factors = factor(i);\n        encodeIntoResponse(resp, factors);\n    }\n\n    void encodeIntoResponse(ServletResponse resp, BigInteger[] factors) {\n    }\n\n    BigInteger extractFromRequest(ServletRequest req) {\n        return new BigInteger(\"7\");\n    }\n\n    BigInteger[] factor(BigInteger i) {\n        // Doesn't really factor\n        return new BigInteger[] { i };\n    }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#22","title":"2.2 \u539f\u5b50\u6027","text":"<ol> <li>\u5047\u8bbe\u5728\u65e0\u72b6\u6001\u5bf9\u8c61\u4e2d\u589e\u52a0\u4e00\u4e2a\u72b6\u6001</li> <li>\u4e0b\u8ff0\u4f8b\u5b50\u4e2d\uff0c\u589e\u52a0\u4e00\u4e2a\u547d\u4e2d\u8ba1\u6570\u5668\u7684\u6210\u5458\u5c5e\u6027\u6765\u7edf\u8ba1\u8bf7\u6c42\u6b21\u6570\u3002</li> <li>\u7531\u4e8e\u64cd\u4f5c\u4e0d\u662f\u539f\u5b50\u64cd\u4f5c\uff0c\u800c\u662f\u4e00\u4e2a\u64cd\u4f5c\u5e8f\u5217\uff0c\u5e76\u4e14\u4f9d\u8d56\u4e8e\u4e4b\u524d\u7684\u72b6\u6001</li> <li>\u8be5\u60c5\u51b5\u79f0\u4e3a\u7ade\u6001\u6761\u4ef6\u3002</li> </ol> <p>\ud83d\udc4b</p> <p>\u6700\u5e38\u89c1\u7684\u7ade\u6001\u6761\u4ef6\uff1a\u5148\u68c0\u67e5\u540e\u6267\u884c</p> <p>\u672c\u8d28\u662f\u5148\u89c2\u5bdf\u5230\u67d0\u4e2a\u6761\u4ef6\uff0c\u7136\u540e\u57fa\u4e8e\u89c2\u5bdf\u7684\u7ed3\u679c\u8fdb\u884c\u76f8\u5e94\u7684\u52a8\u4f5c\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u5728\u89c2\u5bdf\u5230\u91c7\u53d6\u52a8\u4f5c\u4e4b\u95f4\uff0c\u4e4b\u524d\u7684\u89c2\u5bdf\u7ed3\u679c\u53ef\u80fd\u5df2\u7ecf\u65e0\u6548\uff0c\u4ece\u800c\u4f1a\u5bfc\u81f4\u5404\u79cd\u95ee\u9898\u3002</p> <p>\u7ade\u6001\u6761\u4ef6\u5e76\u4e0d\u7b49\u4e8e\u6570\u636e\u7ade\u4e89\uff01</p> Text Only<pre><code>public class UnsafeCountingFactorizer extends GenericServlet implements Servlet {\n    private long count = 0;\n\n    public long getCount() {\n        return count;\n    }\n\n    public void service(ServletRequest req, ServletResponse resp) {\n        BigInteger i = extractFromRequest(req);\n        BigInteger[] factors = factor(i);\n        //\u8be5\u64cd\u4f5c\u5e76\u975e\u539f\u5b50\u64cd\u4f5c\uff0c\u800c\u662f\u4e00\u4e2a\u8bfb\u53d6-\u4fee\u6539-\u5199\u5165\u7684\u64cd\u4f5c\u5e8f\u5217\u3002\n        ++count;\n        encodeIntoResponse(resp, factors);\n    }\n\n    void encodeIntoResponse(ServletResponse res, BigInteger[] factors) {\n    }\n\n    BigInteger extractFromRequest(ServletRequest req) {\n        return new BigInteger(\"7\");\n    }\n\n    BigInteger[] factor(BigInteger i) {\n        // Doesn't really factor\n        return new BigInteger[] { i };\n    }\n}\n</code></pre> <ol> <li>\u5178\u578b\u60c5\u51b5\uff1a\u5ef6\u8fdf\u521d\u59cb\u5316</li> <li>\u64cd\u4f5c\u672c\u610f\uff1a\u5c06\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u5ef6\u8fdf\u5230\u5b9e\u9645\u88ab\u4f7f\u7528\u7684\u65f6\u5019\u3002</li> <li>\u7ade\u6001\u6761\u4ef6\uff1a<ol> <li>A\u770b\u5230instance\u4e3anull\uff0c\u56e0\u6b64\u521b\u5efa\u4e86ExpensiveObject\u5b9e\u4f8b\u3002</li> <li>\u5982\u679c\u5f53A\u6b63\u5728\u8fdb\u884c\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u6b64\u65f6B\u7ebf\u7a0b\u8fdb\u5165\uff0c\u5224\u65adinstance\u4ecd\u7136\u4e3a\u7a7a\uff0c\u4e5f\u8fdb\u884c\u521b\u5efa\u5bf9\u8c61\u3002</li> <li>\u5219\u4e24\u6b21\u8c03\u7528getInstance\u65b9\u6cd5\u8fd4\u56de\u7684\u5176\u5b9e\u662f\u4e24\u6b21new\u7684\u793a\u4f8b\uff0c\u800c\u4e0d\u662f\u5355\u4f8b\u6a21\u5f0f\u3002\u5982\u679c\u8be5\u7c7b\u88ab\u7528\u4e8e\u6ce8\u518c\u4fe1\u606f\u7b49\u573a\u666f\uff0c\u5fc5\u7136\u4f1a\u5bfc\u81f4\u4fe1\u606f\u4e22\u5931\u3002   4.</li> </ol> </li> </ol> Text Only<pre><code>public class LazyInitRace {\n    private ExpensiveObject instance = null;\n\n    public ExpensiveObject getInstance() {\n        if (instance == null)\n            instance = new ExpensiveObject();\n        return instance;\n    }\n}\n\nclass ExpensiveObject { }\n</code></pre> <ol> <li>\u4e0a\u8ff0\u7684\u4e24\u79cd\u60c5\u51b5\u90fd\u5c5e\u4e8e\u590d\u5408\u64cd\u4f5c(\u975e\u539f\u5b50)\u64cd\u4f5c\u5bfc\u81f4\u7684\u7ade\u6001\u6761\u4ef6\u3002</li> <li>\u89e3\u51b3\u529e\u6cd5\uff1a</li> <li>\u901a\u8fc7\u5b89\u5168\u7c7b\u6765\u7ba1\u7406\u5411\u65e0\u72b6\u6001\u7c7b\u4e2d\u5f15\u5165\u7684\u72b6\u6001\uff0c\u6b64\u65f6\u4ecd\u7136\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</li> </ol> <p>\u5f15\u5165\u7ebf\u7a0b\u5b89\u5168\u7c7b:AtomicLong\u6765\u7ba1\u7406\u8ba1\u6570\u5668\u7684\u72b6\u6001\u3002</p> <p>\u4f46\u662f\u5f53\u72b6\u6001\u53d8\u91cf\u7684\u6570\u91cf\u4e0d\u518d\u662f\u4e00\u4e2a\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u518d\u9002\u7528\uff0c\u56e0\u4e3a\u65e0\u6cd5\u4fdd\u8bc1\u591a\u4e2a\u53d8\u91cf\u4e4b\u95f4\u7684\u7ea6\u675f\u53ef\u4ee5\u540c\u6b65\u53d1\u751f\u53d8\u5316\u3002</p> Text Only<pre><code>public class CountingFactorizer extends GenericServlet implements Servlet {\n    private final AtomicLong count = new AtomicLong(0);\n\n    public long getCount() { return count.get(); }\n\n    public void service(ServletRequest req, ServletResponse resp) {\n        BigInteger i = extractFromRequest(req);\n        BigInteger[] factors = factor(i);\n        count.incrementAndGet();\n        encodeIntoResponse(resp, factors);\n    }\n\n    void encodeIntoResponse(ServletResponse res, BigInteger[] factors) {}\n    BigInteger extractFromRequest(ServletRequest req) {return null; }\n    BigInteger[] factor(BigInteger i) { return null; }\n}\n</code></pre> <ol> <li>\u901a\u8fc7\u52a0\u9501\u673a\u5236\uff0c\u6765\u4fdd\u8bc1\u539f\u5b50\u6027\u3002</li> </ol>"},{"location":"LANG/JUC-SUC/#23","title":"2.3 \u5185\u7f6e\u9501","text":"<ol> <li>\u540c\u6b65\u4ee3\u7801\u5757\uff1a</li> <li>\u7ec4\u6210\uff1a<ol> <li>\u9501\u7684\u5bf9\u8c61\u5f15\u7528\uff1a\u4e00\u822c\u662f\u65b9\u6cd5\u8c03\u7528\u6240\u5728\u7684\u5bf9\u8c61\u3002\u9759\u6001\u7684synchronized\u65b9\u6cd5\u4ee5Class\u5bf9\u8c61\u4f5c\u4e3a\u9501\u3002</li> <li>\u7531\u8be5\u9501\u4fdd\u62a4\u7684\u4ee3\u7801\u5757</li> </ol> </li> <li>Java\u7684\u5185\u7f6e\u9501\uff0c\u662f\u4e00\u79cd\u4e92\u65a5\u9501\uff0c\u540c\u65f6\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6301\u6709\u8be5\u9501\u3002</li> <li>\u4f8b\u5b50\uff1a\u4e0b\u9762\u7684\u7c7b\u901a\u8fc7\u4f7f\u7528\u5185\u7f6e\u9501\uff0c\u5b9e\u73b0\u4e86\u540c\u6b65\u673a\u5236\u3002\u4f46\u662f\u540c\u65f6\u5e76\u53d1\u5ea6\u5927\u5927\u964d\u4f4e\uff0c\u4f7f\u5f97\u6027\u80fd\u96be\u4ee5\u63a5\u53d7</li> </ol> Text Only<pre><code>public class SynchronizedFactorizer extends GenericServlet implements Servlet {\n    @GuardedBy(\"this\") private BigInteger lastNumber;\n    @GuardedBy(\"this\") private BigInteger[] lastFactors;\n\n    public synchronized void service(ServletRequest req,\n                                     ServletResponse resp) {\n        BigInteger i = extractFromRequest(req);\n        if (i.equals(lastNumber))\n            encodeIntoResponse(resp, lastFactors);\n        else {\n            BigInteger[] factors = factor(i);\n            lastNumber = i;\n            lastFactors = factors;\n            encodeIntoResponse(resp, factors);\n        }\n    }\n\n    void encodeIntoResponse(ServletResponse resp, BigInteger[] factors) {\n    }\n\n    BigInteger extractFromRequest(ServletRequest req) {\n        return new BigInteger(\"7\");\n    }\n\n    BigInteger[] factor(BigInteger i) {\n        // Doesn't really factor\n        return new BigInteger[] { i };\n    }\n}\n</code></pre> <ol> <li>\u91cd\u5165\uff1a</li> <li>\u80cc\u666f\uff1a\u5f53\u67d0\u4e2a\u7ebf\u7a0b\u8bf7\u6c42\u4e00\u4e2a\u7531\u5176\u4ed6\u7ebf\u7a0b\u6301\u6709\u7684\u9501\u7684\u65f6\u5019\uff0c\u53d1\u51fa\u8bf7\u6c42\u7684\u7ebf\u7a0b\u5c31\u4f1a\u963b\u585e\u3002\u4f46\u662f\u7531\u4e8e\u5185\u7f6e\u9501\u662f\u53ef\u4ee5\u91cd\u5165\u7684\uff0c\u5982\u679c\u67d0\u4e2a\u7ebf\u7a0b\u83b7\u53d6\u5b83\u81ea\u5df1\u6301\u6709\u7684\u9501\uff0c\u5219\u4f1a\u6210\u529f\u3002</li> <li>\u91cd\u5165\u7684\u610f\u4e49\uff1a\u610f\u5473\u7740\u83b7\u53d6\u9501\u7684\u64cd\u4f5c\u7684\u7c92\u5ea6\u662f\u7ebf\u7a0b\uff0c\u800c\u4e0d\u662f\u8c03\u7528\u3002\u800cpthread\u91cc\u9762\u4e92\u65a5\u9501\u7684\u83b7\u53d6\u64cd\u4f5c\u662f\u4ee5\u8c03\u7528\u4e3a\u7c92\u5ea6\u7684\u3002</li> <li>\u5b9e\u73b0\u65b9\u6cd5\uff1a<ol> <li>\u4e3a\u6bcf\u4e2a\u9501\u5173\u8054\u4e00\u4e2a\u83b7\u53d6\u8ba1\u6570\u503c\uff0c\u4ee5\u53ca\u6240\u6709\u8005\u7ebf\u7a0b\u3002</li> <li>\u5f53\u8ba1\u6570\u503c\u4e3a0\u7684\u65f6\u5019\uff0c\u8be5\u9501\u5c31\u88ab\u8ba4\u4e3a\u662f\u6ca1\u6709\u88ab\u4efb\u4f55\u7ebf\u7a0b\u6301\u6709\u3002</li> <li>\u5f53\u7ebf\u7a0b\u8bf7\u6c42\u4e00\u4e2a\u672a\u88ab\u6301\u6709\u7684\u9501\u7684\u65f6\u5019\uff0cJVM\u5c31\u4f1a\u5c06\u8be5\u7ebf\u7a0b\u6807\u8bb0\u4e3a\u8be5\u9501\u7684\u6240\u6709\u8005\u7ebf\u7a0b\uff0c\u5e76\u5c06\u83b7\u53d6\u8ba1\u6570\u503c\u8bbe\u7f6e\u4e3a1\u3002\u5982\u679c\u540c\u4e00\u4e2a\u7ebf\u7a0b\u518d\u6b21\u83b7\u5f97\u8be5\u9501\uff0c\u5219\u5c06\u8ba1\u6570\u503c\u9012\u589e\u3002\u5f53\u7ebf\u7a0b\u9000\u51fa\u540c\u6b65\u4ee3\u7801\u5757\u7684\u65f6\u5019\uff0c\u8ba1\u6570\u5668\u4f1a\u9012\u51cf\uff0c\u5f53\u8ba1\u6570\u503c\u4e3a0\u7684\u65f6\u5019\uff0c\u9501\u88ab\u91ca\u653e\u3002</li> </ol> </li> <li>\u4f8b\u5b50\uff1a</li> <li>\u5b50\u7c7b\u91cd\u5199\u4e86\u7236\u7c7b\u7684synchronized\u65b9\u6cd5\uff0c\u7136\u540e\u8c03\u7528\u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3002</li> </ol> <p>\ud83d\udd14</p> <p>\u5b50\u7c7b\u4e2d\u7684super\u548cthis\u5c45\u7136\u662f\u540c\u4e00\u4e2a\u5f15\u7528\uff0c\u800c\u4e14\u7236\u7c7b\u7684this\u4e5f\u662f\u3002\u6240\u4ee5\u624d\u4f1a\u8bf4\u9501\u4f4f\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u4e5f\u5c31\u662fsuper\u672c\u8eab\u4ecd\u7136\u662f\u5b50\u7c7b\u7684\u5f15\u7528\uff0c\u53ea\u4e0d\u8fc7\u5b83\u53ef\u4ee5\u8c03\u7528\u5230\u7236\u7c7b\u7684\u65b9\u6cd5\u6216\u53d8\u91cf\u3002</p> <ol> <li>\u5982\u679c\u6ca1\u6709\u53ef\u91cd\u5165\u7684\u9501\uff0c\u5219\u8be5\u4ee3\u7801\u4f1a\u4ea7\u751f\u6b7b\u9501</li> <li>\u5b50\u7c7b\u5728\u8fdb\u5165doSomething\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u4f1a\u83b7\u5f97Wight\u7684\u9501\u3002\u4f46\u662f\u5728\u5176\u4e2d\uff0c\u5982\u679c\u5728\u8c03\u7528super\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u53ef\u91cd\u5165\u7684\u9501\uff0c\u5219\u4f1a\u9677\u5165\u6b7b\u9501(\u56e0\u4e3a\u8c03\u7528super\u65f6\u5019\u4e5f\u83b7\u53d6\u7684\u662fWight\u7684\u9501).</li> </ol> Text Only<pre><code>public class  LoggingWidget extends Widget{\n    @Override\n    public synchronized void doSomething(){\n        System.out.println(\"calling to doSomething\");\n        super.doSomething();\n    }\n}\n\nclass Widget{\n    public synchronized void doSomething(){\n\n    }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#24","title":"2.4 \u4f7f\u7528\u9501\u6765\u4fdd\u62a4\u72b6\u6001","text":"<ol> <li> <p>\u5bf9\u8c61\u7684\u5185\u7f6e\u9501\u548c\u72b6\u6001\u53d8\u91cf\u7684\u5173\u7cfb\uff1a</p> </li> <li> <p>\u5bf9\u8c61\u7684\u5185\u7f6e\u9501\u7531\u5bf9\u8c61\u51b3\u5b9a\u3002</p> </li> <li>\u5bf9\u8c61\u7684\u6210\u5458\u5c5e\u6027\u5e76\u4e0d\u662f\u53ea\u80fd\u9760\u5bf9\u8c61\u7684\u5185\u7f6e\u9501\u6765\u9650\u5236\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u9501\u6765\u9650\u5236</li> <li>\u7ebf\u7a0b\u5728\u83b7\u5f97\u67d0\u4e2a\u9501\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u80fd\u963b\u6b62\u5176\u4ed6\u7ebf\u7a0b\u83b7\u53d6\u5176\u4ed6\u7684\u9501\u3002</li> <li>\u5efa\u8bae\uff1a\u6bcf\u4e2a\u5171\u4eab\u4e0e\u53ef\u53d8\u53d8\u91cf\u53ea\u901a\u8fc7\u4e00\u4e2a\u9501\u6765\u4fdd\u62a4\u3002</li> <li>\u5e38\u89c1\u7ea6\u5b9a\uff1a</li> <li>\u5c06\u6240\u6709\u53ef\u53d8\u72b6\u6001\u5c01\u88c5\u5728\u5bf9\u8c61\u5185\u90e8\uff0c\u901a\u8fc7\u5bf9\u8c61\u7684\u5185\u7f6e\u9501\u6765\u5bf9\u6240\u6709\u8bbf\u95ee\u53ef\u53d8\u72b6\u6001\u7684\u8def\u5f84\u8fdb\u884c\u540c\u6b65\u3002</li> <li>\u591a\u4e2a\u540c\u6b65\u65b9\u6cd5\u7684\u7ec4\u5408\u5e76\u4e0d\u4e00\u5b9a\u662f\u539f\u5b50\u7684</li> <li>\u5c3d\u53ef\u80fd\u5bf9\u8f83\u77ed\u7684\u4ee3\u7801\u5757\u8fdb\u884c\u52a0\u9501\uff0c\u964d\u4f4e\u6027\u80fd\u5f71\u54cd\u3002</li> <li>\u5f53\u8fdb\u884c\u8f83\u957f\u65f6\u95f4\u8ba1\u7b97\uff0c\u6216\u8005\u8fdb\u884cIO\u7684\u65f6\u5019\uff0c\u4e0d\u8981\u6301\u6709\u9501\u3002</li> </ol> Text Only<pre><code>public class CachedFactorizer extends GenericServlet implements Servlet {\n     private BigInteger lastNumber;\n     private BigInteger[] lastFactors;\n     private long hits;\n     private long cacheHits;\n\n    public synchronized long getHits() {\n        return hits;\n    }\n\n    public synchronized double getCacheHitRatio() {\n        return (double) cacheHits / (double) hits;\n    }\n\n    public void service(ServletRequest req, ServletResponse resp) {\n        BigInteger i = extractFromRequest(req);\n        BigInteger[] factors = null;\n        synchronized (this) {\n            ++hits;\n            if (i.equals(lastNumber)) {\n                ++cacheHits;\n                factors = lastFactors.clone();\n            }\n        }\n        if (factors == null) {\n            factors = factor(i);\n            synchronized (this) {\n                lastNumber = i;\n                lastFactors = factors.clone();\n            }\n        }\n        encodeIntoResponse(resp, factors);\n    }\n\n    void encodeIntoResponse(ServletResponse resp, BigInteger[] factors) {\n    }\n\n    BigInteger extractFromRequest(ServletRequest req) {\n        return new BigInteger(\"7\");\n    }\n\n    BigInteger[] factor(BigInteger i) {\n        // Doesn't really factor\n        return new BigInteger[]{i};\n    }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#3","title":"3 .\u5bf9\u8c61\u7684\u5171\u4eab","text":""},{"location":"LANG/JUC-SUC/#31","title":"3.1 \u53ef\u89c1\u6027","text":"<ol> <li>\u80cc\u666f\uff1a\u5e76\u53d1\u7f16\u7a0b\u7684\u5b9e\u73b0\uff0c\u4e0d\u4ec5\u5728\u4e8e\u5bf9\u4e8e\u5171\u4eab\u53d8\u91cf\u7684\u53ef\u53d8\u72b6\u6001\u8fdb\u884c\u6b63\u5e38\u7ba1\u7406\uff0c\u540c\u65f6\uff0c\u4e5f\u9700\u8981\u5bf9\u5185\u5b58\u53ef\u89c1\u6027\u8fdb\u884c\u7ba1\u7406\uff0c\u9632\u6b62\u66f4\u65b0\u4f46\u662f\u6ca1\u6709\u540c\u6b65\u6240\u5bfc\u81f4\u7684\u9519\u8bef</li> <li>\u4f8b\u5b50\uff1a</li> <li>\u4e0b\u9762\u7684\u4ee3\u7801\u8bf4\u660e\u4e86\u5f53\u591a\u4e2a\u7ebf\u7a0b\u5728\u6ca1\u6709\u540c\u6b65\u7684\u60c5\u51b5\u4e0b\u5171\u4eab\u6570\u636e\u65f6\u5019\u51fa\u73b0\u7684\u9519\u8bef\u3002</li> <li>\u5728\u4ee3\u7801\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u548c\u5b50\u7ebf\u7a0b\u90fd\u4f1a\u8bfb\u53d6\u5171\u4eab\u53d8\u91cfnumber\u548cready\u3002</li> <li>\u4e3b\u7ebf\u7a0b\u542f\u52a8reader\u7ebf\u7a0b\u4e4b\u540e\uff0c\u5c06number=42,ready=true\u3002\u6b63\u5e38\u60c5\u51b5\u4e0breader\u7ebf\u7a0b\u4f1a\u7b49\u5230ready\u7ebf\u7a0b\u4e3atrue\u4e4b\u540e\uff0c\u8f93\u51fanumber\u7684\u503c\uff0c\u6b63\u5e38\u662f\u8f93\u51fa42</li> <li>\u4ee3\u7801\u53ef\u80fd\u4f1a\u4e00\u503c\u6301\u7eed\u5faa\u73af\u4e0b\u53bb\uff0c\u56e0\u4e3areader\u7ebf\u7a0b\u53ef\u80fd\u6c38\u8fdc\u90fd\u770b\u4e0d\u5230ready\u503c\u3002\u4e00\u79cd\u66f4\u5947\u602a\u7684\u73b0\u8c61\u662f\uff0c\u4ee3\u7801\u8f93\u51fa\u4e3a0\u3002\u56e0\u4e3areader\u7ebf\u7a0b\u53ef\u80fd\u4f1a\u770b\u5230\u5199\u5165\u7684ready\u503c\uff0c\u4f46\u662f\u6ca1\u6709\u770b\u5230\u5199\u5165\u7684number\u7684\u503c\uff0c\u79f0\u4e3a\u91cd\u6392\u5e8f(reordering)\u3002\u5f53\u4e3b\u7ebf\u7a0b\u9996\u5148\u5199\u5165number\uff0c\u5728\u6ca1\u6709\u540c\u6b65\u7684\u60c5\u51b5\u4e0b\u5199\u5165ready\uff0c\u90a3\u4e48ready\u7ebf\u7a0b\u770b\u5230\u7684\u6570\u636e\u53ef\u80fd\u4e0e\u5199\u5165\u7684\u6570\u636e\u5b8c\u5168\u76f8\u53cd\u3002</li> </ol> <p>\ud83d\udc4b</p> <p>\u7ed3\u8bba\uff1a\u53ea\u8981\u7ebf\u7a0b\u4e4b\u95f4\u6709\u6570\u636e\u4ea4\u6362\uff0c\u5c31\u8fdb\u884c\u540c\u6b65</p> Text Only<pre><code>public class NoVisibility {\n    private static boolean ready;\n    private static int number;\n\n    private static class ReaderThread extends Thread {\n        public void run() {\n            while (!ready)\n                Thread.yield();\n            System.out.println(number);\n        }\n    }\n\n    public static void main(String[] args) {\n        new ReaderThread().start();\n        number = 42;\n        ready = true;\n    }\n}\n</code></pre> <ol> <li>\u5931\u6548\u7684\u6570\u636e\uff1a</li> <li>\u4f8b\u5b50\uff1a<ol> <li>\u5bf9\u4e8e\u5982\u4e0b\u8fd9\u4e2a\u5171\u4eab\u5bf9\u8c61\u3002\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528\u4e86set\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528\u4e86get\uff0c\u5219\u8be5\u7ebf\u7a0b\u7684get\u4e0d\u4e00\u5b9a\u4f1a\u770b\u5230\u88ab\u66f4\u65b0\u7684value\u503c\u3002</li> </ol> </li> </ol> Text Only<pre><code>public class MutableInteger {\n    private int value;\n\n    public int get(){\n        return value;\n    }\n\n    public void set(int value){\n        this.value=value;\n    }\n}\n</code></pre> <ol> <li>\u4fee\u6539\u4e4b\u540e\u7684\u7ebf\u7a0b\u5b89\u5168\u7c7b\uff1a</li> </ol> Text Only<pre><code>public class SynchronizedInteger {\n\n    private int value;\n\n    public synchronized int get() {\n        return value;\n    }\n\n    public synchronized void set(int value) {\n        this.value = value;\n    }\n\n}\n</code></pre> <ol> <li> <p>\u975e\u539f\u5b50\u64cd\u4f5c\u768464\u4f4d\u64cd\u4f5c</p> </li> <li> <p>\u6700\u4f4e\u5b89\u5168\u6027\uff1a\u5f53\u7ebf\u7a0b\u5728\u6ca1\u6709\u540c\u6b65\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u5931\u6548\u503c\uff0c\u4f46\u662f\u8fd9\u4e2a\u503c\u80af\u5b9a\u662f\u7531\u67d0\u4e2a\u7ebf\u7a0b\u8bbe\u7f6e\u7684\u503c\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u968f\u673a\u503c\u3002</p> </li> <li>\u975evolatile\u7c7b\u578b\u768464\u4f4d\u6570\u503c\u53d8\u91cf(double,long)\u3002JVM\u5bf9\u4e8e\u8fd9\u4e2a\u7c7b\u578b\u53d8\u91cf\u7684\u8bfb\u5199\uff0c\u5141\u8bb8\u4e24\u4e2a32\u4f4d\u64cd\u4f5c\u3002\u5f53\u8bfb\u53d6\u4e00\u4e2a\u975evolatile\u7c7b\u578b\u7684long\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u5982\u679c\u5bf9\u8be5\u53d8\u91cf\u7684\u8bfb\u5199\u64cd\u4f5c\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e2d\u6267\u884c\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd\u8bfb\u53d6\u5230\u4e00\u4e2a\u503c\u7684\u9ad832\u4f4d\u548c\u4e00\u4e2a\u503c\u7684\u4f4e32\u4f4d\u3002\u56e0\u6b64\uff0clong\u548cdouble\u7c7b\u578b\u7684\u53d8\u91cf\u9700\u8981\u4f7f\u7528volatile\u53d8\u91cf\u6765\u58f0\u660e\u4ed6\u4eec\uff0c\u6216\u8005\u7528\u9501\u4fdd\u62a4\u3002</li> <li>\u52a0\u9501\u548c\u53ef\u89c1\u6027</li> <li>\u5982\u679c\u7ebf\u7a0bA\u5148lock M\uff0c\u518d\u6267\u884c\u4ee3\u7801\u5757\uff0c\u518dunlock M,\u3002\u800cB\u7ebf\u7a0b\u7d27\u63a5\u7740lock M\uff0c\u6b64\u65f6B\u7ebf\u7a0b\u6267\u884c\u7684\u4ee3\u7801\u5757\u4e00\u5b9a\u53ef\u4ee5\u770b\u89c1A\u5728\u5176\u4ee3\u7801\u5757\u7684\u6240\u6709\u64cd\u4f5c\u7ed3\u679c\u3002\u5982\u679c\u6ca1\u6709\u540c\u6b65\u673a\u5236\uff0c\u5219\u65e0\u6cd5\u4fdd\u8bc1</li> <li>\u52a0\u9501\u53ef\u4ee5\u4fdd\u8bc1\u4e92\u65a5\u6027\uff0c\u540c\u65f6\u53ef\u4ee5\u4fdd\u8bc1\u5185\u5b58\u53ef\u89c1\u6027\u3002</li> <li>volatile\u53d8\u91cf\uff1a</li> <li>\u4f5c\u7528\uff1a\u6765\u786e\u4fdd\u5c06\u53d8\u91cf\u7684\u66f4\u65b0\u64cd\u4f5c\u901a\u77e5\u5230\u5176\u4ed6\u7ebf\u7a0b\u3002volatile\u7c7b\u578b\u7684\u53d8\u91cf\u7f16\u8bd1\u5668\u5728\u8fd0\u884c\u7684\u65f6\u5019\u4f1a\u6ce8\u610f\u5230\u8be5\u53d8\u91cf\u662f\u5171\u4eab\u7684\u3002\u5c31\u4e0d\u4f1a\u5c06\u5176\u548c\u5176\u4ed6\u64cd\u4f5c\u8fdb\u884c\u91cd\u6392\u5e8f\u3002\u5728\u8bfb\u53d6volatile\u53d8\u91cf\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u7684\u603b\u662f\u6700\u65b0\u5199\u5165\u7684\u503c\u3002</li> <li>\u53ef\u4ee5\u5c06volatile\u770b\u505aSynchronizedInteger,\u4f46\u662f\u66f4\u8f7b\u91cf\u7ea7(\u4e0d\u4f1a\u52a0\u9501)</li> <li>volatile\u53d8\u91cf\u53ea\u80fd\u4fdd\u8bc1\u53ef\u89c1\u6027\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u539f\u5b50\u6027</li> <li>\u4f7f\u7528\u8303\u56f4\uff1a</li> <li>\u786e\u4fdd\u53d8\u91cf\u81ea\u8eab\u7684\u53ef\u89c1\u6027</li> <li>\u786e\u4fdd\u6240\u5f15\u7528\u5bf9\u8c61\u7684\u53ef\u89c1\u6027</li> <li>\u6807\u8bc6\u91cd\u8981\u7684\u7a0b\u5e8f\u751f\u547d\u5468\u671f\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u5e38\u7528\u6765\u505aflag</li> <li>\u4f7f\u7528\u6761\u4ef6\uff1a</li> <li>\u5bf9\u53d8\u91cf\u7684\u5199\u5165\u64cd\u4f5c\u4e0d\u4f9d\u8d56\u53d8\u91cf\u7684\u5f53\u524d\u503c</li> <li>\u8be5\u53d8\u91cf\u4e0d\u4f1a\u548c\u5176\u4ed6\u72b6\u6001\u53d8\u91cf\u4e00\u8d77\u7eb3\u5165\u4e0d\u53d8\u6027\u6761\u4ef6\u4e2d</li> <li>\u5728\u8bbf\u95ee\u5bf9\u8c61\u7684\u65f6\u5019\u4e0d\u9700\u8981\u52a0\u9501</li> </ol> Text Only<pre><code>//\u5178\u578b\u4f8b\u5b50\n//\u68c0\u67e5\u67d0\u4e2a\u72b6\u6001\u6807\u8bb0\u4ee5\u5224\u65ad\u662f\u5426\u9000\u51fa\u5faa\u73af(\u7528\u9501\u4e5f\u53ef\u4ee5)\n//\u5982\u679c\u4e0d\u662fvolatile\u7c7b\u578b\uff0c\u5219\u5982\u679casleep\u88ab\u4fee\u6539\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u80fd\u770b\u4e0d\u5230\nvolatile boolean asleep;\n\n    while(!asleep){\n        countSomeSleep();\n    }\n</code></pre>"},{"location":"LANG/JUC-SUC/#32","title":"3.2 \u53d1\u5e03\u548c\u9038\u51fa","text":"<ol> <li> <p>\u53d1\u5e03(publish)\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u53d1\u5e03\u4e00\u4e2a\u5bf9\u8c61\u662f\u6307\u4f7f\u5f97\u5bf9\u8c61\u5728\u5f53\u524d\u4f5c\u7528\u57df\u4e4b\u5916\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u3002</p> </li> <li>\u4f8b\u5b50\uff1a<ol> <li>\u5c06\u4e00\u4e2a\u6307\u5411\u8be5\u5bf9\u8c61\u7684\u5f15\u7528\u4fdd\u5b58\u5230\u5176\u4ed6\u4ee3\u7801\u53ef\u4ee5\u8bbf\u95ee\u7684\u5730\u65b9\u3002</li> <li>\u6216\u8005\u662f\u67d0\u4e00\u4e2a\u79c1\u6709\u65b9\u6cd5\u4e2d\u8fd4\u56de\u8be5\u5f15\u7528\u3002</li> <li>\u6216\u8005\u662f\u5c06\u5f15\u7528\u4f20\u9012\u5230\u5176\u4ed6\u7c7b\u7684\u65b9\u6cd5\u4e2d\u3002</li> </ol> </li> <li>\u9038\u51fa(escape)\uff1a</li> <li>\u5b9a\u4e49\uff1a\u67d0\u4e9b\u4e0d\u8be5\u88abpublish\u7684\u5bf9\u8c61\u88ab\u53d1\u5e03</li> <li>\u4f8b\u5b50\uff1a</li> <li>\u7834\u574f\u5c01\u88c5\u6027\uff1apublish\u5185\u90e8\u72b6\u6001</li> <li>\u7834\u574f\u7ebf\u7a0b\u5b89\u5168\u6027\uff1a\u5728\u5bf9\u8c61\u521b\u5efa\u4e4b\u524d\u5c31\u8fd4\u56de\u5f15\u7528</li> <li>\u53d1\u5e03\u4e00\u4e2a\u5bf9\u8c61\uff1a</li> <li>\u6700\u5e38\u89c1\u7684\u65b9\u6cd5\uff1a\u5c06\u5bf9\u8c61\u7684\u5f15\u7528\u5b9a\u4e49\u4e3apublic static\u3002\u5219\u4efb\u4f55\u7c7b\u548c\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u770b\u89c1\u8be5\u5bf9\u8c61\u5f15\u7528\u3002</li> <li>\u5f53\u53d1\u5e03\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u53ef\u80fd\u4f1a\u95f4\u63a5\u53d1\u5e03\u5176\u4ed6\u5bf9\u8c61(\u6bd4\u5982\u96c6\u5408\u4e2d\u5305\u542b\u7684\u5176\u4ed6\u5bf9\u8c61)\u3002</li> </ol> Text Only<pre><code>public static Set&lt;Secret&gt; knownSecrets;\n\npublic void init(){\n    knownSecrets = new HashSet&lt;Secret&gt;();\n}\n</code></pre> <ol> <li>\u9038\u51fa\uff1a</li> <li>\u5982\u4e0b\u4ee3\u7801\u5c06\u5185\u90e8\u72b6\u6001(\u79c1\u6709\u53d8\u91cf)\u7684\u5f15\u7528\u9038\u51fa\u3002</li> <li>\u5219states\u5df2\u7ecf\u9038\u51fa\u5176\u4f5c\u7528\u57df</li> </ol> Text Only<pre><code>public class UnsafeStates {\n    private String[] states = new String[]{\"hello\"};\n\n    public String[] getStates(){\n        return states;\n    }\n}\n</code></pre> <ol> <li>\u5982\u4e0b\uff1a\u5f53ThisEscape\u5728\u8fdb\u884c\u53d1\u5e03\u5185\u90e8\u7c7bEventListener\u7684\u65f6\u5019\uff0c\u4e5f\u9690\u542b\u5730\u53d1\u5e03\u4e86ThisEscape\u5b9e\u4f8b\u672c\u8eab\u3002\u8fd9\u6837\u4f1a\u4f7f\u5f97this\u5f15\u7528\u9038\u51fa\u3002\u8fd9\u662f\u56e0\u4e3a\u4ece\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u4e2d\u5c31\u8fd4\u56de\u5bf9\u8c61\u7684\u5f15\u7528(this),\u8fd9\u662f\u4e0d\u6b63\u786e\u7684\u3002</li> <li>\u5e38\u89c1\u9519\u8bef\u60c5\u51b5\uff1a\u5728\u6784\u9020\u51fd\u6570\u4e2d\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u3002\u5219\u6b64\u65f6this\u5f15\u7528\u90fd\u4f1a\u88ab\u65b0\u521b\u5efa\u7684\u7ebf\u7a0b\u5171\u4eab\u3002</li> </ol> Text Only<pre><code>public class ThisEscape {\n    public ThisEscape(EventSource source) {\n        //\u53d1\u5e03\u5185\u90e8\u7c7b\uff0c\u5c06\u5176\u4f20\u5165\u5230source\u5b9e\u4f8b\u7684\u65b9\u6cd5\u4e2d\n        source.registerListener(new EventListener() {\n            public void onEvent(Event e) {\n                doSomething(e);\n            }\n        });\n    }\n\n    void doSomething(Event e) {\n    }\n\n\n    interface EventSource {\n        void registerListener(EventListener e);\n    }\n\n    interface EventListener {\n        void onEvent(Event e);\n    }\n\n    interface Event {\n    }\n}\n</code></pre> <ol> <li>\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u79c1\u6709\u6784\u9020\u5668+\u516c\u5171\u5de5\u5382\u65b9\u6cd5\u6765\u9632\u6b62this\u5f15\u7528\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\u9038\u51fa</li> <li>\u539f\u7406\uff1a\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u521b\u5efa\u5185\u90e8\u7c7b\uff0c\u5e76\u5c06\u5185\u90e8\u7c7b\u53d1\u5e03\u51fa\u53bb\uff0c\u8fd9\u4e24\u8005\u4e0d\u80fd\u540c\u65f6\u53d1\u751f\u3002</li> <li>\u529e\u6cd5\uff1a<ol> <li>\u9996\u5148\u79c1\u6709\u6784\u9020\u5668\uff0c\u5728\u5176\u4e2d\u521b\u5efa\u5185\u90e8\u7c7b</li> <li>\u7136\u540e\u901a\u8fc7\u516c\u5171\u7684\u5de5\u5382\u65b9\u6cd5\u6765\u53d1\u5e03 \u5185\u90e8\u7c7b</li> </ol> </li> </ol> Text Only<pre><code>public class SafeListener {\n    private final EventListener listener;\n\n    //\u79c1\u6709\u6784\u9020\u5668\n    private SafeListener() {\n        listener = new EventListener() {\n            public void onEvent(Event e) {\n                doSomething(e);\n            }\n        };\n    }\n    //\u516c\u5171\u7684\u5de5\u5382\u65b9\u6cd5\n    public static SafeListener newInstance(EventSource source) {\n        SafeListener safe = new SafeListener();\n        //\u53d1\u5e03\u5185\u90e8\u7c7b\n        source.registerListener(safe.listener);\n        return safe;\n    }\n\n    void doSomething(Event e) {\n    }\n\n\n    interface EventSource {\n        void registerListener(EventListener e);\n    }\n\n    interface EventListener {\n        void onEvent(Event e);\n    }\n\n    interface Event {\n    }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#33","title":"3.3 \u7ebf\u7a0b\u5c01\u95ed","text":"<ol> <li>\u5b9a\u4e49\uff1a\u4e00\u79cd\u907f\u514d\u540c\u6b65\u7684\u65b9\u6cd5\u5c31\u662f\u4e0d\u5171\u4eab\u6570\u636e\uff0c\u53ea\u5728\u5355\u7ebf\u7a0b\u4e2d\u8bbf\u95ee\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u7ebf\u7a0b\u5c01\u95ed\u3002\u5b83\u662f\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u6027\u7684\u6700\u7b80\u5355\u7684\u4e00\u79cd\u65b9\u5f0f\u3002</li> <li> <p>\u5e94\u7528\u573a\u666f\uff1a</p> </li> <li> <p>Swing\uff1aSwing\u4e2d\u7684\u53ef\u89c6\u5316\u7ec4\u4ef6\u548c\u6570\u636e\u6a21\u578b\u5bf9\u8c61\u90fd\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002Swing\u5c06\u4ed6\u4eec\u5c01\u95ed\u5728Swing\u7684\u4e8b\u4ef6\u5206\u53d1\u7ebf\u7a0b\u4e2d\u8bbf\u95ee\uff0c\u6765\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u6027\u3002\u5728\u9664\u4e86\u4e8b\u4ef6\u7ebf\u7a0b\u4e4b\u5916\u7684\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4e0d\u80fd\u8bbf\u95ee\u8fd9\u4e9b\u5bf9\u8c61\uff0c\u5426\u5219\u53ef\u80fd\u51fa\u9519</p> </li> <li>JDBC\uff1aJDBC\u4e2d\u7684Connection\u5bf9\u8c61\u4e0d\u4e00\u5b9a\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\u5927\u591a\u6570\u8bf7\u6c42\u90fd\u662f\u4f7f\u7528\u5355\u7ebf\u7a0b\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u4e14\u5728Connection\u5bf9\u8c61\u8fd4\u56de\u4e4b\u524d\uff0c\u4e0d\u4f1a\u5c06\u5b83\u5206\u914d\u7ed9\u5176\u4ed6\u7ebf\u7a0b\u3002</li> <li>Java\u81ea\u5e26\u7684\u7ebf\u7a0b\u5c01\u95ed\uff1a</li> <li>\u5c40\u90e8\u53d8\u91cf\uff1a\u56e0\u4e3a\u5c40\u90e8\u53d8\u91cf\u662f\u7ebf\u7a0b\u79c1\u6709\u6808\u4e2d\uff0c\u6240\u4ee5\u5fc5\u7136\u662f\u7ebf\u7a0b\u5c01\u95ed\u7684\u3002</li> <li>ThreadLocal\u7c7b</li> <li>\u5177\u4f53\u5206\u7c7b\uff1a</li> <li>ad-hoc\u7ebf\u7a0b\u5c01\u95ed\uff1a</li> <li>\u5b9a\u4e49\uff1a\u7ef4\u62a4\u7ebf\u7a0b\u5c01\u95ed\u6027\u7684\u804c\u8d23\u5b8c\u5168\u7531\u7a0b\u5e8f\u6765\u627f\u62c5\uff0c\u4e0d\u4f7f\u7528\u4efb\u4f55\u7684\u8bed\u8a00\u7279\u6027\u3002</li> <li>\u5982\u679c\u53ef\u4ee5\u786e\u4fdd\u53ea\u6709\u5355\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u7684volatile\u53d8\u91cf\u6267\u884c\u5199\u5165\u64cd\u4f5c\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u5c06volatile\u53d8\u91cf\u8fdb\u884c\u4e86\u7ebf\u7a0b\u5c01\u95ed\u3002\u800c\u4e14\u8fd8\u80fd\u4fdd\u8bc1\u5176\u4ed6\u7ebf\u7a0b\u53ef\u4ee5\u8bfb\u53d6\u8be5\u53d8\u91cf\u7684\u503c\u3002</li> <li>\u6808\u5c01\u95ed\uff1a</li> <li>\u5b9a\u4e49\uff1a\u5728\u6808\u5c01\u95ed\u4e2d\uff0c\u53ea\u6709\u901a\u8fc7\u5c40\u90e8\u53d8\u91cf\u624d\u53ef\u8bbf\u95ee\u5bf9\u8c61\u3002\u56e0\u4e3a\u4fdd\u5b58\u5728\u7ebf\u7a0b\u79c1\u6709\u7684\u6808\u4e2d\uff0c\u6240\u4ee5\u4e0d\u4f1a\u88ab\u5176\u4ed6\u7ebf\u7a0b\u8bbf\u95ee\u3002</li> <li>\u4f8b\u5b50\uff1a</li> <li>\u4e0b\u9762\u7684\u65b9\u6cd5\u4e2d\uff0c\u5bf9\u4e8eTreeSet\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u53ea\u6709\u4e00\u4e2aanimals\u5c40\u90e8\u53d8\u91cf\u3002\u8fd9\u5c31\u4fdd\u8bc1\u4e86\u5b83\u4e0d\u4f1a\u88ab\u53d1\u5e03\u3002</li> </ol> Text Only<pre><code>   public int loadTheArk(Collection&lt;Animal&gt; candidates) {\n        SortedSet&lt;Animal&gt; animals;\n        int numPairs = 0;\n        Animal candidate = null;\n\n        // animals confined to method, don't let them escape!\n        animals = new TreeSet&lt;Animal&gt;(new SpeciesGenderComparator());\n        animals.addAll(candidates);\n        for (Animal a : animals) {\n            if (candidate == null || !candidate.isPotentialMate(a))\n                candidate = a;\n            else {\n                ark.load(new AnimalPair(candidate, a));\n                ++numPairs;\n                candidate = null;\n            }\n        }\n        return numPairs;\n    }\n</code></pre> <ol> <li>ThreadLocal\u7c7b\uff1a</li> <li>\u4f5c\u7528\uff1aThreadLocal\u5bf9\u8c61\u901a\u5e38\u7528\u4e8e\u9632\u6b62\u5bf9\u53ef\u53d8\u7684\u5355\u4f8b\u5bf9\u8c61\u6216\u8005\u5168\u5c40\u53d8\u91cf\u8fdb\u884c\u5171\u4eab\u64cd\u4f5c\u3002</li> <li>\u65b9\u6cd5\uff1aget\u548cset\u65b9\u6cd5\u603b\u662f\u4e3a\u6bcf\u4e2a\u4f7f\u7528\u8be5\u53d8\u91cf\u7684\u503c\u90fd\u4fdd\u5b58\u4e00\u4efd\u72ec\u7acb\u7684\u526f\u672c\uff0c\u56e0\u6b64get\u65b9\u6cd5\u603b\u662f\u8fd4\u56de\u7531\u5f53\u524d\u6267\u884c\u7ebf\u7a0b\u5728\u8c03\u7528set\u7684\u65f6\u5019\u8bbe\u7f6e\u7684\u503c</li> <li>\u4f8b\u5b50\uff1a\u4e0b\u9762\u4e2d\u5728\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u4e2d\u521b\u5efa\u4e86\u5168\u5c40\u7684\u6570\u636e\u5e93\u8fde\u63a5(DriverManager.getConnection).\u7531\u4e8eJDBC\u7684Connection\u5bf9\u8c61\u4e0d\u4e00\u5b9a\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6709\u591a\u7ebf\u7a0b\uff0c\u5c31\u9700\u8981\u5c06JDBC\u7684\u8fde\u63a5\u64cd\u4f5c\u4fdd\u5b58\u5230ThreadLocal\u5bf9\u8c61\u4e2d\u3002\u5219\u5728\u8c03\u7528get\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u83b7\u5f97\u5c5e\u4e8e\u81ea\u5df1\u7684\u8fde\u63a5\u3002</li> <li>\u4f8b\u5b50\uff1a\u5f53\u67d0\u4e2a\u9891\u7e41\u7684\u64cd\u4f5c\u9700\u8981\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u6bd4\u5982\u7f13\u51b2\u533a\u7684\u65f6\u5019\uff0c\u800c\u53c8\u5e0c\u671b\u907f\u514d\u6bcf\u6b21\u90fd\u91cd\u65b0\u5206\u914d\u8be5\u4e34\u65f6\u5bf9\u8c61\uff0c\u5219\u5c31\u53ef\u4ee5\u4f7f\u7528ThreadLocal\u3002\u6bd4\u5982Integer.toString()\u4f1a\u4f7f\u7528ThreadLocal\u7684\u7f13\u51b2\u533a\u3002</li> <li>\u5f53\u67d0\u4e2a\u7ebf\u7a0b\u521d\u6b21\u8c03\u7528ThreadLocal.get\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u8c03\u7528initialValue\u65b9\u6cd5\u6765\u83b7\u53d6\u521d\u59cb\u503c\u3002\u53ef\u4ee5\u5c06ThreadLocal\u770b\u505aMap\u3002 <li>\u5c06\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u53d8\u6362\u4e3a\u591a\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u5c06\u5171\u4eab\u7684\u5168\u5c40\u53d8\u91cf\u6539\u4e3aThreadLocal\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u6027\u3002</li> Text Only<pre><code>public class ConnectionDispenser {\n    static String DB_URL = \"jdbc:mysql://localhost/javalab\";\n\n    private ThreadLocal&lt;Connection&gt; connectionHolder\n            = new ThreadLocal&lt;Connection&gt;() {\n        public Connection initialValue() {\n            try {\n                //\u5168\u5c40\u7684\u6570\u636e\u5e93\u8fde\u63a5\n                return DriverManager.getConnection(DB_URL);\n            } catch (SQLException e) {\n                throw new RuntimeException(\"Unable to acquire Connection, e\");\n            }\n        };\n    };\n\n    public Connection getConnection() {\n        return connectionHolder.get();\n    }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#34","title":"3.4 \u4e0d\u53ef\u53d8\u5bf9\u8c61","text":"<ol> <li>\u5b9a\u4e49\uff1a\u67d0\u4e2a\u5bf9\u8c61\u5728\u521b\u5efa\u4e4b\u540e\u5c31\u4e0d\u80fd\u6539\u53d8</li> <li>\u7ebf\u7a0b\u5b89\u5168\uff1a\u4e0d\u53ef\u53d8\u5bf9\u8c61\u4e00\u5b9a\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5b83\u4eec\u7684\u72b6\u6001\u53ea\u80fd\u901a\u8fc7\u6784\u9020\u51fd\u6570\u6765\u6539\u53d8\u3002</li> </ol> <p>\ud83d\udd14</p> <p>\u4e0d\u53ef\u53d8\u5bf9\u8c61\u4e0d\u7b49\u4e8e\u628a\u6240\u6709field\u90fd\u52a0\u4e0afinal\u3002\u56e0\u4e3afinal\u7684\u53d8\u91cf\u53ef\u80fd\u4fdd\u5b58\u7684\u662f\u53ef\u53d8\u5bf9\u8c61\u7684\u5f15\u7528\u3002</p> <ol> <li> <p>\u6761\u4ef6\uff1a</p> </li> <li> <p>\u5bf9\u8c61\u521b\u5efa\u4e4b\u540e\u5c31\u4e0d\u80fd\u4fee\u6539</p> </li> <li>\u5bf9\u8c61\u7684\u6240\u6709field\u90fd\u662ffinal\u7c7b\u578b</li> <li>\u5bf9\u8c61\u7684\u521b\u5efa(\u6784\u9020\u51fd\u6570)\u6ca1\u6709this\u9038\u51fa\u3002</li> <li>final</li> <li>\u5b9a\u4e49\uff1afinal\u53ef\u4ee5\u89c6\u4e3aC++\u4e2d\u7684const\u673a\u5236\u7684\u53d7\u9650\u5236\u7248\u672c\uff0c\u7528\u4e8e\u6784\u5efa\u4e0d\u53ef\u53d8\u5bf9\u8c61</li> <li>\u6027\u8d28\uff1a</li> <li>final\u7c7b\u578b\u7684field\u662f\u4e0d\u53ef\u4ee5\u88ab\u4fee\u6539\u7684</li> <li>final\u53ef\u4ee5\u4fdd\u8bc1\u521d\u59cb\u5316\u8fc7\u7a0b\u7684\u5b89\u5168\u6027\uff0c\u4ece\u800c\u53ef\u4ee5\u4e0d\u53d7\u9650\u5236\u7684\u8bbf\u95ee\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u5e76\u4e14\u5728\u5171\u4eab\u8fd9\u4e9b\u5bf9\u8c61\u7684\u65f6\u5019\u65e0\u987b\u540c\u6b65</li> <li>\u9664\u975e\u9700\u8981\u66f4\u9ad8\u53ef\u89c1\u6027\uff0c\u5426\u5219\u4e00\u822c\u5c06field\u58f0\u660e\u4e3aprivate. \u540c\u6837\uff0c\u5982\u679c\u4e0d\u9700\u8981\u6539\u53d8\uff0c\u5219\u4e00\u822c\u5c06field\u58f0\u660e\u4e3afinal</li> <li>\u4f7f\u7528Volatile\u6765\u53d1\u5e03\u4e0d\u53ef\u53d8\u5bf9\u8c61</li> <li>\u6b65\u9aa4\uff1a</li> <li>\u66f4\u65b0\u7f13\u5b58\u7684\u7ed3\u679c</li> <li>\u5224\u65ad\u9700\u6c42\u662f\u5426\u5728\u7f13\u5b58\u4e2d</li> <li>\u6027\u8d28\uff1a</li> <li>\u5f53\u8bbf\u95ee\u548c\u66f4\u65b0\u591a\u4e2a\u53d8\u91cf\u7684\u65f6\u5019\u51fa\u73b0\u4e86\u7ade\u4e89\u6761\u4ef6\u95ee\u9898\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5c06\u8fd9\u4e9b\u53d8\u91cf\u5168\u90e8\u4fdd\u5b58\u5728\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5bf9\u8c61\u4e2d\u6765\u6d88\u9664\uff0c\u800c\u4e0d\u662f\u50cf\u53ef\u53d8\u5bf9\u8c61\u4e00\u6837\u4f7f\u7528\u9501\u3002</li> <li>\u5219\u8be5\u53d8\u91cf\u5728\u8d4b\u503c\u8fc7\u540e\u5c31\u4e0d\u80fd\u6539\u53d8\u3002</li> <li>\u5f53\u4f7f\u7528volatile\u7684\u65f6\u5019\uff0c\u5219\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u6539\u53d8\u7f13\u5b58\uff0c\u5219\u8be5\u6539\u53d8\u5bf9\u4e8e\u6240\u6709\u7ebf\u7a0b\u53ef\u89c1\u3002</li> </ol> Text Only<pre><code>public class OneValueCache {\n    private final BigInteger lastNumber;\n    private final BigInteger[] lastFactors;\n\n    public OneValueCache(BigInteger i,\n                         BigInteger[] factors) {\n        lastNumber = i;\n        lastFactors = Arrays.copyOf(factors, factors.length);\n    }\n\n    public BigInteger[] getFactors(BigInteger i) {\n        if (lastNumber == null || !lastNumber.equals(i))\n            return null;\n        else\n            return Arrays.copyOf(lastFactors, lastFactors.length);\n    }\n}\n</code></pre> <ol> <li>\u5b89\u5168\u53d1\u5e03\uff1a</li> <li>\u6982\u5ff5\uff1a\u67d0\u4e9b\u60c5\u51b5\u4e0b\u6211\u4eec\u5e0c\u671b\u5728\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u5bf9\u8c61\uff0c\u6b64\u65f6\u5fc5\u987b\u786e\u4fdd\u5b89\u5168\u8fdb\u884c\u5171\u4eab\u3002</li> <li>\u4e0d\u6b63\u786e\u7684\u60c5\u51b5\uff1a<ol> <li>\u5b8c\u5168\u4f7f\u7528public\u6765\u8fdb\u884c\u53d1\u5e03</li> <li>\u5982\u4e0b\uff0c\u5982\u679c\u8be5Holder\u7c7b\u4f7f\u7528public\u65b9\u5f0f\u8fdb\u884c\u53d1\u5e03\uff0c\u5219\u53ef\u80fd\u5176\u4ed6\u7ebf\u7a0b\u901a\u8fc7StuffIntoPublic\u6765\u770b\u89c1Holder\u7684\u4e0d\u540c\u72b6\u6001</li> </ol> </li> </ol> Text Only<pre><code>//\u53d1\u5e03\npublic class StuffIntoPublic {\n    public Holder holder;\n\n    public  void init(){\n        holder = new Holder(42);\n    }\n}\n\n//Holder\u5b9a\u4e49\nclass Holder {\n    private int n;\n\n    //\u521d\u59cb\u5316\u6784\u9020\u5668\n    public Holder(int n) {\n        this.n = n;\n    }\n\n    public void assertSanity() {\n        if (n != n)\n            throw new AssertionError(\"This statement is false.\");\n    }\n}\n</code></pre> <ol> <li> <p>\u5b89\u5168\u53d1\u5e03\u7684\u5e38\u7528\u6a21\u5f0f\uff1a</p> </li> <li> <p>\u65b9\u6cd5\uff1a</p> <ol> <li>\u5728\u9759\u6001\u521d\u59cb\u5316\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u4e00\u4e2a\u5bf9\u8c61\u5f15\u7528</li> <li>\u5c06\u5bf9\u8c61\u7684\u5f15\u7528\u4fdd\u5b58\u5230volatile\u7c7b\u578b\u7684field</li> <li>\u5c06\u5bf9\u8c61\u7684\u5f15\u7528\u4fdd\u5b58\u5230\u67d0\u4e2a\u6b63\u786e\u6784\u9020\u7684\u5bf9\u8c61\u7684final\u7c7b\u578bfield\u4e2d</li> <li>\u5c06\u5bf9\u8c61\u7684\u5f15\u7528\u4fdd\u5b58\u5230\u4e00\u4e2a\u7531\u9501\u4fdd\u62a4\u7684\u57df\u4e2d</li> </ol> </li> <li>\u5e38\u89c1\u60c5\u51b5\uff1a</li> <li>\u5c06\u5bf9\u8c61\u653e\u5165\u67d0\u4e2a\u7ebf\u7a0b\u5b89\u5168\u7684\u5bb9\u5668\u4e2d</li> <li>\u4f7f\u7528\u9759\u6001\u7684\u521d\u59cb\u5316\u5668</li> <li>\u4e8b\u5b9e\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff1a</li> <li>\u5b9a\u4e49\uff1a\u5b9a\u4e49\u4e3a\u53ef\u53d8\u5bf9\u8c61\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u4e00\u76f4\u6ca1\u6709\u6539\u53d8\uff0c\u7a0b\u5e8f\u53ea\u9700\u8981\u628a\u5b83\u4eec\u89c6\u4e3a\u4e0d\u53ef\u53d8\u5bf9\u8c61\u5c31\u53ef\u4ee5\u3002</li> <li>\u53ef\u53d8\u5bf9\u8c61\uff1a</li> <li>\u5b89\u5168\u53d1\u5e03\u53ea\u80fd\u4fdd\u8bc1\u5bf9\u8c61\u6784\u5efa\u7684\u65f6\u5019\u7684\u5b89\u5168\u6027\u3002</li> <li>\u53ef\u53d8\u5bf9\u8c61\u5fc5\u987b\u672c\u8eab\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u6216\u8981\u901a\u8fc7\u9501\u7b49\u6765\u4fdd\u8bc1\u662f\u7ebf\u7a0b\u5b89\u5168\u7684</li> </ol>"},{"location":"LANG/JUC-SUC/#4","title":"4 .\u5bf9\u8c61\u7684\u7ec4\u5408","text":""},{"location":"LANG/JUC-SUC/#41","title":"4.1 \u8bbe\u8ba1\u7ebf\u7a0b\u5b89\u5168\u7684\u7c7b","text":"<ol> <li>\u57fa\u672c\u8981\u7d20\uff1a</li> <li>\u627e\u51fa\u6784\u6210\u5bf9\u8c61\u72b6\u6001\u7684\u6240\u6709\u53d8\u91cf</li> <li>\u627e\u51fa\u7ea6\u675f\u72b6\u6001\u53d8\u91cf\u7684\u4e0d\u53d8\u6027\u6761\u4ef6</li> <li>\u5efa\u7acb\u5bf9\u8c61\u72b6\u6001\u7684\u5e76\u53d1\u8bbf\u95ee\u7ba1\u7406\u7b56\u7565</li> <li>\u4f8b\u5b50\uff1a</li> <li>\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u57fa\u672c\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u6784\u6210\u4e86\u8be5\u7c7b\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u57df\u5c31\u53ea\u6709\u4e00\u4e2avalue\u6210\u5458\u53d8\u91cf</li> <li>\u4e00\u4e2a\u5305\u542b\u4e86\u5f15\u7528\u7c7b\u578b\u7684\u7c7b\uff0c\u5176\u72b6\u6001\u4e5f\u5305\u542b\u5176\u5f15\u7528\u5bf9\u8c61\u7684\u72b6\u6001\u3002\u6bd4\u5982\u94fe\u8868\u7684\u72b6\u6001\u5c31\u5305\u62ec\u5176\u4e2d\u6240\u6709\u7ed3\u70b9\u7684\u72b6\u6001\u3002</li> </ol> Text Only<pre><code>public final class Counter {\n    @GuardedBy(\"this\") private long value = 0;\n\n    public synchronized long getValue() {\n        return value;\n    }\n\n    public synchronized long increment() {\n        if (value == Long.MAX_VALUE)\n            throw new IllegalStateException(\"counter overflow\");\n        return ++value;\n    }\n}\n</code></pre> <ol> <li>\u540c\u6b65\u7b56\u7565\uff1a\u5b9a\u4e49\u4e86\u5982\u4f55\u5728\u4e0d\u8fdd\u80cc\u5bf9\u8c61\u4e0d\u53d8\u6761\u4ef6\u6216\u8005\u540e\u9a8c\u6761\u4ef6\u4e0b\u5bf9\u4e8e\u5176\u72b6\u6001\u7684\u8bbf\u95ee\u64cd\u4f5c\u8fdb\u884c\u534f\u540c\u3002</li> <li> <p>\u6536\u96c6\u540c\u6b65\u9700\u6c42\uff1a</p> </li> <li> <p>\u72b6\u6001\u7a7a\u95f4\uff1a\u5bf9\u8c61\u548c\u53d8\u91cf\u6240\u6709\u53d6\u503c\u7684\u7ec4\u5408\u3002\u6240\u4ee5final \u7684field\u8d8a\u591a\uff0c\u5219\u72b6\u6001\u7a7a\u95f4\u8d8a\u5c0f\uff0c\u8d8a\u53ef\u4ee5\u7b80\u5316\u5206\u6790\u8fc7\u7a0b\u3002</p> </li> <li> <p>\u4e0d\u53ef\u53d8\u6761\u4ef6\uff1a</p> <ol> <li>\u5b9a\u4e49\uff1a\u5728\u7c7b\u4e2d\u4f53\u73b0\uff0c\u7528\u4e8e\u5224\u65ad\u72b6\u6001\u662f\u6709\u6548\u8fd8\u662f\u65e0\u6548\u3002</li> <li>\u4f8b\u5b50\uff1aCounter\u4e2d\u7684Value\u57df</li> <li>Value\u57df\u662fLong.MIN_VALUE\u5230Long.MAX_VALUE\u7c7b\u578b\u3002\u4f46\u662fValue\u9690\u542b\u7740&gt;=0</li> <li>\u540e\u9a8c\u6761\u4ef6\uff1a\u6bd4\u5982\u5982\u679cCounter\u7684\u72b6\u6001\u76ee\u524d\u662f17,\u90a3\u4e48\u4e0b\u4e00\u4e2a\u6709\u6548\u72b6\u6001\u53ea\u80fd\u662f18\u3002\u5219\u8be5\u64cd\u4f5c\u662f\u590d\u5408\u64cd\u4f5c\u3002</li> <li>\u5fc5\u987b\u4e86\u89e3\u5bf9\u8c61\u7684\u4e0d\u53d8\u6027\u6761\u4ef6\u548c\u540e\u9a8c\u6761\u4ef6\uff0c\u624d\u80fd\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u6027\u3002\u8981\u6ee1\u8db3\u5728\u72b6\u6001\u53d8\u91cf\u7684\u6709\u6548\u503c\u6216\u8005\u72b6\u6001\u8f6c\u6362\u4e0a\u7684\u5404\u79cd\u7ea6\u675f\u6761\u4ef6\uff0c\u5c31\u5fc5\u987b\u501f\u52a9\u539f\u5b50\u6027\u548c\u5c01\u88c5\u6027\u3002</li> <li>\u4f9d\u8d56\u72b6\u6001\u7684\u64cd\u4f5c\uff1a</li> <li>\u5b9a\u4e49\uff1a\u5982\u679c\u67d0\u4e2a\u64cd\u4f5c\u5305\u542b\u6709\u57fa\u4e8e\u72b6\u6001\u7684\u5148\u9a8c\u6027\u6761\u4ef6\uff0c\u5219\u8be5\u64cd\u4f5c\u88ab\u79f0\u4e3a\u4f9d\u8d56\u72b6\u6001\u7684\u64cd\u4f5c\u3002</li> <li>\u4f8b\u5b50\uff1a\u6bd4\u5982\u4e0d\u80fd\u4ece\u7a7a\u961f\u5217\u4e2d\u79fb\u9664\u4e00\u4e2a\u5143\u7d20</li> <li>\u5355\u7ebf\u7a0b\u60c5\u51b5\uff1a\u5982\u679c\u5148\u9a8c\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5219\u5fc5\u7136\u5931\u8d25</li> <li>\u591a\u7ebf\u7a0b\u60c5\u51b5\uff1a\u5148\u9a8c\u6761\u4ef6\u53ef\u80fd\u4f1a\u53d7\u5176\u4ed6\u7ebf\u7a0b\u7684\u5f71\u54cd\uff0c\u9700\u8981\u7b49\u5230\u5148\u9a8c\u6761\u4ef6\u4e3a\u771f\u518d\u6267\u884c\u3002\u6bd4\u5982\u4e00\u4e2a\u6d88\u8d39\u8005\u7ebf\u7a0b\uff0c\u53ef\u4ee5\u5728\u751f\u4ea7\u8005\u751f\u4ea7\u4e4b\u540e\uff0c\u8fdb\u884c\u6d88\u8d39\u3002\u53ef\u4ee5\u901a\u8fc7\u963b\u585e\u961f\u5217\u6216\u8005\u4fe1\u53f7\u91cf\u6765\u5b9e\u73b0\u3002</li> <li>\u72b6\u6001\u7684\u6240\u6709\u6743\uff1a</li> <li>Java\u4e2d\u7531\u4e8eGC\u7684\u5b58\u5728\uff0c\u5219\u4f7f\u5f97\u6240\u6709\u6743\u7684\u8003\u8651\u8f83\u5c11\u3002</li> <li>\u5bf9\u8c61\u5bf9\u5b83\u6240\u5c01\u88c5\u7684\u72b6\u6001\u62e5\u6709\u6240\u6709\u6743\u3002</li> <li>\u5982\u679c\u53d1\u5e03\u4e86\u67d0\u4e2a\u53ef\u53d8\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5219\u4e0d\u5728\u72ec\u4eab\u8be5\u5bf9\u8c61\u7684\u63a7\u5236\u6743\u3002</li> </ol> </li> </ol>"},{"location":"LANG/JUC-SUC/#42","title":"4.2 \u5b9e\u4f8b\u5c01\u95ed\uff1a","text":"<ol> <li>\u5b9e\u4f8b\u5c01\u95ed</li> <li>\u5b9a\u4e49\uff1a\u5f53\u4e00\u4e2a\u5bf9\u8c61\u88ab\u5c01\u95ed\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u7684\u65f6\u5019\uff0c\u80fd\u591f\u8bbf\u95ee\u88ab\u5c01\u88c5\u5bf9\u8c61\u7684\u6240\u6709\u4ee3\u7801\u8def\u5f84\u90fd\u662f\u5df2\u77e5\u7684\u3002\u4e0e\u5bf9\u8c61\u88ab\u653e\u5230\u6574\u4e2a\u7a0b\u5e8f\u4e2d\u7684\u8bbf\u95ee\u60c5\u51b5\u76f8\u6bd4\uff0c\u53ef\u4ee5\u786e\u4fdd\u4ee5\u7ebf\u7a0b\u5b89\u5168\u7684\u65b9\u5f0f\u8fdb\u884c\u4f7f\u7528\u8be5\u5bf9\u8c61\u3002</li> <li> <p>\u8303\u56f4\uff1a</p> <ol> <li>\u5bf9\u8c61\u53ef\u4ee5\u88ab\u5c01\u95ed\u5230\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u4e2d</li> <li>\u53ef\u4ee5\u88ab\u5c01\u95ed\u5230\u4e00\u4e2a\u4f5c\u7528\u57df\u5185(\u6bd4\u5982\u4f5c\u4e3a\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf)</li> <li>\u53ef\u4ee5\u88ab\u5c01\u88c5\u5230\u7ebf\u7a0b\u5185</li> <li>\u4f8b\u5b50\uff1a</li> <li>\u4e0b\u9762\u7684PersonSet\u7684\u72b6\u6001\u5305\u542bHashSet\u7684\u72b6\u6001\uff0c\u800cHashSet\u5e76\u975e\u7ebf\u7a0b\u5b89\u5168\u3002</li> <li>\u5c06HashSet\u5c01\u95ed\u5230PersonSet\u4e2d\uff0c\u901a\u8fc7\u79c1\u6709\u53d8\u91cf\u5b9e\u73b0\u3002</li> <li>\u552f\u4e00\u80fd\u8bbf\u95eemySet\u5c31\u662faddPerson\u548ccontainsPerson\uff0c\u5728\u6267\u884c\u4ed6\u4eec\u7684\u65f6\u5019\u90fd\u83b7\u5f97\u4e86PersonSet\u7684\u9501\u3002</li> <li>\u56e0\u6b64PersonSet\u7684\u72b6\u6001\u5b8c\u5168\u7531\u5185\u7f6e\u9501\u6765\u4fdd\u62a4\uff0c\u6240\u4ee5\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u7c7b\u3002</li> <li>\u66f4\u591a\u4f8b\u5b50\uff1a\u6bd4\u5982Java\u7684\u5bb9\u5668\u7c7b\u4e2dArrayList\u5c31\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\u4f46\u662f\u901a\u8fc7\u5305\u88c5\u5668\u5de5\u5382\u65b9\u6cd5\uff0c\u4f7f\u7528\u88c5\u9970\u5668\u628a\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u7c7b\u5c01\u95ed\u5728\u4e00\u4e2a\u540c\u6b65\u7684\u5bf9\u8c61\u4e2d\u3002\u6240\u6709\u5bf9\u5e95\u5c42\u5bf9\u8c61\u7684\u8bbf\u95ee\u90fd\u901a\u8fc7\u5305\u88c5\u5668\u6765\u8fdb\u884c\u3002</li> </ol> </li> </ol> Text Only<pre><code>public class PersonSet {\n    @GuardedBy(\"this\") private final Set&lt;Person&gt; mySet = new HashSet&lt;Person&gt;();\n\n    public synchronized void addPerson(Person p) {\n        mySet.add(p);\n    }\n\n    public synchronized boolean containsPerson(Person p) {\n        return mySet.contains(p);\n    }\n\n    interface Person {\n    }\n}\n</code></pre> <ol> <li>Java\u76d1\u89c6\u5668\u6a21\u5f0f\uff1a</li> <li>\u5b9a\u4e49\uff1a\u9075\u5faaJava\u76d1\u89c6\u5668\u6a21\u5f0f\u7684\u5bf9\u8c61\u4f1a\u628a\u5bf9\u8c61\u7684\u6240\u6709\u53ef\u53d8\u72b6\u6001\u90fd\u7ed9\u5c01\u88c5\u8d77\u6765\uff0c\u5e76\u7531\u81ea\u5df1\u7684\u5185\u7f6e\u9501\u6765\u4fdd\u62a4\u3002</li> <li>\u4f8b\u5b50\uff1a<ol> <li>\u5982\u4e0b\u7684\u7c7b\u901a\u8fc7\u79c1\u6709\u9501\u6765\u4fdd\u62a4\u72b6\u6001\uff0c\u800c\u4e0d\u662f\u5185\u7f6e\u9501\u3002</li> <li>\u4f18\u70b9\uff1a\u53ef\u4ee5\u5c06\u9501\u53d8\u4e3a\u79c1\u6709\uff0c\u4f7f\u5f97\u5ba2\u6237\u4ee3\u7801\u65e0\u6cd5\u5f97\u5230\u9501\uff0c\u53ea\u80fd\u901a\u8fc7\u516c\u6709\u65b9\u6cd5\u83b7\u5f97\u9501\u3002</li> </ol> </li> </ol> Text Only<pre><code>public class PrivateLock {\n    private final Object myLock = new Object();\n    @GuardedBy(\"myLock\") Widget widget;\n\n    void someMethod() {\n        synchronized (myLock) {\n            // Access or modify the state of widget\n        }\n    }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#suc","title":"SUC","text":""},{"location":"LANG/JUC-SUC/#1","title":"1.\u6982\u8ff0","text":""},{"location":"LANG/JUC-SUC/#_2","title":"\u7ec3\u4e60\u9898\u603b\u7ed3\uff1a","text":"<ol> <li>\u5b9e\u73b0\u4e00\u4e2a\u5177\u6709\u5982\u4e0b\u7c7b\u578b\u58f0\u660e\u7684compose\u65b9\u6cd5\u3002\u6b64\u65b9\u6cd5\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570h\uff0c\u5b83\u662f\u8f93\u5165\u51fd\u6570f\u548cg\u7684\u7ec4\u5408\u3002</li> </ol> Text Only<pre><code>  def compose[A, B, C](f: B =&gt; C, g: A =&gt; B): A =&gt; C = {\n    // A =&gt; C\n    a =&gt; f(g(a))\n  }\n</code></pre> <ol> <li>\u5b9e\u73b0\u4e00\u4e2a\u5177\u6709\u5982\u4e0b\u7c7b\u578b\u58f0\u660e\u7684fuse\u65b9\u6cd5\uff0c\u82e5a\u548cb\u90fd\u975e\u7a7a\uff0c\u5219\u8fd4\u56de\u7684Option\u5bf9\u8c61\u5e94\u8be5\u5305\u542bOption\u5bf9\u8c61a\u548cb\u4e2d\u7684\u503c\u7684\u4e8c\u5143\u7ec4\uff08\u4f7f\u7528for\u63a8\u5bfc\u5f0f\uff09\u3002</li> </ol> Text Only<pre><code>  def fuse[A, B](a: Option[A], b: Option[B]): Option[(A, B)] = {\n    val ans = for {\n      x &lt;- a\n      y &lt;- b\n    } yield {\n      (x, y)\n    }\n    ans\n  }\n</code></pre> <ol> <li>\u5b9e\u73b0\u4e00\u4e2acheck\u65b9\u6cd5\uff0c\u5176\u53c2\u6570\u662f\u7c7b\u578b\u4e3aT\u7684\u503c\u7684\u5e8f\u5217\u548c\u7c7b\u578b\u4e3aT =&gt; Boolean\u7684\u51fd\u6570\uff0c\u5f53\u4e14\u4ec5\u5f53 pred \u51fd\u6570\u5bf9 xs \u4e2d\u6240\u6709\u7684\u503c\u90fd\u4e3a\u771f\uff0c\u5e76\u4e14\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u65f6\uff0ccheck\u624d\u8fd4\u56de\u771f</li> </ol> Text Only<pre><code>  def check[T](xs: List[T])(p: T =&gt; Boolean): Boolean = {\n    import scala.util.{Try, Success, Failure}\n    var flag = false\n    xs.foreach(\n      item =&gt; {\n        flag = Try(p(item)) match {\n          case Success(value) =&gt; value\n          case Failure(exception) =&gt; false\n        }\n      }\n    )\n    flag\n  }\n</code></pre> <ol> <li>\u5b9e\u73b0\u4e00\u4e2acombinations\u51fd\u6570\uff0c\u8f93\u5165\u662f\u4e00\u4e2a\u5143\u7d20\u5e8f\u5217\uff0c\u8f93\u51fa\u662f\u957f\u5ea6\u4e3an\u7684\u6240\u6709\u53ef\u80fd\u7ec4\u5408\u7684\u904d\u5386\u5668\u3002\u7ec4\u5408\u6307\u7684\u662f\u4ece\u4e00\u4e2a\u5143\u7d20\u96c6\u5408\u4e2d\u9009\u51fa\u4e00\u4e2a\u5b50\u96c6\u7684\u65b9\u5f0f\uff0c\u6bcf\u4e2a\u5143\u7d20\u53ea\u88ab\u9009\u62e9\u4e00\u6b21\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u5173\u5fc3\u5143\u7d20\u5b50\u96c6\u4e2d\u7684\u6b21\u5e8f\u3002\u6bd4\u5982\uff0c\u7ed9\u5b9a\u5e8f\u5217 Seq(1, 4, 9, 16)\uff0c\u957f\u5ea6\u4e3a2\u7684\u7ec4\u5408\u5305\u62ecSeq(1, 4)\u3001Seq(1, 9)\u3001Seq(1,16)\u3001Seq(4, 9)\u3001Seq(4, 16)\u548c Seq(9, 16)\u3002combinations\u51fd\u6570\u7684\u5b9a\u4e49\u58f0\u660e\u5982\u4e0b\uff08\u53c2\u89c1\u6807\u51c6\u5e93\u6587\u6863\u4e2dIterator\u7684API\uff09\u3002</li> </ol> Text Only<pre><code>  def myCombinations(i: Int, ints: List[Int]): List[List[Int]] = {\n    if (i == 0) {\n      List(List())\n    } else {\n      ints.flatMap(\n        item =&gt; {\n          val ans = myCombinations(i - 1, ints.filter(_ != item))\n          ans.map(\n            list =&gt; {\n              if(list.nonEmpty &amp;&amp; list.head &lt; item) list :+ item\n              else if(list.isEmpty) list :+ item\n              else List()\n            }\n          )\n        }\n      ).filter(_.nonEmpty)\n    }\n  }\n</code></pre> <ol> <li>\u5047\u8bbe\u8bfb\u8005\u548c\u540c\u4e8b\u4eec\u540c\u5904\u4e00\u4e2a\u529e\u516c\u5ba4\uff0c\u5404\u81ea\u6709\u4e00\u4e2a\u9694\u95f4\uff0c\u5927\u5bb6\u4e92\u76f8\u770b\u4e0d\u89c1\u5bf9\u65b9\uff0c\u4e14\u4e0d\u80fd\u8bf4\u8bdd\uff08\u4f1a\u5435\u5230\u522b\u4eba\uff09\u3002\u56e0\u4e3a\u90fd\u88ab\u9650\u5236\u5728\u9694\u95f4\u4e2d\uff0c\u6240\u4ee5\u6bcf\u4e2a\u4eba\u90fd\u65e0\u6cd5\u786e\u8ba4\u4f20\u9012\u805a\u4f1a\u6d88\u606f\u7684\u7eb8\u6761\u662f\u5426\u5df2\u7ecf\u5230\u8fbe\u76ee\u7684\u5730\u3002\u5728\u67d0\u4e00\u65f6\u523b\uff0c\u5176\u4e2d\u4e00\u4eba\u88ab\u53eb\u5230\u8001\u677f\u529e\u516c\u5ba4\uff0c\u88ab\u6c38\u4e45\u201c\u6263\u7559\u201d\u5728\u90a3\u91cc\u3002\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u4f7f\u5927\u5bb6\u80fd\u591f\u786e\u5b9a\u4f55\u65f6\u80fd\u591f\u805a\u4f1a\u3002\u9664\u88ab\u8001\u677f\u53eb\u8d70\u7684\u90a3\u4f4d\u4e4b\u5916\uff0c\u6240\u6709\u4eba\u90fd\u9700\u8981\u540c\u65f6\u505a\u51fa\u51b3\u5b9a\u3002\u5982\u679c\u6709\u4e9b\u7eb8\u6761\u88ab\u9012\u5230\u76ee\u7684\u5730\u65f6\u53d1\u751f\u968f\u673a\u6027\u5931\u8bef\uff0c\u5219\u8be5\u5982\u4f55\u6539\u8fdb\u7b97\u6cd5\uff1f</li> </ol> Text Only<pre><code>import SUC.chapter01.Person.peopleMap\n\nimport scala.collection.mutable.Queue\nimport scala.collection.concurrent.TrieMap\nimport scala.util.Random\n\nsealed trait PartyStatus\ncase object NotDecided extends PartyStatus\ncase object CanParty extends PartyStatus\ncase object CannotParty extends PartyStatus\n\nobject Person{\n  def apply(name: String, status: PartyStatus = NotDecided): Person = {\n    new Person(name, status)\n  }\n  // \u5047\u8bbe\u6709\u4e00\u4e2a\u5168\u5c40\u7684\u7ebf\u7a0b\u5b89\u5168\u7684people\u6620\u5c04\uff0c\u7528\u4e8e\u6839\u636e\u540d\u5b57\u5feb\u901f\u67e5\u627ePerson\u5b9e\u4f8b\n  private val peopleMap: TrieMap[String, Person] = TrieMap[String, Person]()\n}\nclass Person(val name: String, var status: PartyStatus = NotDecided) {\n  // \u4f7f\u7528\u7ebf\u7a0b\u5b89\u5168\u7684\u961f\u5217\n  private val queue = Queue[(String, PartyStatus)]()\n\n  def this(name: String, status: PartyStatus, peopleMap: TrieMap[String, Person]) = {\n    this(name, status)\n    peopleMap += (this.name -&gt; this)\n  }\n\n  def sendNote(to: String, note: PartyStatus): Unit = {\n    queue.enqueue((to, note))\n  }\n\n  // \u4f18\u5316\u67e5\u627e\u4eba\u7684\u903b\u8f91\n  def receiveNote(from: String, note: PartyStatus): Unit = {\n    peopleMap.get(from) match {\n      case Some(person) =&gt;\n        if (note == CannotParty) status = CannotParty\n        else if (status == NotDecided) status = note\n      case None =&gt; // \u5982\u679c\u627e\u4e0d\u5230\u4eba\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u8bb0\u5f55\u9519\u8bef\u6216\u8005\u91c7\u53d6\u5176\u4ed6\u63aa\u65bd\n    }\n  }\n\n  def updateStatus(): Unit = {\n    while (queue.nonEmpty) {\n      val (to, note) = queue.dequeue()\n      peopleMap.get(to) match {\n        case Some(person) =&gt; person.receiveNote(name, note)\n        case None =&gt; // \u540c\u6837\u7684\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5904\u7406\u63a5\u6536\u5230\u4e0d\u5b58\u5728\u7684\u4eba\u7684note\u7684\u60c5\u51b5\n      }\n    }\n  }\n}\n\nobject PartyAlgorithm {\n  def main(args: Array[String]): Unit = {\n    // \u521d\u59cb\u5316peopleMap\n    val peopleMap = TrieMap[String, Person]()\n    List(\"Alice\", \"Bob\", \"Charlie\").foreach(name =&gt; new Person(name, CanParty, peopleMap))\n    new Person(\"David\", CannotParty, peopleMap) // David is detained\n\n    val maxRounds = 5\n    for (round &lt;- 1 to maxRounds) {\n      peopleMap.values.foreach(_.updateStatus())\n      if (peopleMap.values.forall(_.status == CannotParty)) {\n        println(\"Everyone knows that someone is detained.\")\n        return\n      } else if (peopleMap.values.forall(_.status == CanParty)) {\n        println(\"Everyone can party!\")\n        return\n      }\n      if (round == maxRounds) {\n        println(\"No consensus reached after \" + maxRounds + \" rounds.\")\n        return\n      }\n    }\n    println(\"Reached maximum rounds without consensus.\")\n  }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#2jvmjvm","title":"2.JVM\u4e0eJVM\u7684\u5e76\u53d1\u6027","text":""},{"location":"LANG/JUC-SUC/#21_1","title":"2.1 \u7ebf\u7a0b\u548c\u8fdb\u7a0b","text":"<p>\u521b\u5efa\u4e00\u4e2aJVM\u5b9e\u4f8b\uff0c\u603b\u662f\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684JVM\u8fdb\u7a0b\u3002\u5728\u8fd9\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u7740\u5f88\u591a\u7ebf\u7a0b\u3002JVM\u8fdb\u7a0b\u5c06\u8fd9\u4e9b\u7ebf\u7a0b\u8868\u73b0\u4e3ajava.lang.Thread\u7c7b\u3002\u6bcf\u4e00\u4e2aJVM\u7ebf\u7a0b\u90fd\u88ab\u76f4\u63a5\u6620\u5c04\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u3002Scala\u91cd\u7528\u4e86Java\u4e2d\u7684\u7ebf\u7a0b\u4e2d\u7684API\uff0c\u662f\u51fa\u4e8e\u517c\u5bb9\u6027\u7684\u8003\u8651\u3002</p>"},{"location":"LANG/JUC-SUC/#_3","title":"\u7ebf\u7a0b\u7684\u521b\u5efa\u548c\u6267\u884c","text":"<p>\u6bcf\u6b21\u521b\u5efaJVM\u7684\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u4f1a\u9ed8\u8ba4\u521b\u5efa\u51e0\u4e2a\u7ebf\u7a0b</p> <ol> <li>main\u7ebf\u7a0b</li> <li>\u4e0b\u9762\u7684\u4ee3\u7801\u8f93\u51fa\u7ed3\u679c\u662fmain</li> <li>\u9759\u6001\u7684currentThread\u65b9\u6cd5\u6765\u83b7\u5f97\u5f53\u524d\u7ebf\u7a0b\u5bf9\u8c61\u7684\u5f15\u7528</li> </ol> Text Only<pre><code>object ThreadsMain extends App {\n  val t: Thread = Thread.currentThread\n  val name = t.getName\n  println(s\"I am the thread $name\")\n}\n</code></pre> <ol> <li>\u542f\u52a8\u4e00\u4e2a\u72ec\u7acb\u7684\u7ebf\u7a0b</li> <li>\u521b\u5efaThread\u5bf9\u8c61</li> <li>\u8c03\u7528\u8be5\u5bf9\u8c61\u7684start\u65b9\u6cd5\uff0cstart\u4f1a\u8fdb\u4e00\u6b65\u8c03\u7528\u8be5\u7ebf\u7a0b\u5bf9\u8c61\u7684run\u65b9\u6cd5</li> <li>join\u65b9\u6cd5\uff1a\u4f1a\u8ba9\u672c\u7ebf\u7a0b\u8fdb\u5165waiting\u72b6\u6001\uff0c\u76f4\u5230fork\u51fa\u7684\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f</li> </ol> Text Only<pre><code>object ThreadsCreation extends App {\n  class MyThread extends Thread {\n    override def run():Unit = {\n      val name = Thread.currentThread.getName\n      println(s\"i am the thread ${name}\")\n    }\n  }\n  val name = Thread.currentThread.getName\n  println(s\"i am the thread ${name}\")\n  val t = new MyThread\n  t.start()\n  t.join()\n  println(\"New thread joined.\")\n}\n</code></pre> <ol> <li>\u8bbe\u8ba1\u7ebf\u7a0b\u521b\u5efa\u516c\u7528\u51fd\u6570\u4ee5\u53ca\u516c\u7528\u65e5\u5fd7\u6253\u5370\u51fd\u6570</li> </ol> Text Only<pre><code>//\u7ebf\u7a0b\u521b\u5efa\u51fd\u6570  \ndef thread(body: =&gt; Unit): Thread = {\n    val t = new Thread{\n      override def run(): Unit = body\n    }\n    t.start()\n    t\n  }\n//\u65e5\u5fd7\u6253\u5370\u51fd\u6570\npackage object SUC {\n  def log(msg: String): Unit = {\n    println(s\"${Thread.currentThread.getName}: $msg\")\n  }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#_4","title":"\u539f\u5b50\u6267\u884c","text":"<ol> <li>join</li> <li>\u8c03\u7528\u7684\u7279\u70b9\uff1a\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u88ab\u8c03\u7528join\u65b9\u6cd5\u65f6\uff0c\u5b83\u6240\u6709\u7684\u5185\u5b58\u5199\u64cd\u4f5c\u90fd\u4f1a\u5728join\u8fd4\u56de\u4e4b\u524d\u53d1\u751f\uff0c\u800c\u4e14\u8fd9\u4e9b\u5199\u64cd\u4f5c\u5bf9\u8c03\u7528join\u7684\u90a3\u4e2a\u7ebf\u7a0b\u662f\u53ef\u89c1\u7684</li> <li>\u7f3a\u70b9\uff1a\u53ea\u80fd\u5355\u5411\u901a\u4fe1\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528\u7ebf\u7a0b\u7ed3\u679c\u8fdb\u884c\u901a\u4fe1\u7684\u6a21\u5f0f</li> </ol> Text Only<pre><code>object ThreadsCommunicate extends App {\n  var result: String = null\n  val t = thread { result = \"\\nTitle\\n\" + \"=\" * 5 }\n  t.join()\n  //result\u4e0d\u4f1a\u4e3a\u7a7a\uff0c\u56e0\u4e3athread\u4e2d\u5185\u5b58\u5199\u64cd\u4f5c\u603b\u662f\u4f1a\u5728join\u4e4b\u524d\u5b8c\u6210\n  log(result)\n}\n</code></pre> <ol> <li>synchronized</li> <li>JVM\u4e2d\u521b\u5efa\u7684\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u5185\u7f6e\u9501(\u76d1\u63a7\u5668)\uff0c\u5176\u4f5c\u7528\u662f\u786e\u4fdd\u540c\u65f6\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8be5\u5bf9\u8c61\u4e0a\u6267\u884c\u67d0\u4e2asynchronized\u4ee3\u7801\u5757\u3002\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u5f00\u59cb\u6267\u884csynchronized\u4ee3\u7801\u5757\u65f6\uff0c\u6211\u4eec\u79f0\u8be5\u7ebf\u7a0b\u83b7\u5f97\u4e86x\u7684\u76d1\u63a7\u5668\u7684\u6240\u6709\u6743\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u83b7\u5f97\u4e86x\u7684\u76d1\u63a7\u6743\u3002</li> <li>JVM\u4fdd\u8bc1\u4e86\u4e00\u4e2a\u7ebf\u7a0b\u5728\u67d0\u4e2a\u5bf9\u8c61x\u4e0a\u6267\u884csynchronized\u8bed\u53e5\u65f6\uff0c\u8be5\u7ebf\u7a0b\u662fx\u5bf9\u8c61\u4e0a\u552f\u4e00\u5728\u6267\u884csynchronized\u8bed\u53e5\u7684\u7ebf\u7a0b\u3002\u5982\u679c\u7ebf\u7a0bT\u8981\u5728x\u4e0a\u8c03\u7528synchronized\u8bed\u53e5\uff0c\u800c\u53e6\u4e00\u4e2a\u7ebf\u7a0bS\u6b63\u5728x\u4e0a\u8c03\u7528\u5176\u4ed6synchronized\u8bed\u53e5\uff0c\u90a3\u4e48\u7ebf\u7a0bT\u4f1a\u8fdb\u5165\u963b\u585e\uff08blocked\uff09\u72b6\u6001\u3002</li> </ol> Text Only<pre><code>object ThreadsUnprotectedUid extends App {\n  var uidCount = 0L\n  //this.synchronized\u662f\u7528ThreadsUnprotectedUid\u4f5c\u4e3a\u9501\n  def getUniqueId(): Long = this.synchronized {\n    val freshUid = uidCount + 1\n    uidCount = freshUid\n    freshUid\n  }\n\n  def printUniqueIds(n: Int): Unit = {\n\n    val uids = for (i &lt;- 0 until n) yield getUniqueId()\n    log(s\"Generated uids: ${uids}\")\n  }\n\n  val t = thread {\n    printUniqueIds(5)\n  }\n  Thread.sleep(10)\n  printUniqueIds(5)\n  t.join()\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#_5","title":"\u91cd\u6392\u5e8f","text":"<ol> <li>\u539f\u56e0\uff1a JMM \u89c4\u8303\u4e0a\uff0c\u5982\u679c\u5728\u67d0\u4e2a\u7279\u5b9a\u7684\u7ebf\u7a0b\u5185\u4ee3\u7801\u8bed\u53e5\u7684\u987a\u5e8f\u4e0d\u5f71\u54cd\u7a0b\u5e8f\u7684\u4e32\u884c\u8bed\u4e49\uff0c\u90a3\u4e48\u6267\u884c\u8fc7\u7a0b\u4e2dJVM\u662f\u5141\u8bb8\u8fd9\u7c7b\u91cd\u6392\u5e8f\u7684\u3002\u8fd9\u65f6\u5019\u53ef\u89c1\u6027\u5c31\u4f1a\u53d1\u751f\u53d8\u5316</li> <li>\u4f8b\u5b50\uff1a</li> <li>\u5982\u4e0b\u4ee3\u7801\uff0c\u6267\u884c\u591a\u6b21\u4f1a\u51fa\u73b0x\u548cy\u90fd\u4e3a1\u7684\u60c5\u51b5</li> <li>\u4f46\u662f\u56e0\u4e3aa,b\u7684\u8d4b\u503c\u7406\u8bba\u4e0a\u5fc5\u6709\u4e00\u4e2a\u5728if\u4e4b\u524d\u53d1\u751f\uff0c\u6240\u4ee5\u5fc5\u7136\u662fJVM\u4e0a\u53d1\u751f\u4e86\u91cd\u6392\u5e8f\u3002\u6b64\u5916\uff0c\u7a0b\u5e8f\u5e76\u4e0d\u9700\u8981\u5c06\u6240\u6709\u7684\u66f4\u65b0\u7acb\u5373\u5199\u5230\u4e3b\u5b58\u4e2d\uff0c\u800c\u662f\u4f1a\u5c06\u5b83\u4eec\u4e34\u65f6\u4fdd\u5b58\u5728\u5904\u7406\u5668\u7684\u5bc4\u5b58\u5668\u4e2d\u3002</li> <li>\u89e3\u51b3\u529e\u6cd5\uff1a\u521a\u624d\u72af\u7684\u9519\u6765\u81ea\u4e00\u4e2a\u5047\u8bbe\uff0c\u5c31\u662f\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5199\u64cd\u4f5c\u4f1a\u7acb\u523b\u53cd\u6620\u5230\u5185\u5b58\u4e2d\u5e76\u5bf9\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u89c1\uff0c\u4f46\u8fd9\u79cd\u540c\u6b65\u5e76\u4e0d\u4f1a\u81ea\u7136\u800c\u7136\u53d1\u751f(\u53ef\u80fd\u6682\u65f6\u5728\u5bc4\u5b58\u5668\u4e2d)\u3002synchronized\u8bed\u53e5\u5c31\u662f\u5b9e\u73b0\u6b63\u786e\u7684\u540c\u6b65\u7684\u57fa\u672c\u65b9\u5f0f\u3002\u5728\u5bf9\u8c61x\u4e0a\u6267\u884c synchronized \u8bed\u53e5\u4ea7\u751f\u7684\u5199\u64cd\u4f5c\u4e0d\u4ec5\u662f\u539f\u5b50\u6027\u7684\uff0c\u800c\u4e14\u5bf9\u6240\u6709\u5728 x \u4e0a\u6267\u884csynchronized\u8bed\u53e5\u7684\u7ebf\u7a0b\u800c\u8a00\u90fd\u662f\u53ef\u89c1\u7684\u3002</li> </ol> Text Only<pre><code>object ThreadSharedStateAccessReordering extends App {\n  for (i &lt;- 0 until 100000) {\n    var a = false\n    var b = false\n    var x = -1\n    var y = -1\n    val t1 = thread {\n      this.synchronized{\n        a = true\n        y = if (b) 0 else 1\n      }\n    }\n    val t2 = thread {\n      this.synchronized{\n        b = true\n        x = if (a) 0 else 1\n      }\n    }\n    t1.join()\n    t2.join()\n\n    assert(!(x == 1 &amp;&amp; y == 1), s\"x = $x, y = $y\")\n  }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#22_1","title":"2.2\u76d1\u63a7\u5668\u548c\u540c\u6b65","text":""},{"location":"LANG/JUC-SUC/#_6","title":"\u76d1\u89c6\u5668","text":"<ol> <li>\u76d1\u63a7\u5668\uff1a\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u5bf9\u8c61x\u4e0a\u7684synchronized\u8bed\u53e5\u65f6\uff0c\u82e5\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u62e5\u6709x\u4e0a\u7684\u76d1\u63a7\u5668\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u83b7\u5f97\u6b64\u76d1\u63a7\u5668\u3002\u5426\u5219\uff0c\u8be5\u7ebf\u7a0b\u4f1a\u7b49\u5f85\u76d1\u63a7\u5668\u88ab\u91ca\u653e\u3002\u5728\u83b7\u5f97\u76d1\u63a7\u5668\u7684\u540c\u65f6\uff0c\u8be5\u7ebf\u7a0b\u4e5f\u80fd\u770b\u5230\u91ca\u653e\u8be5\u76d1\u63a7\u5668\u7684\u524d\u4e00\u7ebf\u7a0b\u7684\u6240\u6709\u5185\u5b58\u5199\u64cd\u4f5c\u3002</li> <li>\u76d1\u89c6\u5668\u662f\u57fa\u4e8e\u5bf9\u8c61\u7684\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u62e5\u6709\u5c5e\u4e8e\u4e0d\u540c\u5bf9\u8c61\u7684\u591a\u4e2a\u76d1\u89c6\u5668\u3002</li> <li>\u4f8b\u5b50\uff1a\u94f6\u884c\u7cfb\u7edf\uff1a</li> <li>\u6709\u4e00\u4e2a\u5b58\u53d6\u65e5\u5fd7\u8bb0\u5f55\u65b9\u6cd5\uff0c\u4f7f\u7528ArrayBuffer\u5bf9\u8c61\u5b58\u50a8\u3002\u4f7f\u7528\u5185\u7f6e\u9501\uff0c\u9632\u6b62\u5bf9\u8c61\u66f4\u65b0\u51fa\u9519</li> <li>\u6709\u4e00\u4e2aAccount\u7c7b\uff0c\u7528\u4e8e\u521b\u5efa\u7528\u6237\u8d26\u6237\u3002\u4f7f\u7528\u5185\u7f6e\u9501\uff0c\u9632\u6b62t1,t3\u7ebf\u7a0b\u540c\u65f6\u66f4\u65b0\u8d26\u6237</li> </ol> Text Only<pre><code>object SynchronizedNesting extends App {\n  import scala.collection._\n  private val transfers = mutable.ArrayBuffer[String]()\n  def logTransfer(name: String, n: Int) = transfers.synchronized {\n    transfers += s\"transfer to account '$name' = $n\"\n  }\n  class Account(val name: String, var money: Int){\n    def add(account: Account, n: Int):Unit = account.synchronized {\n      account.money += n\n      if (n &gt; 10) logTransfer(account.name, n)\n    }\n  }\n  // \u94f6\u884c\u7cfb\u7edf\u793a\u4f8b\u4ee3\u7801\uff08\u7eed\uff09\n  val jane = new Account(\"Jane\", 100)\n  val john = new Account(\"John\", 200)\n  val t1 = thread { jane.add(jane, 5) }\n  val t2 = thread { john.add(john, 50) }\n  val t3 = thread { jane.add(jane, 70) }\n  t1.join(); t2.join(); t3.join()\n  log(s\"--- accounts ---\\n${jane.money}\\n${john.money}\")\n  log(s\"--- transfers ---\\n$transfers\")\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#_7","title":"\u6b7b\u9501","text":"<ol> <li>\u5b9a\u4e49\uff1a\u5728\u5e76\u53d1\u7f16\u7a0b\u4e2d\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u83b7\u5f97\u4e24\u4e2a\u4e0d\u540c\u7684\u76d1\u63a7\u5668\uff0c\u7136\u540e\u5c1d\u8bd5\u83b7\u5f97\u5bf9\u65b9\u7684\u76d1\u63a7\u5668\u65f6\uff0c\u6b7b\u9501\u5c31\u53d1\u751f\u4e86\u3002\u53cc\u65b9\u90fd\u4e0d\u91ca\u653e\u81ea\u5df1\u7684\u76d1\u63a7\u5668\uff0c\u4e8e\u662f\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u76f4\u5230\u5176\u4e2d\u4e00\u4e2a\u76d1\u63a7\u5668\u88ab\u91ca\u653e\u3002</li> <li>\u6253\u7834\u6b7b\u9501\u7684\u5fc5\u8981\u6761\u4ef6\uff1a\u89c4\u5b9a\u8d44\u6e90\u8bbf\u95ee\u987a\u5e8f\uff0c\u6253\u7834\u6f5c\u5728\u7684\u6b7b\u5faa\u73af</li> <li>\u4f8b\u5b50\uff1a</li> </ol> Text Only<pre><code>object SynchronizedDeadlock extends App {\n  import SynchronizedNesting.Account\n  def send(a: Account, b: Account, n: Int) = a.synchronized {\n    Thread.sleep(10)\n    b.synchronized {\n      a.money -= n\n      b.money += n\n    }\n  }\n  val a = new Account(\"Jack\", 1000)\n  val b = new Account(\"Jill\", 2000)\n  val t1 = thread { for (i&lt;- 0 until 100) send(a, b, 1) }\n  val t2 = thread { for (i&lt;- 0 until 100) send(b, a, 1) }\n  t1.join(); t2.join()\n  log(s\"a = ${a.money}, b = ${b.money}\")\n}\n</code></pre> <ol> <li>\u4fee\u6539\uff1a</li> </ol> Text Only<pre><code>object SynchronizedDeadlock extends App {\n  import ThreadsUnprotectedUid.getUniqueId\n  class Account(val name: String, var money: Int) {\n    val uid = getUniqueId()\n  }\n  def send(a1: Account, a2: Account, n: Int) {\n    def adjust() {\n      log(s\"money is ${n}\")\n      a1.money -= n\n      a2.money += n\n    }\n    if (a1.uid &lt; a2.uid)\n      a1.synchronized { a2.synchronized { adjust() } }\n    else a2.synchronized { a1.synchronized { adjust() } }\n  }\n  val a = new Account(\"Jack\", 1000)\n  val b = new Account(\"Jill\", 2000)\n  log(s\"a.uid = ${a.uid}, b.uid = ${b.uid}\")\n  //a,b\u7684uid\u5168\u5c40\u6709\u5e8f\uff0c\u5219\u83b7\u5f97\u7684\u9501\u662f\u6709\u5e8f\u7684\uff0c\u6ca1\u6709\u62a2\u5230\u7684\u5c31\u963b\u585e\uff0c\u800c\u4e0d\u662f\u4e71\u53bb\u83b7\u5f97\u5176\u4ed6\u9501\n  val t1 = thread { for (i&lt;- 0 until 100) send(a, b, 10) }\n  val t2 = thread { for (i&lt;- 0 until 100) send(b, a, 1) }\n  t1.join(); t2.join()\n  log(s\"a = ${a.money}, b = ${b.money}\")\n}  \n</code></pre>"},{"location":"LANG/JUC-SUC/#_8","title":"\u4fdd\u62a4\u5757","text":"<ol> <li>\u7ebf\u7a0b\u6c60\uff1a\u521b\u5efa\u65b0\u7ebf\u7a0b\u7684\u4ee3\u4ef7\u6bd4\u521b\u5efa Account \u4e4b\u7c7b\u7684\u8f7b\u91cf\u7ea7\u5bf9\u8c61\u8981\u5927\u5f97\u591a\u3002\u540c\u4e00\u7ebf\u7a0b\u5e94\u8be5\u80fd\u591f\u88ab\u591a\u4e2a\u8bf7\u6c42\u91cd\u7528\uff0c\u8fd9\u79cd\u53ef\u91cd\u7528\u7684\u7ebf\u7a0b\u7684\u96c6\u5408\u901a\u5e38\u79f0\u4e3a\u7ebf\u7a0b\u6c60</li> </ol> <p>\u5fd9\u7b49\u5f85\uff1aworker\u7ebf\u7a0b\u5728\u542f\u52a8\u4e4b\u524d\u88ab\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b\u3002\u4e00\u822c\u800c\u8a00\uff0cJVM\u8fdb\u7a0b\u5e76\u4e0d\u4f1a\u5728\u4e3b\u7ebf\u7a0b\u7ec8\u6b62\u65f6\u7ed3\u675f\uff0c\u800c\u662f\u4f1a\u7b49\u6240\u6709\u5b88\u62a4\u7ebf\u7a0b\u5168\u90e8\u7ed3\u675f\u3002\u7b49\u5230worker\u7ebf\u7a0b\u5b8c\u6210\u4efb\u52a1\uff0c\u5b83\u4f1a\u7ee7\u7eed\u68c0\u67e5\u961f\u5217\u4e2d\u662f\u5426\u6709\u4efb\u52a1\u3002\u6211\u4eec\u79f0worker\u7ebf\u7a0b\u8fd9\u6837\u7684\u72b6\u6001\u4e3a\u5fd9\u7b49\u5f85\u3002\u8fd9\u662f\u4e00\u79cd\u6d6a\u8d39\u8d44\u6e90\u7684\u884c\u4e3a\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u9700\u8981\u907f\u514d\u5fd9\u7b49\u5f85</p> Text Only<pre><code>import scala.collection._\nobject SynchronizedBadPool extends App {\n  private val tasks = mutable.Queue[() =&gt; Unit]()\n  val worker = new Thread {\n    def poll(): Option[() =&gt; Unit] = tasks.synchronized {\n      if (tasks.nonEmpty) Some(tasks.dequeue()) else None\n    }\n    override def run() = while (true) poll() match {\n      case Some(task) =&gt; task()\n      case None =&gt;\n    }\n  }\n  worker.setName(\"Worker\")\n  //\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b\n  worker.setDaemon(true)\n  worker.start()\n\n  def asynchronous(body: =&gt; Unit) = tasks.synchronized {\n    tasks.enqueue(() =&gt; body)\n  }\n  asynchronous { log(\"Hello\") }\n  asynchronous { log(\" world!\")}\n  Thread.sleep(5000)\n}\n</code></pre> <ol> <li>\u5fd9\u7b49\u5f85\u7684\u4f18\u5316\uff1a\u8ba9worker\u7ebf\u7a0b\u4f11\u7720\uff0c\u53ea\u6709\u5728task\u961f\u5217\u4e0d\u4e3a\u7a7a\uff0c\u518d\u88ab\u5524\u9192</li> <li>wait\u4e0enotify:\u4e5f\u662f\u57fa\u4e8e\u9501\u5bf9\u8c61\u7684\u64cd\u4f5c\u3002\u5f53\u7ebf\u7a0bT\u8c03\u7528\u67d0\u5bf9\u8c61\u7684wait\u65b9\u6cd5\u65f6\uff0c\u5b83\u4f1a\u91ca\u653ex\u7684\u76d1\u63a7\u5668\uff0c\u7136\u540e\u8fdb\u5165\u4f11\u7720\u72b6\u6001\uff0c\u76f4\u5230\u53e6\u4e00\u7ebf\u7a0bS\u8c03\u7528\u540c\u4e00\u5bf9\u8c61\u7684notify\u65b9\u6cd5\u3002</li> <li>\u4f8b\u5b50\uff1a\u65e0\u8bba\u54ea\u4e2a\u7ebf\u7a0b\u5148\u6267\u884csychronized\u65b9\u6cd5\uff0c\u6700\u7ec8\u90fd\u4f1a\u8f93\u51fahello\u4fe1\u606f</li> </ol> Text Only<pre><code>object SynchronizedGuardedBlocks extends App {\n  //AnyRef &lt;=&gt; java.lang.Object\n  val lock = new AnyRef\n  var message: Option[String] = None\n  val greeter = thread {\n    //1.greeter\u7ebf\u7a0b\u8fdb\u5165\uff0c\u53d1\u73b0\u4e3aNone\uff0c\u88ab\u963b\u585e\uff0c\u91ca\u653e\u9501\n    lock.synchronized {\n      //\u5fc5\u987b\u4f7f\u7528while\uff0c\u4f7f\u7528if\u53ef\u80fd\u4f1a\u5f15\u8d77\u865a\u5047\u5524\u9192\u3002\n      while (message == None) lock.wait()\n      //3.\u5728\u540c\u4e00\u4e2a\u9501\u4e2d\uff0c\u5e76\u4e14main\u7ed9message\u5728log\u4e4b\u524d\uff0c\u6240\u4ee5\u4fdd\u8bc1\u53ef\u89c1\u6027\n      log(message.get)\n    }\n  }\n  //2.main\u7ebf\u7a0b\u8fdb\u5165\uff0c\u53d1\u73b0\u4e0d\u4e3aNone\uff0c\u8bbe\u7f6emessage,\u91ca\u653e\u9501\uff0c\u5e76\u5524\u9192greeter\u7ebf\u7a0b\n  lock.synchronized {\n    message = Some(\"Hello!\")\n    lock.notify()\n  }\n  greeter.join()\n}\n</code></pre> <ol> <li>wait\u7684\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\u662f\u5b83\u4f1a\u5f15\u8d77\u865a\u5047\u5524\u9192\u3002\u6709\u65f6\u5019\uff0cJVM\u5141\u8bb8\u5728\u6ca1\u6709\u8c03\u7528notify\u7684\u60c5\u51b5\u4e0b\u5524\u9192\u4e00\u4e2a\u6267\u884c\u4e86wait\u7684\u4f11\u7720\u7ebf\u7a0b\u3002\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u9700\u8981\u7528\u4e00\u4e2awhile\u5faa\u73af\u53cd\u590d\u68c0\u67e5\u72b6\u6001\uff0c\u7136\u540e\u7ed3\u5408 wait\u4f7f\u7528\uff0c\u5982\u4e0a\u9762\u4ee3\u7801\u6240\u793a\u3002\u4f7f\u7528\u4e00\u4e2a if \u8bed\u53e5\u662f\u4e0d\u591f\u7684\uff0c\u56e0\u4e3a\u5373\u4f7fmessage\u7684\u503c\u4e3aNone\uff0c\u4e00\u4e2a\u865a\u5047\u5524\u9192\u4e5f\u5c06\u5141\u8bb8\u7ebf\u7a0b\u6267\u884cmessage.get\u3002\u4fdd\u8bc1\u662f\u7531\u5176\u4ed6\u7ebf\u7a0b\u5c06\u5176notify\u5524\u9192\u3002</li> <li>\u4fdd\u62a4\u5757\uff1a\u82e5synchronized\u8bed\u53e5\u5728\u8c03\u7528wait\u4e4b\u524d\u53cd\u590d\u68c0\u67e5\u6761\u4ef6\uff0c\u90a3\u8fd9\u4e2asynchronized\u8bed\u53e5\u79f0\u4e3a\u4fdd\u62a4\u5757\u3002\u901a\u5e38\u4ee5while loop\u7684\u5f62\u5f0f\u51fa\u73b0\u3002</li> </ol> Text Only<pre><code>object SynchronizedPool extends App {\n  import scala.collection._\n  private val tasks = mutable.Queue[() =&gt; Unit]()\n  object Worker extends Thread {\n    setDaemon(true)\n    def poll() = tasks.synchronized {\n      //\u4fdd\u62a4\u5757\uff0c\u5f53\u961f\u5217\u4e3a\u7a7a\uff0c\u4f1a\u91ca\u653e\u9501\u5e76\u88ab\u963b\u585e\u7b49\u5f85\u88ab\u5524\u9192\n      while (tasks.isEmpty) tasks.wait()\n      tasks.dequeue()\n    }\n    override def run() = while (true) {\n      val task = poll()\n      task()\n    }\n  }\n  Worker.start()\n  def asynchronous(body: =&gt;Unit) = tasks.synchronized {\n    tasks.enqueue(() =&gt; body)\n    tasks.notify()\n  }\n  asynchronous { log(\"Hello \") }\n  asynchronous { log(\"World!\") }\n  Thread.sleep(500)\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#_9","title":"\u7ebf\u7a0b\u4e2d\u65ad\u4e0e\u5e73\u6ed1\u5173\u95ed","text":"<p>worker\u7ebf\u7a0b\u4f18\u5316\uff1a\u5373\u4f7f\u662f\u5b88\u62a4\u7ebf\u7a0b\uff0c\u51fa\u4e8e\u4f11\u7720\u72b6\u6001\uff0c\u4f46\u662f\u6240\u5360\u636e\u7684\u6808\u7a7a\u95f4\u4e00\u76f4\u90fd\u5728\u3002\u5982\u679c\u4f11\u7720\u7ebf\u7a0b\u592a\u591a\uff0c\u5185\u5b58\u5c31\u4f1a\u88ab\u7528\u5b8c\u3002</p> <p>\u7ed3\u675f\u4f11\u7720\u7ebf\u7a0b\u7684\u65b9\u6cd5\uff1a</p> <ol> <li>\u4e2d\u65ad\u7ebf\u7a0b\uff1a\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u6216\u8ba1\u65f6\u7b49\u5f85\u65f6\uff0c\u8c03\u7528\u5176 interrupt \u65b9\u6cd5\u4f1a\u629b\u51fa\u4e00\u4e2a InterruptedExption\u5f02\u5e38\u3002\u6b64\u5f02\u5e38\u53ef\u4ee5\u88ab\u6355\u83b7\u548c\u5904\u7406\uff0c\u4f46\u5728\u8fd9\u91cc\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u7ec8\u6b62\u7ebf\u7a0bWorker\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u5bf9\u8fd0\u884c\u4e2d\u7684\u7ebf\u7a0b\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u5f02\u5e38\u5c31\u4e0d\u4f1a\u4ea7\u751f\uff0c\u800c\u662f\u8bbe\u7f6e\u7ebf\u7a0b\u7684interrupt \u6807\u5fd7\u3002\u5bf9\u4e8e\u4e0d\u963b\u585e\u7684\u7ebf\u7a0b\u5fc5\u987b\u5468\u671f\u6027\u5730\u7528isInterrupted \u65b9\u6cd5\u67e5\u8be2interrupt\u6807\u5fd7\u3002</li> <li>\u5e73\u6ed1\u5173\u95ed\uff1a\u5728\u5e73\u6ed1\u5173\u95ed\u4e2d\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u8bbe\u7f6e\u7ec8\u6b62\u6761\u4ef6\uff0c\u7136\u540e\u8c03\u7528notify\u6765\u5524\u9192\u5de5\u4f5c\u7ebf\u7a0b\u3002\u7136\u540e\uff0c\u5de5\u4f5c\u7ebf\u7a0b\u4f1a\u91ca\u653e\u5b83\u6240\u6709\u7684\u8d44\u6e90\uff0c\u5e76\u987a\u5229\u5730\u7ed3\u675f\u3002</li> <li>\u4e24\u8005\u7684\u9009\u62e9\uff1a\u5982\u679cnotify\u4e0d\u80fd\u518d\u6b21\u5524\u9192\u7ebf\u7a0b\uff0c\u5c31\u8981\u4f7f\u7528\u4e3b\u52a8\u4e2d\u65ad\u7684\u65b9\u5f0f\u3002</li> </ol> Text Only<pre><code>object SynchronizedPool extends App {\n\n  import scala.collection._\n\n  private val tasks = mutable.Queue[() =&gt; Unit]()\n\n  object Worker extends Thread {\n    var terminated = false\n    def poll(): Option[() =&gt; Unit] = tasks.synchronized {\n      while (tasks.isEmpty &amp;&amp; !terminated) tasks.wait()\n      if (!terminated) Some(tasks.dequeue()) else None\n    }\n    import scala.annotation.tailrec\n    @tailrec override def run() = poll() match {\n      //\u5728poll\u8fd4\u56deSome\u65f6\uff0c\u4f1a\u7ee7\u7eed\u6267\u884crun\uff0c\u76f4\u5230\u8fd4\u56deNone\n      //\u4f7f\u7528\u4e86\u5c3e\u9012\u5f52\u4f18\u5316\n      case Some(task) =&gt; task(); run()\n      case None =&gt;\n    }\n    def shutdown() = tasks.synchronized {\n      terminated = true\n      tasks.notify()\n    }\n  }\n\n  Worker.start()\n\n  def asynchronous(body: =&gt; Unit) = tasks.synchronized {\n    tasks.enqueue(() =&gt; body)\n    tasks.notify()\n  }\n\n  asynchronous {\n    log(\"Hello \")\n  }\n  asynchronous {\n    log(\"World!\")\n  }\n  Thread.sleep(500)\n  Worker.shutdown()\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#23volatile","title":"2.3\u6613\u5931(volatile)\u53d8\u91cf","text":"<ol> <li>\u5b9a\u4e49\uff1aJVM\u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u6bd4synchronized\u4ee3\u7801\u5757\u66f4\u8f7b\u91cf\u7ea7\u7684\u540c\u6b65\u5f62\u5f0f\uff0c\u79f0\u4e3a\u6613\u5931\u53d8\u91cf\u3002\u6613\u5931\u53d8\u91cf\u53ef\u4f9b\u4e8e\u539f\u5b50\u6027\u8bfb\u5199\uff0c\u5e38\u7528\u4e8e\u8868\u793a\u72b6\u6001\u6807\u5fd7\u3002\u6bd4\u5982\uff0c\u6807\u8bb0\u67d0\u4e2a\u8ba1\u7b97\u662f\u5426\u5b8c\u6210\u3001\u662f\u5426\u53d6\u6d88\u3002\u8fd9\u79cd\u65b9\u6cd5\u6709\u4e24\u4e2a\u597d\u5904\uff0c\u7b2c\u4e00\u662f\u5355\u4e2a\u7ebf\u7a0b\u4e2d\u6613\u5931\u53d8\u91cf\u7684\u8bfb\u64cd\u4f5c\u548c\u5199\u64cd\u4f5c\u4e0d\u4f1a\u91cd\u6392\u5e8f\uff0c\u7b2c\u4e8c\u662f\u6613\u5931\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\u5bf9\u5176\u4ed6\u7ebf\u7a0b\u662f\u7acb\u5373\u53ef\u89c1\u7684\u3002\u5982\u679c\u5bf9\u4e00\u4e2a\u6613\u5931\u53d8\u91cfv\u8fdb\u884c\u5199\u64cd\u4f5cW\uff0c\u8fd9\u88ab\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u901a\u8fc7\u5bf9\u53d8\u91cfv\u7684\u8bfb\u64cd\u4f5cR\u89c2\u5bdf\uff0c\u90a3\u4e48\u5728W\u4e4b\u524d\u8be5\u53d8\u91cf\u7684\u6240\u6709\u5199\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5728R\u4e4b\u540e\u89c2\u5bdf\u5230\u3002</li> <li>Scala\u7684volatile\u53d8\u91cf\u6027\u8d28</li> </ol> <p>\u548cJava\u4e0d\u4e00\u6837\uff0cScala\u652f\u6301\u58f0\u660e\u5c40\u90e8\uff08\u672c\u793a\u4f8b\u6307\u7684\u662ffor\u5faa\u73af\u7684\u95ed\u5305\uff09\u6613\u5931\u53d8\u91cf\u3002\u5bf9\u4e8e\u95ed\u5305\u6216\u5d4c\u5957\u7c7b\u4e2d\u7684\u6bcf\u4e2a\u5c40\u90e8\u6613\u5931\u53d8\u91cf\uff0cScala\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u5e26\u6613\u5931\u5b57\u6bb5\u7684\u5806\u5bf9\u8c61\u3002\u4e8e\u662f\uff0c\u53ef\u4ee5\u79f0\u8fd9\u4e9b\u5c40\u90e8\u6613\u5931\u53d8\u91cf\u88ab\u63d0\u5347\u4e3a\u5bf9\u8c61\u3002</p> Text Only<pre><code>class Page(val txt: String, var position: Int)\nobject Volatile extends App {\n  val pages = for (i&lt;- 1 to 5) yield\n    new Page(\"Na\" * (100 - 20 * i) + \" Batman!\", -1)\n  @volatile var found = false\n  for (p &lt;- pages) yield thread {\n    var i = 0\n    while (i &lt; p.txt.length &amp;&amp; !found)\n      if (p.txt(i) == '!') {\n        p.position = i\n        found = true\n      } else i += 1\n  }\n  while (!found) {}\n  log(s\"results: ${pages.map(_.position)}\")\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#24-jmm","title":"2.4 JMM","text":"<ol> <li>\u5b9a\u4e49\uff1a\u4e00\u4e2a\u8bed\u8a00\u7684\u5185\u5b58\u6a21\u578b\u6307\u7684\u662f\u4e00\u79cd\u89c4\u8303\uff0c\u5b83\u63cf\u8ff0\u4e86\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u5bf9\u5176\u4ed6\u7ebf\u7a0b\u53ef\u89c1\u3002Scala \u7ee7\u627f\u4e86 JVM \u7684\u5185\u5b58\u6a21\u578b\uff0c\u8be5\u5185\u5b58\u6a21\u578b\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7a0b\u5e8f\u4e2d\u5404\u79cd\u884c\u4e3a\u7684\u524d\u53d1\u751f\uff08happens-before\uff09\u5173\u7cfb\u3002\u5728JVM\u4e0a\u3002\u8fd9\u4e9b\u884c\u4e3a\u4e2d\u5982\u679c\u4e00\u4e2a\u884c\u4e3aA\u53d1\u751f\u4e8e\u884c\u4e3aB\u4e4b\u524d\uff0c\u5219\u884c\u4e3aB\u53ef\u4ee5\u53d1\u73b0\u884c\u4e3aA\u7684\u5185\u5b58\u5199\u64cd\u4f5c\u3002\u7a0b\u5e8f\u5458\u9700\u8981\u81ea\u5df1\u4fdd\u8bc1\u4e00\u4e2a\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\u4e0e\u6240\u6709\u6b64\u53d8\u91cf\u7684\u65b0\u503c\u7684\u8bfb\u64cd\u4f5c\u6784\u6210\u524d\u53d1\u751f\u5173\u7cfb\u3002</li> <li>\u884c\u4e3a\u79cd\u7c7b\uff1a</li> <li>\u7a0b\u5e8f\u6307\u4ee4\u987a\u5e8f\uff1a\u7ebf\u7a0b\u4e2d\u7684\u7a0b\u5e8f\u6307\u4ee4\u987a\u5e8f\u51b3\u5b9a\u4e86\u5404\u4e2a\u884c\u4e3a\u7684\u5148\u540e\u53d1\u751f\u987a\u5e8f</li> <li>\u76d1\u63a7\u5668\u9501\u5b9a\uff1a\u5bf9\u4e00\u4e2a\u76d1\u63a7\u5668\u7684\u89e3\u9501\u53d1\u751f\u5728\u88ab\u6b64\u76d1\u63a7\u5668\u540e\u7eed\u88ab\u9501\u5b9a\u4e4b\u524d</li> <li>volatile\u5b57\u6bb5\uff1a\u8be5\u5b57\u6bb5\u7684\u5199\u64cd\u4f5c\u53d1\u751f\u5728\u8bfb\u64cd\u4f5c\u4e4b\u540e</li> <li>\u7ebf\u7a0b\u542f\u52a8\uff1a\u7ebf\u7a0b\u7684start\u65b9\u6cd5\u53d1\u751f\u5728\u8be5\u7ebf\u7a0b\u6240\u6709\u884c\u4e3a\u4e4b\u524d</li> <li>\u7ebf\u7a0b\u7ec8\u6b62\uff1a\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u4efb\u610f\u884c\u4e3a\u53d1\u751f\u5728\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5b8c\u6210\u5176join\u65b9\u6cd5\u4e4b\u524d</li> <li>\u4f20\u9012\u6027\uff1a\u5982\u679c\u884c\u4e3aA\u53d1\u751f\u5728\u884c\u4e3aB\u4e4b\u524d\uff0c\u800c\u884c\u4e3aB\u53d1\u751f\u5728\u884c\u4e3aC\u4e4b\u524d\uff0c\u5219\u884c\u4e3aA\u53d1\u751f\u5728\u884c\u4e3aC\u4e4b\u524d\u3002</li> <li>\u524d\u53d1\u751f\u5173\u7cfb\u7684\u5176\u4ed6\u6027\u8d28\uff1a</li> </ol> <p>\u25cf \u975e\u6613\u5931\u8bfb\u64cd\u4f5c\u4e0d\u80fd\u901a\u8fc7\u91cd\u6392\u5e8f\u51fa\u73b0\u5728\u7a0b\u5e8f\u6307\u4ee4\u987a\u5e8f\u66f4\u9760\u524d\u7684\u7a0b\u5e8f\u6613\u5931\u8bfb\u64cd\u4f5c\uff08\u6216\u76d1\u63a7\u5668\u9501\u5b9a\uff09\u4e4b\u524d\u3002</p> <p>\u25cf \u975e\u6613\u5931\u5199\u64cd\u4f5c\u4e0d\u80fd\u901a\u8fc7\u91cd\u6392\u5e8f\u51fa\u73b0\u5728\u7a0b\u5e8f\u6307\u4ee4\u987a\u5e8f\u66f4\u9760\u540e\u7684\u6613\u5931\u5199\u64cd\u4f5c\uff08\u6216\u76d1\u63a7\u5668\u89e3\u9501\uff09\u4e4b\u540e\u3002</p> <p>\u4e5f\u5c31\u662f\u6700\u5148volatile\u8bfb\uff0c\u6700\u540evolatile\u5199</p>"},{"location":"LANG/JUC-SUC/#_10","title":"\u7ec3\u4e60\u9898\uff1a","text":"<ol> <li>\u5b9e\u73b0\u4e00\u4e2aparallel\u65b9\u6cd5\uff0c\u5b83\u7684\u53c2\u6570\u662f\u4e24\u4e2a\u8ba1\u7b97\u4ee3\u7801\u5757a\u548cb\uff0c\u6b64\u65b9\u6cd5\u7528\u4e24\u4e2a\u65b0\u7ebf\u7a0b\u6765\u6267\u884c\u8fd9\u4e24\u4e2a\u4ee3\u7801\u5757\uff0c\u5e76\u7528\u4e00\u4e2a\u4e8c\u5143\u7ec4\u8fd4\u56de\u4e24\u8005\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u5176\u58f0\u660e\u5982\u4e0b\u3002</li> </ol> <p>def parallelA, B: (A, B)</p> Text Only<pre><code>class Test02 {\n  def parallel[A, B](a: =&gt;A, b: =&gt;B): (A, B) = {\n    val t1 = new Thread{\n      var flag = false\n      override def run(): Unit = {\n        while(!flag){\n          log(\"waiting to get\")\n          getResult()\n\n        }\n      }\n      //\u628abody\u653e\u5728\u8be5\u51fd\u6570\u8c03\u7528\u4e2d\uff0c\u5e76\u4e14\u63a7\u5236run\u65b9\u6cd5\u7684\u7ed3\u675f\u65f6\u673a\n      def getResult(): A = {\n        flag = true\n        a\n      }\n\n    }\n    val t2 = new Thread{\n      var flag = false\n      override def run(): Unit = {\n        while(!flag){\n          log(\"waiting to get\")\n          getResult()\n        }\n      }\n      def getResult():B= {\n        flag = true\n        b\n      }\n    }\n    t1.start()\n    t2.start()\n    //main\u7ebf\u7a0b\u5f00\u59cb\u7b49\u5f85\u5b50\u7ebf\u7a0b\u7684\u7ed3\u679c\n    t1.join()\n    t2.join()\n    //\u8c03\u7528getResult\u4e4b\u540e\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u624d\u4f1a\u7ed3\u675f\u6267\u884c\uff0c\u8fd4\u56de\u5230Main\u7ebf\u7a0b\n    (t1.getResult(),t2.getResult())\n  }\n  @Test\n  def test01(): Unit = {\n    def fun1(): String = {\n      \"hello\"\n    }\n\n    def fun2(): Int = {\n      1\n    }\n    val (r1, r2) = parallel[String,Int](fun1 , fun2)\n    println(r1)\n    println(r2)\n  }\n}\n</code></pre> <ol> <li>\u5b9e\u73b0\u4e00\u4e2a periodically \u65b9\u6cd5\uff0c\u5b83\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u4ee5ms \u4e3a\u5355\u4f4d\u7684\u65f6\u95f4\u53c2\u6570duration\uff0c\u4ee5\u53ca\u4e00\u4e2a\u8ba1\u7b97\u4ee3\u7801\u5757b\u3002\u6b64\u65b9\u6cd5\u6bcf\u9694duration ms\u7528\u7ebf\u7a0b\u6267\u884cb\u3002\u6b64\u65b9\u6cd5\u7684\u58f0\u660e\u5982\u4e0b\u3002</li> </ol> Text Only<pre><code>  def periodically(duration: Long)(b: =&gt;Unit): Unit  ={\n    val t = new Thread{\n      override def run(): Unit = {\n        while(true){\n          b\n          Thread.sleep(duration)\n        }\n      }\n    }\n    t.start()\n  }\n</code></pre> <p>3\uff0c4 \u5b9e\u73b0\u5355\u53d8\u91cf\u7684\u6d88\u8d39\u8005-\u751f\u4ea7\u8005\u6a21\u5f0f</p> Text Only<pre><code>class SyncVar[T] {\n  import scala.collection._\n  private var value = mutable.Queue[T]()\n  def get(): T = {\n    value.synchronized{\n      while(value.isEmpty) value.wait()\n      val res = value.dequeue()\n      value.notify()\n      res\n    }\n  }\n  def put(x: T): Unit = {\n    value.synchronized{\n      while(value.nonEmpty) value.wait()\n      value.enqueue(x)\n      value.notify()\n    }\n  }\n  def isEmpty():Boolean = value.isEmpty\n  def nonEmpty():Boolean = value.nonEmpty\n}\n\nobject Test02 {\n  def main(args: Array[String]): Unit = {\n    val sv = new SyncVar[Int]\n    val producer = thread{\n      for(i &lt;- 0 until 15){\n        sv.put(i)\n      }\n    }\n    val consumer = thread{\n      var cnt = 0\n      while(cnt &lt; 15){\n        val x = sv.get()\n        println(x)\n        cnt += 1\n      }\n    }\n    producer.join()\n    consumer.join()\n    log(\"end\")\n  }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#3_1","title":"3.\u5e76\u53d1\u7f16\u7a0b\u7684\u4f20\u7edf\u6784\u9020\u6a21\u5757","text":""},{"location":"LANG/JUC-SUC/#31executorexecutioncontext","title":"3.1Executor\u548cExecutionContext\u5bf9\u8c61","text":"<ol> <li>\u7ebf\u7a0b\u6c60\uff1a\u542f\u52a8\u4e00\u4e2a\u7ebf\u7a0b\u9700\u8981\u4e3a\u5b83\u7684\u8c03\u7528\u6808\u5206\u914d\u4e00\u4e2a\u5185\u5b58\u533a\u57df\uff0c\u8fd8\u9700\u8981\u6709\u4e00\u4e2a\u4e0a\u4e0b\u6587\u7528\u4e8e\u7ebf\u7a0b\u5207\u6362\uff0c\u5207\u6362\u751a\u81f3\u8981\u6bd4\u6267\u884c\u5e76\u53d1\u4efb\u52a1\u672c\u8eab\u66f4\u8017\u65f6\u3002\u51fa\u4e8e\u8fd9\u4e2a\u8003\u8651\uff0c\u5927\u591a\u6570\u5e76\u53d1\u6027\u6846\u67b6\u4f1a\u63d0\u4f9b\u5de5\u5177\u6765\u7ef4\u62a4\u4e00\u4e2a\u7ebf\u7a0b\u96c6\u5408\uff0c\u8ba9\u8fd9\u4e9b\u7ebf\u7a0b\u5904\u4e8e\u5f85\u547d\u72b6\u6001\uff0c\u4ee5\u968f\u65f6\u5904\u7406\u65b0\u51fa\u73b0\u7684\u5e76\u53d1\u6027\u4efb\u52a1\u3002\u8fd9\u79cd\u5de5\u5177\u4e00\u822c\u79f0\u4e3a\u7ebf\u7a0b\u6c60\u3002</li> <li> <p>Executor\u62bd\u8c61\u63a5\u53e3\uff1a</p> </li> <li> <p>\u5b83\u53ea\u6709\u4e00\u4e2aexecute\u65b9\u6cd5\uff0c\u5176\u53c2\u6570\u662f\u4e00\u4e2aRunnable\u5bf9\u8c61\uff0c\u5728execute\u65b9\u6cd5\u91cc\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2aRunnable\u5bf9\u8c61\u7684run\u65b9\u6cd5\u3002\u5b83\u4f1a\u4ece\u7ebf\u7a0b\u6c60\u4e2d\u53d6\u51fa\u4e00\u4e2a\u7ebf\u7a0b\u6765\u6267\u884cRunnable\u5bf9\u8c61\uff0c\u8be5\u7ebf\u7a0b\u4e0e\u5f53\u524d\u8c03\u7528execute\u65b9\u6cd5\u7684\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\u3002</p> </li> <li>\u4f5c\u7528\uff1aExecutor \u5bf9\u8c61\u7684\u4f5c\u7528\u662f\u5c06\u5e76\u53d1\u8ba1\u7b97\u5b9a\u4e49\u548c\u5b83\u7684\u6267\u884c\u65b9\u5f0f\u89e3\u8026\u5408\uff0c\u4ece\u800c\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u96c6\u4e2d\u7cbe\u529b\u786e\u5b9a\u54ea\u4e9b\u4ee3\u7801\u662f\u53ef\u5e76\u53d1\u6267\u884c\u7684\uff0c\u5e76\u5c06\u5b83\u4eec\u4e0e\u8c03\u7528\u65b9\u5f0f\uff08\u4f55\u65f6\u4f55\u5730\uff09\u5206\u79bb\u5f00</li> <li>\u5728Java\u4e2d\u7684\u5b9e\u73b0\u662fForkJoinPool\uff0c\u4f4d\u4e8ejava,util.concurrent\u5305\u4e2d\u3002\u5728Scala\u4e2d\u4f4d\u4e8escala.concurrent.forkjoin</li> <li>\u4f8b\u5b50\uff1a</li> </ol> Text Only<pre><code>import scala.concurrent._\nimport java.util.concurrent.ForkJoinPool\nobject ExecutorsCreate extends App {\n  //1.\u521b\u5efa\u7ebf\u7a0b\u6c60\n  val executor = new ForkJoinPool\n  //2.\u4f20\u5165runnable\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\n  executor.execute(new Runnable {\n    def run() = log(\"This task is run asynchronously.\")\n  })\n  Thread.sleep(500)\n  executor.shutdown()\n}\n</code></pre> <ol> <li>ExecutorContext\u7279\u8d28</li> </ol> <p>scala.concurrent\u5305\u5b9a\u4e49\u4e86ExecutionContext\u7279\u8d28\uff0c\u548cExecutor\u5bf9\u8c61\u7684\u529f\u80fd\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5b83\u53ea\u9488\u5bf9 Scala\u7a0b\u5e8f\u3002</p> <p>ExecutionContext \u5b9e\u73b0\u4e86\u62bd\u8c61\u7684 execute \u65b9\u6cd5\uff0c\u5bf9\u5e94\u4e86 Executor \u63a5\u53e3\u7684execute\u65b9\u6cd5\uff0c\u5b83\u8fd8\u5b9e\u73b0\u4e86reportFailure\u65b9\u6cd5\uff0c\u53c2\u6570\u4e3a\u4e00\u4e2aThrowable\u5bf9\u8c61\uff0c\u6b64 \u65b9\u6cd5\u5728\u67d0\u4e2a\u4efb\u52a1\u629b\u51fa\u5f02\u5e38\u65f6\u4f1a\u88ab\u8c03\u7528\u3002ExecutionContext \u4e2d\u8fd8\u5e26\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u7684\u6267\u884c\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0c\u79f0\u4e3aglobal\uff0c\u5176\u5185\u90e8\u4f7f\u7528\u4e86ForkJoinPool\u5b9e\u4f8b\u3002</p> <p>\u5728\u5177\u6709\u8d85\u7ebf\u7a0b\u7684\u56db\u6838CPU\u4e0a\uff0c\u5168\u5c40ExecutionContext\u5bf9\u8c61\u5728\u7ebf\u7a0b\u6c60\u4e2d\u67098\u4e2a\u7ebf\u7a0b\u3002\u800c\u5728\u672c\u7535\u8111\u4e0a\uff0c\u7ebf\u7a0b\u6c60\u670916\u4e2a\u7ebf\u7a0b\u3002</p> <p>\u907f\u514d\u5bf9ExecutionContext\u548cExecutor\u5bf9\u8c61\u6267\u884c\u53ef\u80fd\u65e0\u9650\u671f\u963b\u585e\u7684\u64cd\u4f5c\uff0c\u800c\u5bfc\u81f4\u7ebf\u7a0b\u9965\u997f</p> Text Only<pre><code>object ExecutionContextGlobal extends App {\n  val ectx = ExecutionContext.global\n  ectx.execute(new Runnable {\n    def run() = log(\"Running on the execution context.\")\n  })\n  Thread.sleep(500)\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#32_1","title":"3.2 \u539f\u5b50\u6027\u539f\u8bed","text":"<p>\u5185\u5b58\u5199\u64cd\u4f5c\u7684\u53ef\u89c1\u6027\u662f\u7531\u524d\u53d1\u751f\u5173\u7cfb\u6765\u4fdd\u8bc1\u7684\u3002\u7b2c\u4e8c\u7ae0\u4e2d\u4f7f\u7528\u7684\u662fsychronized\u6765\u5b9e\u73b0\u7684\u524d\u53d1\u751f\u5173\u7cfb\u3002</p> <p>\u539f\u5b50\u6027\u53d8\u91cf\uff0c\u5b83\u652f\u6301\u4e00\u6b21\u6027\u6267\u884c\u591a\u6b21\u5185\u5b58\u8bfb\u5199\u64cd\u4f5c\u3002\u539f\u5b50\u6027\u53d8\u91cf\u662f\u6613\u5931\u53d8\u91cf\u7684\u8fd1\u4eb2\uff0c\u4f46\u5176\u8868\u8fbe\u80fd\u529b\u66f4\u5f3a\uff0c\u5e38\u7528\u4e8e\u5728\u65e0\u987b\u4f7f\u7528synchronized \u8bed\u53e5\u7684\u60c5\u51b5\u4e0b\u6784\u9020\u590d\u6742\u7684\u5e76\u53d1\u64cd\u4f5c</p>"},{"location":"LANG/JUC-SUC/#_11","title":"\u539f\u5b50\u6027\u53d8\u91cf","text":"<ol> <li> <p>\u53ef\u7ebf\u6027\u5316\u64cd\u4f5c\uff1a</p> </li> <li> <p>\u53ef\u7ebf\u6027\u5316\u64cd\u4f5c\u6307\u7684\u662f\u5bf9\u7cfb\u7edf\u5176\u4ed6\u90e8\u5206\u800c\u8a00\u53ef\u77ac\u95f4\u53d1\u751f\u7684\u64cd\u4f5c</p> </li> <li>\u4e00\u6b21volatile\u8bfb\u6216\u5199\u5c31\u662f\u53ef\u7ebf\u6027\u5316\u64cd\u4f5c</li> <li>\u590d\u6742\u53ef\u7ebf\u6027\u5316\u64cd\u4f5c\uff1a\u81f3\u5c11\u5305\u542b\u4e24\u6b21\u8bfb/\u5199\u64cd\u4f5c</li> <li>java.util.concurrent.atomic</li> <li>AtomicBoolean</li> <li>AtomicInteger</li> <li>AtomicLong</li> <li>AtomicReference</li> <li>\u4f8b\u5b50\uff1a</li> </ol> <p>main\u7ebf\u7a0b\u4ee5\u53ca\u5176\u4ed6\u7ebf\u7a0b\u5747\u83b7\u5f97\u5168\u5c40\u552f\u4e00uid</p> <p>incrementAndGet()\u662f\u4e00\u4e2a\u590d\u6742\u53ef\u7ebf\u6027\u5316\u64cd\u4f5c\uff0c\u5b83\u540c\u65f6\u5b9e\u73b0\u4e86\u8bfb\u53d6uid\u7684\u5f53\u524d\u503cx\uff0c\u8ba1\u7b97x+1\uff0c\u7136\u540e\u5c06x+1\u5199\u56de\u5230uid\u8fd93\u4e2a\u64cd\u4f5c\u3002</p> Text Only<pre><code>import java.util.concurrent.atomic._\nobject AtomicUid extends App {\n  private val uid = new AtomicLong(0L)\n  def getUniqueId(): Long = uid.incrementAndGet()\n  for(i&lt;- 0 until 16){\n    execute { log(s\"Uid asynchronously: ${getUniqueId()}\") }\n  }\n  log(s\"Got a unique id: ${getUniqueId()}\")\n}\n</code></pre> <ol> <li>\u590d\u6742\u53ef\u7ebf\u6027\u64cd\u4f5c\u7684\u5b9e\u73b0\u57fa\u7840\uff1a</li> <li>compareAndSet\u64cd\u4f5c(CAS)\u3002\u4e5f\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684testAndSet\u6307\u4ee4</li> <li>CAS\u64cd\u4f5c\u4f1a\u8bfb\u53d6\u539f\u5b50\u53d8\u91cf\u4e4b\u524d\u7684\u9884\u671f\u503c\u4ee5\u53ca\u65b0\u503c\uff0c\u53ea\u6709\u5f53\u524d\u503c\u7b49\u4e8e\u9884\u671f\u503c\u7684\u65f6\u5019\uff0c\u624d\u539f\u5b50\u6027\u7684\u5c06\u5f53\u524d\u503c\u6362\u4e3a\u65b0\u503c\u3002\u5b83\u662f\u65e0\u9501\u7f16\u7a0b\u7684\u57fa\u7840\u6027\u6784\u9020</li> <li>\u548c\u5176\u903b\u8f91\u7b49\u4ef7\u7684synchronized\u4ee3\u7801\uff1a\u4f46\u662fCAS\u6307\u4ee4\u66f4\u9ad8\u6548\u4e14\u5728\u5927\u591a\u6570JVM\u4e0a\u4e0d\u4f1a\u53d1\u751f\u963b\u585e\uff0c\u56e0\u4e3a\u5b83\u662f\u57fa\u4e8e\u5904\u7406\u5668\u6307\u4ee4\u5b9e\u73b0\u7684</li> <li>\u57fa\u672c\u903b\u8f91\u662f\u57fa\u4e8e\u8bfb\u53d6\u7684\u503c\uff0c\u8ba1\u7b97\u51fa\u65b0\u503c\uff0c\u5982\u679c\u73b0\u5728\u53d8\u91cf\u8fd8\u662f\u521a\u624d\u8bfb\u53d6\u65f6\u523b\u7684\u503c\uff0c\u8bc1\u660e\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u6539\u53d8\u8be5\u53d8\u91cf\u3002\u6240\u4ee5\u53ef\u4ee5\u5c06\u65b0\u503c\u5199\u5165\u5185\u5b58\u3002</li> </ol> Text Only<pre><code>def compareAndSet(ov: Long, nv: Long): Boolean =\n  this.synchronized {\n    if (this.get != ov) false else {\n      this.set(nv)\n      true\n    }\n  }\n</code></pre> <ol> <li>\u4f7f\u7528CAS\u64cd\u4f5c\u91cd\u65b0\u5b9e\u73b0UID</li> <li>\u5982\u679c\u4e0d\u6ee1\u8db3CAS\u7684compare\u6761\u4ef6\uff0c\u5c31\u4f1a\u9012\u5f52\u8c03\u7528\u8fdb\u884c\u91cd\u8bd5\u3002\u53ef\u4ee5\u4f7f\u7528\u5c3e\u9012\u5f52\u4f18\u5316\u9632\u6b62\u6808\u7206\u70b8\u3002</li> <li>\u5173\u4e8e\u65e0\u9650\u9012\u5f52\uff1a\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u56e0\u4e3a\u9012\u5f52\u7684\u6761\u4ef6\u662f\u5176\u4ed6\u7ebf\u7a0b\u8fdb\u884c\u4e86\u64cd\u4f5c\uff0c\u8fd9\u4e5f\u5c31\u8bc1\u660e\u7cfb\u7edf\u7684\u6574\u4f53\u662f\u5411\u524d\u8fdb\u884c\u7684\uff0c\u5fc5\u7136\u4e0d\u4f1a\u65e0\u9650\u9012\u5f52\u3002</li> <li>\u5927\u90e8\u5206JDK\u5b9e\u73b0incrementAndGet\u7684\u65b9\u5f0f\u4e0e\u8fd9\u91cc\u57fa\u4e8eCAS\u7684getUniqueId\u7684\u5b9e\u73b0\u65b9\u5f0f\u7c7b\u4f3c\u3002</li> </ol> Text Only<pre><code>object AtomicVar2 extends App {\n  private var uid = new AtomicLong(0L)\n  @tailrec def getUniqueId(): Long = {\n    val oldUid = uid.get\n    val newUid = oldUid + 1\n    if (uid.compareAndSet(oldUid, newUid)) newUid\n    else getUniqueId()\n  }\n  for(i&lt;- 0 until 16){\n    execute { log(s\"Uid asynchronously: ${getUniqueId()}\") }\n  }\n  Thread.sleep(5000)\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#_12","title":"\u65e0\u9501\u7f16\u7a0b","text":"<ol> <li>\u4f18\u70b9</li> </ol> <p>\u5728\u65e0\u9501\u7684\u7a0b\u5e8f\u4e2d\uff0c\u8d44\u6e90\u4e89\u7528\u4e0d\u592a\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u7684\u6027\u80fd\u3002\u6267\u884c\u65e0\u9501\u64cd\u4f5c\u7684\u7ebf\u7a0b\u4e0d\u4f1a\u5c1d\u8bd5\u83b7\u5f97\u4efb\u4f55\u9501\u3002\u56e0\u800c\uff0c\u5f88\u591a\u65e0\u9501\u7b97\u6cd5\u90fd\u6709\u66f4\u9ad8\u7684\u541e\u5410\u91cf\u3002\u6267\u884c\u65e0\u9501\u7b97\u6cd5\u7684\u7ebf\u7a0b\u5373\u4f7f\u4ece\u64cd\u4f5c\u7cfb\u7edf\u5904\u83b7\u5f97\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\uff0c\u4e5f\u4e0d\u4f1a\u5360\u7528\u4efb\u4f55\u9501\uff0c\u56e0\u800c\u4e0d\u4f1a\u9020\u6210\u5176\u4ed6\u7ebf\u7a0b\u7684\u4e34\u65f6\u963b\u585e\uff0c\u56e0\u4e3a\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4f1a\u7acb\u523b\u53bb\u91cd\u8bd5\u3002</p> <p>\u65e0\u9501\u7f16\u7a0b\u548c\u6b7b\u9501\u65e0\u7f18</p> <ol> <li>\u5b9a\u4e49:\u5bf9\u4e8e\u6267\u884c\u4e00\u4e2a\u64cd\u4f5c\u7684\u591a\u4e2a\u7ebf\u7a0b\uff0c\u4e0d\u7ba1\u5404\u7ebf\u7a0b\u6267\u884c\u901f\u5ea6\u5982\u4f55\uff0c\u5982\u679c\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b\u603b\u80fd\u5728\u6709\u9650\u6b65\u9aa4\u5185\u5b8c\u6210\u6b64\u64cd\u4f5c\uff0c\u90a3\u4e48\u8be5\u64cd\u4f5c\u662f\u65e0\u9501\u7684\u3002\u800c\u4e0d\u662f\u51fa\u73b0\u6162\u7ebf\u7a0b\u963b\u585e\u5176\u4ed6\u7ebf\u7a0b\u6267\u884c\u7684\u60c5\u51b5\u3002</li> </ol>"},{"location":"LANG/JUC-SUC/#api","title":"\u9501\u7684\u5b9e\u73b0\u4e0e\u5e76\u53d1\u6587\u4ef6\u7cfb\u7edfAPI","text":"<p>\u5c06\u4f7f\u7528\u539f\u5b50\u53d8\u91cf\u6765\u5b9e\u73b0\u9501\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u963b\u585e\u8c03\u7528\u8005\uff0c\u4ece\u800c\u53ef\u4ee5\u8ba9\u7ebf\u7a0b\u5728\u65e0\u6cd5\u83b7\u5f97\u9501\u7684\u60c5\u51b5\u4e0b\u4e0d\u7528\u88ab\u963b\u585e\u3002</p> <p>\u5e76\u53d1\u6587\u4ef6\u7cfb\u7edfAPI</p> <ol> <li>\u9700\u6c42\uff1a</li> <li>\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u6b63\u5728\u521b\u5efa\u65b0\u6587\u4ef6\uff0c\u90a3\u4e48\u6b64\u6587\u4ef6\u4e0d\u80fd\u88ab\u590d\u5236\u6216\u8005\u5220\u9664</li> <li>\u5982\u679c\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u6b63\u5728\u590d\u5236\u6587\u4ef6\uff0c\u90a3\u4e48\u6b64\u6587\u4ef6\u4e0d\u80fd\u88ab\u5220\u9664</li> <li>\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u6b63\u5728\u5220\u9664\u4e00\u4e2a\u6587\u4ef6\uff0c\u90a3\u4e48\u6b64\u6587\u4ef6\u4e0d\u80fd\u88ab\u590d\u5236</li> <li>\u6587\u4ef6\u7ba1\u7406\u5668\u4e2d\uff0c\u4e00\u6b21\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5220\u9664\u540c\u4e00\u4e2a\u6587\u4ef6</li> </ol> <p>\u603b\u7ed3\u4e3a:\u589e\u52a0\uff0c\u590d\u5236\uff0c\u5220\u9664</p> <ol> <li>\u8bbe\u8ba1\u5185\u5bb9\uff1a</li> <li>\u6587\u4ef6\u548c\u76ee\u5f55\u5efa\u6a21\uff1a<ol> <li>Entry\u7c7b\u7684isDir\u5b57\u6bb5\u7528\u4e8e\u8868\u793a\u5f53\u524d\u5bf9\u8c61\u662f\u5426\u4e3a\u76ee\u5f55\u6216\u6587\u4ef6\u3002</li> <li>state\u5b57\u6bb5\u63cf\u8ff0\u4e86\u6587\u4ef6\u72b6\u6001\uff1a\u6587\u4ef6\u662f\u5426\u7a7a\u95f2(idle)\u3001\u5728\u521b\u5efa\u4e2d()\u3001\u5728\u590d\u5236\u4e2d\u6216\u5c06\u88ab\u5220\u9664\u3002\u8fd9\u4e9b\u72b6\u6001\u7528sealed\u7279\u8d28\u5efa\u6a21\uff0c\u547d\u540d\u4e3aState(\u4f7f\u7528\u5bc6\u5c01\u7c7b\u65b9\u4fbf\u6a21\u5f0f\u5339\u914d\u5230\u6240\u6709\u60c5\u51b5)</li> <li>Cpoying\u72b6\u6001\u4e0b\u7684\u5b57\u6bb5n\u7528\u6765\u8bb0\u5f55\u76ee\u524d\u6709\u591a\u5c11\u4e2a\u590d\u5236\u64cd\u4f5c</li> </ol> </li> </ol> Text Only<pre><code>sealed trait State\nclass Idle extends State\nclass Creating extends State\nclass Copying(val n:Int) extends State\nclass Deleting extends State\n//\u5bf9\u5355\u4e2a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u8fdb\u884c\u5efa\u6a21\nclass Entry(val isDir:Boolean){\n  val state = new AtomicReference[State]()\n}\n</code></pre> <ol> <li>\u72b6\u6001\u8f6c\u79fb\u56fe\uff1a</li> </ol> <p></p> <ol> <li>\u4ee3\u7801\u5b9e\u73b0\uff1a</li> </ol> Text Only<pre><code>  private def prepareForDelete(entry: Entry):Boolean = {\n    /*\n    1.\u5982\u679cstate\u662fIdle\uff0c\u5219compareAndSet\u6210\u529f\uff0c\u8fd4\u56detrue\n    2.\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684true,\u5219\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u7ebf\u7a0b\u53ef\u4ee5\u8fdb\u884c\u6587\u4ef6\u7684\u5220\u9664\n     */\n    val s0 = entry.state.get\n    s0 match {\n      case i:Idle =&gt; if(entry.state.compareAndSet(i,new Deleting)) true else prepareForDelete(entry)\n      case c:Creating =&gt; log(\"Cannot delete while creating\");false\n      case c:Copying =&gt; log(\"Cannot delete while copying\");false\n      case d:Deleting =&gt; false\n    }\n  }\n</code></pre> <ol> <li>\u5728\u539f\u5b50\u6027\u5f15\u7528\u53d8\u91cf\u4e0a\u7684CAS\u6307\u4ee4\u603b\u662f\u4f7f\u7528\u5f15\u7528\u7684\u7b49\u4ef7\u6027\uff0c\u800c\u4e0d\u4f1a\u8c03\u7528equals\u65b9\u6cd5\uff0c\u5373\u4f7fequals\u65b9\u6cd5\u91cd\u8f7d\u4e86\u4e5f\u4e0d\u884c\u3002</li> <li> <p>ABA\u95ee\u9898\uff1a</p> </li> <li> <p>\u5b9a\u4e49\uff1aABA\u95ee\u9898\u662f\u5e76\u53d1\u7f16\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684\u4e00\u79cd\u5185\u5b58\u8bfb\u5199\u903b\u8f91\u95ee\u9898\u3002\u5f53\u5bf9\u540c\u4e00\u5185\u5b58\u533a\u57df\u8fdb\u884c\u4e24\u6b21\u8bfb\u64cd\u4f5c\u65f6\uff0c\u82e5\u5f97\u5230\u76f8\u540c\u7684A\u503c\uff0c\u4e00\u822c\u4f1a\u5047\u8bbe\u4e24\u6b21\u8bfb\u64cd\u4f5c\u4e4b\u95f4\u6b64\u5185\u5b58\u533a\u57df\u6ca1\u6709\u53d1\u751f\u53d8\u5316\u3002\u4f46\u8fd9\u4e00\u7ed3\u8bba\u4e0d\u4e00\u5b9a\u53ef\u9760\uff0c\u56e0\u4e3a\u5728\u4e24\u6b21\u8bfb\u64cd\u4f5c\u4e4b\u95f4\u6709\u53ef\u80fd\u53d1\u751f\u4e86\u5148\u5199\u5165B\u503c\u540e\u53c8\u6062\u590d\u4e3aA\u503c\u7684\u60c5\u51b5\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684ABA\u95ee\u9898\uff0c</p> <ol> <li>\u8bbe\u7f6e\u6587\u4ef6\u7684copy\u72b6\u6001\u7684\u8f6c\u6362\u7684\u65f6\u5019\uff0c\u5982\u679c\u6bcf\u6b21\u51cf\u5c0f\u4e00\u4e2acopy\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u4fdd\u7559\u539f\u6765\u7684copy\u5bf9\u8c61\u3002\u7528\u6765\u5728\u589e\u52a0copy\u7684\u65f6\u5019\u590d\u7528\uff0c\u8fd9\u6837\u505a\u7684\u672c\u610f\u662f\u901a\u8fc7\u51cf\u5c11\u751f\u6210\u65b0\u7684 Copying \u5bf9\u8c61\u6765\u51cf\u5c0f\u5783\u573e\u56de\u6536\u7684\u538b\u529b\uff0c\u7136\u800c\uff0c\u8fd9\u79cd\u505a\u6cd5\u4f1a\u4ea7\u751f\u4e4b\u524d\u63d0\u5230\u7684ABA\u95ee\u9898\u3002</li> </ol> </li> </ol> Text Only<pre><code> def releaseCopy(e: Entry): Copying = e.state.get match {\n    case c: Copying =&gt;\n      val nstate = if (c.n == 1) new Idle else new Copying(c.n - 1)\n      if (e.state.compareAndSet(c, nstate)) c\n      else releaseCopy(e)\n  }\n  def acquireCopy(e: Entry, c: Copying) = e.state.get match {\n    case i: Idle =&gt; {\n      c.n = 1\n      if (!e.state.compareAndSet(i, c)) acquire(e, c)\n     }\n    case oc: Copying =&gt; {\n      c.n = oc.n + 1\n      if (!e.state.compareAndSet(oc, c)) acquire(e, c)\n    }\n  }\n</code></pre> <p></p> <ol> <li>\u89e3\u51b3\u529e\u6cd5\uff1a</li> <li>\u53ea\u80fd\u5177\u4f53\u95ee\u9898\uff0c\u5177\u4f53\u5206\u6790\u3002\u6b64\u5904\u662fAtomic\u5bf9\u8c61\u4e2d\u4fdd\u5b58\u7684\u662fcopy\u4f5c\u4e3a\u4e86\u53ef\u53d8\u5bf9\u8c61(\u672c\u6765n\u5e94\u8be5\u8bbe\u7f6e\u4e3aval\u7c7b\u578b)\u3002</li> <li>JVM\u4e0a\u7684\u5e38\u89c4\u505a\u6cd5\uff1a<ol> <li>\u751f\u6210\u65b0\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u8d4b\u503c\u7ed9AtomicReference\u5bf9\u8c61</li> <li>\u5728AtomicReference\u5bf9\u8c61\u5185\u4fdd\u5b58\u4e0d\u53ef\u53d8\u5bf9\u8c61</li> <li>\u907f\u514d\u5c06\u4e4b\u524d\u5df2\u7ecf\u8d4b\u503c\u7ed9\u539f\u5b50\u6027\u53d8\u91cf\u7684\u503c\u88ab\u91cd\u65b0\u8d4b\u503c\u3002</li> <li>\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u5355\u8c03\u9012\u589e\u6570\u503c\u578b\u539f\u5b50\u6027\u53d8\u91cf\uff0c\u5373\u8981\u4e48\u4e25\u683c\u9012\u51cf\uff0c\u8981\u4e48\u4e25\u683c\u9012\u589e</li> </ol> </li> </ol>"},{"location":"LANG/JUC-SUC/#33_1","title":"3.3\u61d2\u503c","text":"<p>\u5e76\u53d1\u7a0b\u5e8f\u4e2d\u7684\u61d2\u503c\u4f1a\u4ea7\u751f\u610f\u6599\u5916\u7684\u884c\u4e3a\uff0c\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u4e2d\u7684\u61d2\u503c\u5fc5\u987b\u4fdd\u6301\u76f8\u540c\u7684\u8bed\u4e49\uff1b\u61d2\u503c\u53ea\u6709\u5728\u88ab\u67d0\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u65f6\u624d\u4f1a\u521d\u59cb\u5316\uff0c\u800c\u4e14\u81f3\u591a\u521d\u59cb\u5316\u4e00\u6b21\u3002</p> <p>scala\u4f7f\u7528\u53cc\u68c0\u67e5\u9501\u673a\u5236\uff0c\u4fdd\u8bc1\u61d2\u503c\u5728\u88ab\u7ebf\u7a0b\u8bbf\u95ee\u65f6\u6700\u591a\u88ab\u521d\u59cb\u5316\u4e00\u6b21</p> <p>\u7edd\u5bf9\u4e0d\u8981\u5728\u516c\u5171\u5bf9\u8c61\u4e0a\u4f7f\u7528synchronized\u8bed\u53e5\uff1b\u575a\u6301\u5728\u72ec\u7acb\u4e14\u79c1\u6709\u7684\u7b80\u5355\u5bf9\u8c61\u4e0a\u8fdb\u884c\u540c\u6b65\u64cd\u4f5c\u3002</p> Text Only<pre><code>object LazyValsCreate extends App {\n  lazy val obj = new AnyRef\n  lazy val non = s\"made by ${Thread.currentThread.getName}\"\n  execute {\n    log(s\"EC sees obj = $obj\")\n    log(s\"EC sees non = $non\")\n  }\n  log(s\"Main sees obj = $obj\")\n  log(s\"Main sees non = $non\")\n  Thread.sleep(500)\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#34_1","title":"3.4 \u5e76\u53d1\u5bb9\u5668","text":"<p>scala\u7684\u6807\u51c6\u5bb9\u5668\u7684\u5b9e\u73b0\u6ca1\u6709\u4f7f\u7528\u7ebf\u7a0b\u9501\uff0c\u540c\u65f6\u53ef\u53d8\u5bb9\u5668\u80cc\u540e\u7684\u6570\u636e\u7ed3\u6784\u53ef\u80fd\u975e\u5e38\u590d\u6742</p>"},{"location":"LANG/JUC-SUC/#_13","title":"\u5e76\u53d1\u65b9\u6848","text":"Text Only<pre><code>//\u9519\u8bef\u793a\u4f8b\uff1a\u76f4\u63a5\u591a\u7ebf\u7a0b\u8bbf\u95ee\u53ef\u53d8\u5bb9\u5668\uff0c\u800c\u6ca1\u6709\u4f7f\u7528\u540c\u6b65\u673a\u5236\nimport scala.collection._\nobject CollectionsBad extends App {\n  val buffer = mutable.ArrayBuffer[Int]()\n  def asyncAdd(numbers: Seq[Int]) = execute {\n    buffer ++= numbers\n    log(s\"buffer = $buffer\")\n  }\n  asyncAdd(0 until 10)\n  asyncAdd(10 until 20)\n  Thread.sleep(500)\n}\n</code></pre> <ul> <li>\u65b9\u68481\uff1a\u4f7f\u7528\u4e0d\u53ef\u53d8\u5bb9\u5668</li> <li>\u601d\u8def\uff1a\u5c06\u4e0d\u53ef\u53d8\u5bb9\u5668\u4e0e\u539f\u5b50\u53d8\u91cf\u7684CAS\u64cd\u4f5c\u76f8\u7ed3\u5408\u3002\u4f46\u662f\u5982\u679c\u592a\u591a\u7ebf\u7a0b\u8bbf\u95ee\u539f\u5b50\u53d8\u91cf\uff0c\u53ef\u80fd\u6709\u53ef\u6269\u5c55\u6027\u95ee\u9898\u3002</li> </ul> Text Only<pre><code>class AtomicBuffer[T] {\n  private val buffer = new AtomicReference[List[T]](Nil)\n  def preappend(x: T): Unit = {\n    val xs = buffer.get\n    val nxs = x::xs\n    if(!buffer.compareAndSet(xs,nxs)) preappend(x) // tail-recursive\n  }\n}\n</code></pre> <ul> <li>\u65b9\u68482\uff1a\u4f7f\u7528\u53ef\u53d8\u5bb9\u5668</li> <li>\u601d\u8def\uff1a\u5fc5\u987b\u5c06\u76f8\u5173\u64cd\u4f5c\u653e\u5165synchronized\u8bed\u53e5\u4e2d</li> </ul> Text Only<pre><code>def asyncAdd(numbers: Seq[Int]) = execute {\n  buffer.synchronized {\n    buffer ++= numbers\n    log(s\"buffer = $buffer\")\n  }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#api_1","title":"\u5e76\u53d1\u961f\u5217\u548c\u5e76\u53d1\u6587\u4ef6\u7cfb\u7edfAPI","text":"<ol> <li>\u6d88\u8d39\u8005-\u751f\u4ea7\u8005\u6a21\u5f0f</li> </ol> <p>\u5e76\u53d1\u7f16\u7a0b\u4e2d\u91c7\u7528\u7684\u4e00\u79cd\u5e38\u89c1\u6a21\u5f0f\u662f\u751f\u4ea7\u8005\u2014\u6d88\u8d39\u8005\u6a21\u5f0f\u3002\u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u4e0d\u540c\u90e8\u5206\u7684\u8ba1\u7b97\u4efb\u52a1\u7684\u8d23\u4efb\u88ab\u5212\u5206\u7ed9\u4e0d\u540c\u7684\u7ebf\u7a0b\u3002\u6bd4\u5982\uff0c\u5728FTP\u670d\u52a1\u5668\u4e2d\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u8d1f\u8d23\u4ece\u78c1\u76d8\u4e0a\u8bfb\u53d6\u5927\u6587\u4ef6\u7684\u6570\u636e\u5757\u3002\u8fd9\u4e9b\u7ebf\u7a0b\u88ab\u79f0\u4e3a\u751f\u4ea7\u8005\u3002\u53e6\u5916\u4e00\u4e9b\u7ebf\u7a0b\u5219\u8d1f\u8d23\u5c06\u6570\u636e\u5757\u53d1\u9001\u5230\u7f51\u7edc\u4e2d\uff0c\u8fd9\u7c7b\u7ebf\u7a0b\u79f0\u4e3a\u6d88\u8d39\u8005\u3002</p> <ol> <li>\u5e76\u53d1\u961f\u5217\u7684\u4e09\u79cd\u64cd\u4f5c\uff1a</li> <li>\u751f\u4ea7\u8005\u5411\u961f\u5217\u52a0\u5165\u5de5\u4f5c\u8981\u7d20\u7684enqueue\u64cd\u4f5c</li> <li>\u6d88\u8d39\u8005\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5de5\u4f5c\u8981\u7d20\u7684dequeue\u64cd\u4f5c</li> <li>inspect\u64cd\u4f5c\uff1a\u7528\u4e8e\u63a2\u67e5\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff0c\u5e76\u68c0\u67e5\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u503c</li> <li>\u5e76\u53d1\u961f\u5217\u53ef\u4ee5\u6709\u754c\uff0c\u53ef\u4ee5\u65e0\u754c\u3002\u4e0d\u540c\u7684\u5e76\u53d1\u961f\u5217\u7684\u4e3b\u8981\u533a\u522b\u662f\u5bf9\u4e8e\u961f\u5217\u6ee1\u4ee5\u53ca\u961f\u5217\u7a7a\u7684\u64cd\u4f5c\u4e0d\u540c\uff0c\u53ef\u4ee5\u4f7f\u7528\u963b\u585e\u5f0f\uff0c\u6bd4\u5982JDK\u5728java.util.concurrent\u5305\u4e2d\u63d0\u4f9b\u4e86BlockingQueue\u3002scala\u7684\u963b\u585e\u5f0f\u5e76\u53d1\u961f\u5217\u5728scala.concurrent\u5305\u4e0b\u3002</li> </ol> <p></p> <ol> <li>\u5177\u4f53\u5b9e\u73b0\u7c7b\uff1a</li> <li>ArrayBlockingQueue \u7c7b\u662f\u4e00\u79cd\u6709\u754c\u963b\u585e\u961f\u5217\u7684\u5177\u4f53\u5b9e\u73b0\u3002\u5728\u521b\u5efa\u7684\u65f6\u5019\u9700\u8981\u6307\u5b9a\u5927\u5c0f\u3002\u5982\u679c\u751f\u4ea7\u8005\u6f5c\u5728\u7684\u751f\u4ea7\u901f\u5ea6\u8d85\u8fc7\u4e86\u6d88\u8d39\u8005\u7684\u5904\u7406\u901f\u5ea6\uff0c\u5219\u9700\u8981\u4f7f\u7528\u6709\u754c\u961f\u5217\u3002\u5426\u5219\uff0c\u961f\u5217\u4f1a\u4e0d\u65ad\u589e\u5927\uff0c\u4ee5\u81f3\u4e8e\u8017\u5c3d\u6240\u6709\u7cfb\u7edf\u5185\u5b58\u3002</li> <li>LinkedBlockingQueue\u662f\u65e0\u754c\u7684\u3002\u5176\u5e94\u7528\u4e8e\u6d88\u8d39\u8005\u603b\u662f\u6bd4\u751f\u4ea7\u8005\u6548\u7387\u66f4\u9ad8\u7684\u60c5\u51b5\u3002</li> <li>\u5e76\u53d1\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\u90fd\u53ea\u662f\u8bb0\u5f55\u67d0\u4e00\u65f6\u523b\u7684\u72b6\u6001\u3002</li> <li>\u5e76\u53d1\u6587\u4ef6\u7cfb\u7edfAPI\u7684\u8fdb\u4e00\u6b65\u5b9e\u73b0</li> <li>\u5bf9\u4e8e\u5e76\u53d1FS \u7684API\u53d1\u51fa\u7684\u5404\u79cd\u6d88\u606f\uff0c\u4f7f\u7528LInkedBlockingQueue\u8fdb\u884c\u7f13\u5b58\u3002\u8be5\u5e76\u53d1\u961f\u5217\u662f\u963b\u585e\u65b9\u5f0f\u7684\u3002</li> </ol> Text Only<pre><code>//\u7f13\u5b58\u961f\u5217\nprivate val messages = new LinkedBlockingQueue[String]\n//\u72ec\u7acb\u7684\u5b88\u62a4\u8fdb\u7a0b\nval logger = new Thread {\n  setDaemon(true)\n  override def run() = while (true) log(messages.take())\n}\nlogger.start()\ndef logMessage(msg: String): Unit = messages.offer(msg)\n</code></pre>"},{"location":"LANG/JUC-SUC/#api_2","title":"\u5e76\u53d1\u6620\u5c04 \u4ee5\u53ca\u5e76\u53d1\u6587\u4ef6\u7cfb\u7edfAPI","text":"<p>\u4e0e\u5e76\u53d1\u961f\u5217\u4e0d\u540c\uff0c\u56e0\u4e3a\u5e76\u53d1\u961f\u5217\u4e3b\u8981\u7528\u4e8e\u6d88\u8d39\u8005-\u751f\u4ea7\u8005\u6a21\u5f0f\uff0c\u4f46\u662f\u5e76\u53d1\u96c6\u5408\u4e0e\u6620\u5c04\u4e3b\u8981\u7528\u4e8e\u7a0b\u5e8f\u7684\u72b6\u6001\u7f16\u7801\u3002\u6240\u4ee5\u5e76\u53d1\u96c6\u5408\u4ee5\u53ca\u6620\u5c04\u5e76\u6ca1\u6709\u963b\u585e\u7684\u7248\u672c\u3002</p> <p>\u5e76\u53d1\u6587\u4ef6\u7cfb\u7edf\u8fdb\u4e00\u6b65\u8bbe\u8ba1</p> <ul> <li>\u5c06java.util.concurrent\u5305\u4e0b\u7684\u5e76\u53d1\u6620\u5c04\u901a\u8fc7asScala\u65b9\u6cd5\u8f6c\u6362\u4e3ascala\u96c6\u5408\u6846\u67b6</li> <li>\u901a\u8fc7\u4f7f\u7528Map\u7ed3\u6784\u5c06\u6587\u4ef6\u8def\u5f84\u4e0e\u6587\u4ef6\u5bf9\u8c61\u5bf9\u5e94</li> <li>\u4f7f\u7528org.apache.commons.io.FileUtils\u5de5\u5177\u7c7b\u6765\u5bf9\u6587\u4ef6\u8fdb\u884c\u8fed\u4ee3\uff0c\u65b9\u5f0f\u662f\u975e\u9012\u5f52</li> </ul> Text Only<pre><code>import scala.collection.convert.decorateAsScala._\nimport java.io.File\nimport org.apache.commons.io.FileUtils\nclass FileSystem(val root: String) {\n  val rootDir = new File(root)\n  val files: concurrent.Map[String, Entry] =\n    new ConcurrentHashMap().asScala\n  for (f &lt;- FileUtils.iterateFiles(rootDir, null, false).asScala)\n  files.put(f.getName, new Entry(false))\n}\n</code></pre> <p>\u5e76\u53d1\u6620\u5c04\u7684API</p> <p></p> <p>\u5e76\u53d1\u6587\u4ef6\u7cfb\u7edf\u7684copy\u72b6\u6001\u53d8\u5316\u4ee5\u53ca\u64cd\u4f5c</p> <p>\u524d\u7f6e\u64cd\u4f5c\uff1a</p> <ul> <li>copy\u64cd\u4f5c\u4ec5\u4ec5\u53d1\u751f\u5728\u6587\u4ef6\u5904\u4e8e Idle \u6216 Copying\u72b6\u6001\u65f6\uff0c\u7136\u540e\u8fd8\u9700\u8981\u539f\u5b50\u6027\u5730\u5c06\u6587\u4ef6\u72b6\u6001\u4eceIdle\u53d8\u6210Copying\uff0c\u6216\u5c06Copying\u53d8\u6210\u53e6\u4e00\u79cdCopying\u72b6\u6001\uff0c\u5e76\u5c06n\u9012\u589e\u3002</li> <li>release\u64cd\u4f5c\uff0c\u5b83\u5c06\u9012\u51cfCopying\u72b6\u6001\u7684\u8ba1\u6570\uff0c\u6216\u5c06Copying\u72b6\u6001\u4fee\u6539\u4e3aIdle\u72b6\u6001\u3002\u6ce8\u610f\uff0c\u6b64\u65b9\u6cd5\u5fc5\u987b\u5728\u6587\u4ef6\u521b\u5efa\u4e4b\u540e\u8c03\u7528\uff0c\u4ee5\u4fbf\u5c06Creating\u72b6\u6001\u5207\u6362\u81f3Idle\u72b6\u6001\u3002</li> </ul> <p>copyFile\u65b9\u6cd5\u5b9e\u73b0\uff1a</p> <ul> <li>\u6781\u7aef\u6b64\u65b9\u6cd5\u4f1a\u5148\u68c0\u67e5files\u6620\u5c04\u4e2d\u662f\u5426\u5b58\u5728src\u9879\uff0c\u5982\u679c\u5b58\u5728\uff0ccopyFile\u4f1a\u542f\u52a8\u4e00\u4e2a\u5e76\u53d1\u4efb\u52a1\u6765\u590d\u5236\u6587\u4ef6\u3002</li> <li>\u6b64\u5e76\u53d1\u4efb\u52a1\u5c1d\u8bd5\u83b7\u5f97\u6b64\u6587\u4ef6\u7684\u63a7\u5236\u6743\uff0c\u590d\u5236\u6587\u4ef6\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u5904\u4e8e Creating \u72b6\u6001\u7684\u65b0\u7684destEntry\u6587\u4ef6\u9879\u3002</li> <li>\u7136\u540e\u8c03\u7528putIfAbsent\u65b9\u6cd5\uff0c\u5b83\u4f1a\u539f\u5b50\u6027\u5730\u68c0\u67e5\u76ee\u6807\u6587\u4ef6\u8def\u5f84\u662f\u5426\u4f4d\u4e8e\u6620\u5c04\u4e2d\u3002\u5982\u679c\u4e0d\u5728\uff0c\u5219\u6dfb\u52a0(dest,destEntry)\u3002</li> <li>\u6b64\u65f6\uff0csrcEntry \u548cdestEntry\u8fd9\u4e24\u9879\u90fd\u5904\u4e8e\u9501\u5b9a\u72b6\u6001\uff0c\u6240\u4ee5CommonsIO\u5e93\u4e2d\u7684FileUtils.copyFile\u53ef\u7528\u4e8e\u8fdb\u884c\u78c1\u76d8\u4e0a\u7684\u590d\u5236\u64cd\u4f5c\u3002\u4e00\u65e6\u590d\u5236\u5b8c\u6210\uff0csrcEntry\u548cdestEntry\u90fd\u4f1a\u88ab\u91ca\u653e\u3002</li> </ul> Text Only<pre><code>  //copyFile\u7684\u51c6\u59071\n  @tailrec private def acquire(entry: Entry): Boolean = {\n    val s0 = entry.state.get\n    s0 match {\n      case _: Creating | _: Deleting =&gt; {\n        logMessage(\"File inaccessible, cannot copy.\")\n        false\n      }\n      case i: Idle =&gt; {\n        if (entry.state.compareAndSet(s0, new Copying(1))) true else acquire(entry)\n      }\n      case c: Copying =&gt; {\n        if (entry.state.compareAndSet(s0, new Copying(c.n + 1))) true else acquire(entry)\n      }\n    }\n  }\n\n  //copyFile\u7684\u51c6\u59072\n  @tailrec private def release(entry: Entry): Unit = {\n    val s0 = entry.state.get\n    s0 match {\n      case _: Creating =&gt; {\n        if (!entry.state.compareAndSet(s0, new Idle)) release(entry)\n      }\n      case c: Copying =&gt; {\n        val nstate = if (c.n == 1) new Idle else new Copying(c.n - 1)\n        if (!entry.state.compareAndSet(s0, nstate)) release(entry)\n      }\n    }\n  }\n\n  //copyFile\n  def copyFile(src: String, dest: String): Unit = {\n    files.get(src) match {\n      case None =&gt; logMessage(s\"Path '$src' does not exist!\")\n      case Some(srcEntry) =&gt; {\n        if (!srcEntry.isDir) {\n          //\u521b\u5efa\u65b0\u7684\u590d\u5236\u6587\u4ef6\u7ebf\u7a0b\n          execute {\n            if (acquire(srcEntry)) try {\n              val destEntry = new Entry(isDir = false)\n              //\u72b6\u6001\u662f\u6b63\u5728\u88ab\u590d\u5236\u751f\u6210\n              destEntry.state.set(new Creating)\n              //\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u539f\u5b50\u64cd\u4f5cputIfAbsent\uff0c\u662f\u5c11\u6709\u7684\u590d\u6742\u7ebf\u6027\u5316\u64cd\u4f5c\n              files.putIfAbsent(dest, destEntry) match {\n                case None =&gt; {\n                  try {\n                    FileUtils.copyFile(new File(src), new File(dest))\n                  } finally release(destEntry)\n                }\n                case _ =&gt; logMessage(\"File already exists!\")\n              }\n            } finally release(srcEntry)\n          }\n        }\n      }\n    }\n  }\n</code></pre>"},{"location":"LANG/JUC-SUC/#_14","title":"\u5e76\u53d1\u96c6\u5408","text":"<p>Set[T]\u7c7b\u578b\u7684\u5e76\u53d1\u96c6\u5408\u53ef\u7528ConcurrentMap[T,Unit]\u7c7b\u578b\u6765\u6a21\u62df\uff0c\u4fdd\u7559\u952e\u800c\u5ffd\u7565\u503c\u5373\u53ef\u3002\u8fd9\u4e5f\u662f\u5e76\u53d1\u6846\u67b6\u4e2d\u8f83\u5c11\u51fa\u73b0\u5e76\u53d1\u96c6\u5408\u7684\u5b9e\u73b0\u7684\u539f\u56e0\u3002</p> <p>\u6700\u540e\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7edd\u5bf9\u4e0d\u8981\u4f7f\u7528null\u4f5c\u4e3a\u5e76\u53d1\u6620\u5c04/\u96c6\u5408\u4e2d\u7684\u952e\u6216\u503c\u3002\u5f88\u591aJVM\u4e0a\u5b9e\u73b0\u7684\u5e76\u53d1\u6570\u636e\u7ed3\u6784\u5c06null\u89c6\u4e3a\u4e00\u79cd\u7279\u6b8a\u6807\u8bc6\u7b26\uff0c\u7528\u6765\u8868\u793a\u5143\u7d20\u4e0d\u5b58\u5728\u3002</p>"},{"location":"LANG/JUC-SUC/#api_3","title":"\u5e76\u53d1\u904d\u5386(\u96c6\u5408) \u4e0e\u5e76\u53d1\u6587\u4ef6\u7cfb\u7edfAPI","text":"<ol> <li>Scala \u5728\u5e76\u53d1\u5bb9\u5668\u7684\u8bbf\u95ee\u4e0a\u6709\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u3002scala.collection. concurrent\u5305\u4e2d\u7684TrieMap\u5bb9\u5668\u57fa\u4e8e\u5e76\u53d1\u7684Trie\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u662f\u4e00\u79cd\u5e76\u53d1\u7684\u6620\u5c04\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u4ea7\u751f\u5177\u6709\u4e00\u81f4\u6027\u7684\u904d\u5386\u5668\u3002</li> </ol> <p>\u5f53\u5176iterator\u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0cTrieMap\u5bb9\u5668\u4f1a\u539f\u5b50\u6027\u5730\u5bf9\u6240\u6709\u5143\u7d20\u5b9e\u73b0\u4e00\u4e2a\u5feb\u7167\u3002\u5feb\u7167\u6307\u7684\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u72b6\u6001\u7684\u5b8c\u6574\u4fe1\u606f\u3002\u7136\u540e\uff0c\u904d\u5386\u5668\u4f7f\u7528\u8fd9\u4e2a\u5feb\u7167\u6765\u904d\u5386\u5143\u7d20\u3002\u5982\u679c TrieMap \u5bb9\u5668\u4e4b\u540e\u88ab\u4fee\u6539\u4e86\uff0c\u90a3\u4e48\u6b64\u6539\u52a8\u5728\u4e4b\u524d\u7684\u5feb\u7167\u4e2d\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u56e0\u6b64\u5feb\u7167\u548c\u904d\u5386\u5668\u5e76\u6ca1\u6709\u53d1\u73b0\u8fd9\u4e2a\u6539\u52a8</p> <p>\u5b83\u53ef\u786e\u4fdd\u53ea\u590d\u5236\u90a3\u4e9b\u88ab\u4fee\u6539\u7684\u90e8\u5206\u3002\u5982\u679c\u6ca1\u6709\u518d\u53d1\u751f\u5e76\u53d1\u7684\u4fee\u6539\uff0c\u5219TrieMap\u5bb9\u5668\u4e5f\u4e0d\u518d\u9700\u8981\u8fdb\u884c\u590d\u5236\u3002</p> <ol> <li>\u4f5c\u7528\uff1a</li> <li>\u60f3\u8c61\u4e00\u4e0b\uff0c\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u9700\u8981\u83b7\u5f97\u4e00\u4e2a\u4e00\u81f4\u6027\u7684\u5feb\u7167\uff0c\u5305\u542b\u67d0\u4e00\u65f6\u523b\u6587\u4ef6\u7ba1\u7406\u5668\u6216 FTP \u670d\u52a1\u5668\u770b\u5230\u7684\u6240\u6709\u6587\u4ef6\u3002</li> <li>TrieMap \u5bb9\u5668\u53ef\u4fdd\u8bc1\u5220\u9664\u6216\u590d\u5236\u6587\u4ef6\u7684\u7ebf\u7a0b\u4e0d\u4f1a\u5e72\u6d89\u63d0\u53d6\u6587\u4ef6\u7684\u7ebf\u7a0b</li> <li>\u53ef\u7528TrieMap\u5bb9\u5668\u5b58\u50a8\u6587\u4ef6\uff0c\u7136\u540e\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684allFiles\u65b9\u6cd5\uff0c\u7528\u4e8e\u8fd4\u56de\u6240\u6709\u6587\u4ef6\u3002\u5728for\u63a8\u5bfc\u5f0f\u4e2d\u7684files\u6620\u5c04\u4f1a\u4ea7\u751f\u4e00\u4e2a\u5feb\u7167\uff0c\u91cc\u9762\u5305\u542b\u4e86\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u6587\u4ef6\u3002</li> </ol> <p>\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4e00\u81f4\u6027\u904d\u5386\u5668\uff0c\u90a3\u4e48\u5e94\u8be5\u4f7f\u7528 TrieMap \u5bb9\u5668\u3002</p> <p>\u4f46\u5982\u679c\u4e00\u81f4\u6027\u904d\u5386\u5668\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u5e76\u4e14\u5bb9\u5668\u6781\u5c11\u53d1\u751f\u4fee\u6539\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u4f7f\u7528ConcurrentHashMap\u5bb9\u5668\uff0c\u56e0\u4e3a\u5b83\u7684\u67e5\u8be2\u64cd\u4f5c\u901f\u5ea6\u8981\u7a0d\u5fae\u5feb\u4e00\u4e9b\u3002</p>"},{"location":"LANG/JUC-SUC/#35","title":"3.5 \u5b9a\u5236\u5e76\u53d1\u6570\u636e\u7ed3\u6784","text":""},{"location":"LANG/JUC-SUC/#_15","title":"\u5b9e\u73b0\u4e00\u4e2a\u65e0\u9501\u7684\u5e76\u53d1\u6c60","text":"<ol> <li>\u529f\u80fd\uff1a\u6c60\u662f\u4e00\u79cd\u7b80\u5355\u7684\u62bd\u8c61\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u53ea\u6709\u4e24\u4e2a\u64cd\u4f5c\uff0c\u5373add\u548cremove\u64cd\u4f5c\u3002\u5176\u4e2dadd\u5c31\u662f\u6c60\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u3002\u6c60\u4e0a\u7684remove\u64cd\u4f5c\u9650\u5236\u66f4\u591a\u3002remove\u5e76\u4e0d\u662f\u4ece\u6c60\u4e2d\u5220\u9664\u4e00\u4e2a\u5177\u4f53\u7684\u5143\u7d20\uff0c\u800c\u662f\u5728\u6c60\u975e\u7a7a\u65f6\u5220\u9664\u4efb\u610f\u5143\u7d20\u3002\u987e\u540d\u601d\u4e49\uff0c\u65e0\u9501\u7684\u6c60\u6307\u7684\u662f\u64cd\u4f5c\u4e0d\u7528\u4e0a\u9501\u7684\u6c60\u3002</li> <li>\u4f7f\u7528\u573a\u666f\uff1a\u56e0\u4e3a\u5b83\u53ef\u7528\u4e8e\u4e34\u65f6\u5b58\u50a8\u4e00\u4e9b\u91cd\u65b0\u521b\u5efa\u4ee3\u4ef7\u5f88\u5927\u7684\u5bf9\u8c61\uff0c\u6bd4\u5982\u5de5\u4f5c\u7ebf\u7a0b\u6216\u6570\u636e\u5e93\u8fde\u63a5\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u5e94\u7528\u573a\u666f\uff0c\u7528\u6237\u5e76\u4e0d\u5173\u5fc3remove\u5220\u9664\u7684\u662f\u54ea\u4e2a\u5143\u7d20\uff0c\u53ea\u8981\u8fd4\u56de\u67d0\u4e2a\u5143\u7d20\u5373\u53ef\u3002</li> <li> <p>\u6570\u636e\u7ed3\u6784\u7684\u8868\u8fbe\u65b9\u5f0f\uff1a</p> </li> <li> <p>\u4f7f\u7528\u4e00\u4e2a\u4e0d\u53ef\u53d8\u94fe\u8868\u8fdb\u884c\u7ef4\u62a4</p> <ul> <li>\u56e0\u4e3a\u8981\u6c42\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u662f\u65e0\u9501\u7684\uff0c\u6240\u4ee5\u4f7f\u7528CAS\u8fdb\u884c\u8bbe\u8ba1\u3002\u5c06\u72b6\u6001\u7f16\u7801\u4e3a\u4e00\u4e2aAtomicReference\u5bf9\u8c61\uff0c\u7528\u5b83\u6765\u4fdd\u5b58\u4e00\u4e2a\u4e0d\u53ef\u53d8\u94fe\u8868\u7684\u6307\u9488\u3002</li> <li>\u4f7f\u7528add\u65b9\u6cd5\uff0c\u5c31\u662f\u5148\u8bfb\u53d6\u65e7\u94fe\u8868\uff0c\u5728\u94fe\u8868\u5934\u90e8\u6dfb\u52a0\u5143\u7d20\uff0c\u89e6\u53d1CAS\u64cd\u4f5c\uff0c\u540c\u4e8e\u66ff\u6362\u65e7\u94fe\u8868\uff0c\u5931\u8d25\u5219\u8fdb\u884c\u91cd\u8bd5\u3002</li> <li>remove\u65b9\u6cd5\u8fc7\u7a0b\u4e0eadd\u7c7b\u4f3c\u3002</li> <li>\u7f3a\u70b9\uff1a\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u7684\u53ef\u6269\u5c55\u6027\u5e76\u4e0d\u597d\u3002\u591a\u4e2a\u5904\u7406\u5668\u9700\u8981\u8bbf\u95ee\u540c\u4e00\u4e2a\u5185\u5b58\u533a\u57df\uff0c\u4ece\u800c\u4f1a\u5bfc\u81f4\u91cd\u8bd5\u8fc7\u4e8e\u9891\u7e41\u3002\u9884\u671f\u7684\u64cd\u4f5c\u65f6\u95f4\u662fO(P)\uff0c\u5176\u4e2d P\u4e3a\u5e76\u53d1\u6267\u884cadd\u548cremove\u64cd\u4f5c\u7684\u5904\u7406\u5668\u6570\u76ee</li> </ul> </li> <li> <p>\u4f7f\u7528\u591a\u4e2a\u4e0d\u53ef\u53d8\u94fe\u8868\u8fdb\u884c\u7ef4\u62a4</p> </li> <li> <p>\u9700\u8981\u4e0d\u540c\u7684\u5904\u7406\u5668\u66f4\u65b0\u6570\u636e\u7684\u65f6\u5019\u8bbf\u95ee\u4e0d\u540c\u7684\u5185\u5b58\u4f4d\u7f6e\u3002</p> </li> <li>remove\u64cd\u4f5c\u5e76\u4e0d\u9700\u8981\u641c\u7d22\u54ea\u4e2a\u5177\u4f53\u7684\u5143\u7d20\uff0c\u5b83\u53ea\u8981\u80fd\u8fd4\u56de\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\u5373\u53ef\u3002\u800cadd \u64cd\u4f5c\u53ef\u4ee5\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u6b64\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e</li> <li>\u5185\u90e8\u6570\u636e\u8868\u793a\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u539f\u5b50\u6027\u5f15\u7528\u7684\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5f15\u7528\u6307\u5411\u4e00\u4e2a\u4e0d\u53ef\u53d8\u94fe\u8868\u3002\u56e0\u6b64\uff0c\u4e0d\u540c\u7684\u5904\u7406\u5668\u53ef\u4ee5\u5728\u591a\u4e2a\u539f\u5b50\u6027\u5f15\u7528\u4e2d\u4efb\u9009\u4e00\u4e2a\u8fdb\u884c\u66f4\u65b0\u3002</li> <li>\u4ee3\u7801\u5b9e\u73b0</li> <li>\u5b58\u50a8\u90e8\u5206</li> </ol> Text Only<pre><code>  val parallelism = Runtime.getRuntime.availableProcessors * 32\n  val buckets = new Array[AtomicReference[(List[T],Long)]](parallelism)\n  for(i&lt;-buckets.indices){\n    //\u6bcf\u4e2a\u539f\u5b50\u5f15\u7528\u4e0d\u4ec5\u4fdd\u5b58\u4e86\u4e00\u4e2a\u94fe\u8868\uff0c\u8fd8\u4fdd\u5b58\u4e86\u4e00\u4e2a\u552f\u4e00\u7684\u65f6\u95f4\u6233\uff0c\u6bcf\u6b21\u66f4\u65b0\u7684\u65f6\u5019\u4f1a\u9012\u589e\n    buckets(i) = new AtomicReference((Nil,0L))\n  }\n</code></pre> <ol> <li>add\u65b9\u6cd5</li> </ol> <p>add\u64cd\u4f5c\u5fc5\u987b\u5728\u6570\u7ec4\u4e2d\u9009\u4e00\u4e2a\u539f\u5b50\u6027\u5f15\u7528\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7248\u672c\u7684\u94fe\u8868\uff0c\u7528\u4e8e\u5305\u542b\u65b0\u5143\u7d20\uff0c\u7136\u540e\u89e6\u53d1CAS\u6307\u4ee4\uff0c\u76f4\u5230\u76f8\u5e94\u7684\u539f\u5b50\u6027\u5f15\u7528\u88ab\u66f4\u65b0\u3002\u9009\u62e9\u6570\u7ec4\u4e2d\u7684\u67d0\u4e00\u9879\u65f6\uff0c\u5f53\u524d\u5904\u7406\u5668\u5fc5\u987b\u786e\u4fdd\u6ca1\u6709\u5176\u4ed6\u5904\u7406\u5668\u5728\u5360\u7528\u5b83\uff0c\u4ee5\u907f\u514d\u7ade\u4e89\u548c\u91cd\u8bd5\u3002</p> <p>\u4f7f\u7528ID\u548c\u5143\u7d20\u7684hashcode\u503c\u8fdb\u884c\u5f02\u6216\uff0c\u8ba1\u7b97\u51fa\u6570\u7ec4\u7d22\u5f15\u3002\u53ef\u4ee5\u8f83\u5927\u7a0b\u5ea6\u4fdd\u8bc1\u5206\u5e03\u5206\u6563\uff0c\u51cf\u5c11\u54c8\u5e0c\u51b2\u7a81\u3002</p> Text Only<pre><code>  def add(x:T):Unit = {\n    //\u968f\u673a\u589e\u52a0\u4e00\u4e2a\u4f4d\u7f6e\uff0cCAS\u91cd\u8bd5\u7684\u6982\u7387\u6bd4\u8f83\u5c0f\n    val i = ((Thread.currentThread.getId ^ x.##) % buckets.length).toInt\n    @tailrec def retry():Unit = {\n      val bucket = buckets(i)\n      val v  = bucket.get\n      val nv = (x::v._1,v._2+1)\n      if(!bucket.compareAndSet(v,nv)) retry()\n    }\n    retry()\n  }\n</code></pre> <ol> <li>remove\u65b9\u6cd5</li> </ol> <p>\u4e0d\u80fd\u4f7f\u7528\u4e00\u6b21\u626b\u63cf\u7684\u65b9\u5f0f\uff0c\u56e0\u4e3a\u5e76\u53d1\u60c5\u51b5\u4e0b\u53ef\u80fd\u521a\u624d\u4e3a\u7a7a\u7684\u9879\u4e0b\u4e00\u65f6\u523b\u5c31\u6709\u5143\u7d20\u3002\u6781\u7aef\u60c5\u51b5\u4e0b\u9020\u6210\u7684\u662f\u626b\u63cf\u4e00\u904d\uff0c\u8ba4\u4e3a\u4e3a\u7a7a\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5168\u90e8\u90fd\u6709\u5143\u7d20\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528\u65f6\u95f4\u6233\uff0c\u65f6\u95f4\u6233\u4e0d\u53d8\u5c31\u8bc1\u660e\u6ca1\u6709\u88ab\u64cd\u4f5c\u3002\u626b\u63cf\u4e24\u8fb9\u68c0\u67e5\u65f6\u95f4\u6233\u4e4b\u548c\uff0c\u6765\u786e\u5b9a\u7ec8\u6b62\u4fe1\u606f\u3002</p> Text Only<pre><code>    def remove(): Option[T] = {\n      val start =\n        (Thread.currentThread.getId % buckets.length).toInt\n      @tailrec def scan(witness: Long): Option[T] = {\n        var i = (start + 1) % buckets.length\n        var sum = 0L\n        while (i != start) {\n          val bucket = buckets(i)\n          @tailrec def retry(): Option[T] = {\n            bucket.get match {\n              case (Nil, stamp) =&gt;\n                sum += stamp\n                None\n              case v @ (lst, stamp) =&gt;\n                val nv = (lst.tail, stamp + 1)\n                if (bucket.compareAndSet(v, nv)) Some(lst.head)\n                else retry()\n            }\n          }\n          retry() match {\n            case Some(v) =&gt; return Some(v)\n            case None =&gt;\n          }\n          i = (i + 1) % buckets.length\n        }\n        if (sum == witness) None\n        else scan(sum)\n      }\n      scan(-1L)\n    }\n</code></pre>"},{"location":"LANG/JUC-SUC/#_16","title":"\u8fdb\u7a0b\u7684\u521b\u5efa\u548c\u5904\u7406","text":"<p>\u53ea\u8981\u673a\u5668\u5185\u5b58\u8db3\u591f\u591a\uff0c\u72ec\u7acb\u8fdb\u7a0b\u4e2d\u7684\u5783\u573e\u56de\u6536\u6216\u5373\u65f6\u7f16\u8bd1\uff08just-in-time compilation\uff09\u5c31\u5e94\u8be5\u4e0d\u4f1a\u5f71\u54cd\u8fdb\u7a0b\u7684\u8fd0\u884c\u3002</p> <p>scala.sys.process\u5305\u4e2d\u5305\u542b\u5904\u7406\u5176\u4ed6\u8fdb\u7a0b\u7684\u4e00\u5957\u7cbe\u7b80API\u3002\u7528\u6237\u53ef\u4ee5\u540c\u6b65\u8fd0\u884c\u5b50\u8fdb\u7a0b\uff0c\u7236\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u5b50\u8fdb\u7a0b\u7684\u90a3\u4e2a\u7ebf\u7a0b\u4f1a\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\u3002\u4e5f\u53ef\u4ee5\u5f02\u6b65\uff0c\u5373\u5b50\u8fdb\u7a0b\u4e0e\u7236\u8fdb\u7a0b\u4e2d\u7684\u8c03\u7528\u7ebf\u7a0b\u5e76\u53d1\u8fd0\u884c\u3002</p>"},{"location":"LANG/JUC-SUC/#4futurepromise","title":"4.\u57fa\u4e8eFuture\u548cPromise\u7684\u5f02\u6b65\u7f16\u7a0b","text":""},{"location":"LANG/JUC-SUC/#41-future","title":"4.1 Future","text":""},{"location":"LANG/JUC-SUC/#_17","title":"\u57fa\u672c\u6982\u5ff5","text":"<ol> <li>\u963b\u585e\u7ebf\u7a0b\u7684\u539f\u56e0\uff1a</li> <li>\u8d44\u6e90\u662f\u6709\u9650\u7684\u3002</li> <li>\u8ba1\u7b97\u6240\u9700\u8981\u7684\u6570\u636e\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\uff0c\u6bd4\u5982\u7ebf\u7a0b\u901a\u8fc7\u7f51\u7edc\u8bf7\u6c42\u8d44\u6e90</li> <li>Future\u662f\u4e00\u79cd\u5360\u4f4d\u7b26\uff0c\u5373\u67d0\u4e2a\u503c\u7684\u5185\u5b58\u4f4d\u7f6e\u3002\u5f53\u521b\u5efaFuture\u65f6\uff0c\u76f8\u5e94\u7684\u5360\u4f4d\u7b26\u4e2d\u4e0d\u9700\u8981\u6709\u503c\uff1b\u53ef\u4ee5\u968f\u7740getWebpage\u65b9\u6cd5\u7684\u6267\u884c\uff0c\u5728\u672a\u6765\u7684\u67d0\u4e2a\u65f6\u95f4\u5c06\u503c\u653e\u8fdb\u53bb\u3002Future[]\u7c7b\u578b\u9690\u542b\u4e86\u7a0b\u5e8f\u7684\u5ef6\u65f6\u8fc7\u7a0b\uff0c\u5176\u7a0b\u5e8f\u8bed\u4e49\u662f\uff0c\u8d44\u6e90\u8fc7\u4e00\u4f1a\u513f\u624d\u53ef\u7528\u3002\u5f53Future\u5bf9\u8c61\u83b7\u5f97\u67d0\u4e2a\u503c\u4e4b\u540e\uff0c\u5b83\u5c31\u4e0d\u518d\u53d8\u5316\u4e86\u3002</li> </ol> Text Only<pre><code>//\u8fd4\u56de\u503c\u8868\u793aFuture\u5bf9\u8c61\u6700\u7ec8\u4f1a\u5305\u542b\u4e00\u4e2aString\u7c7b\u578b\u7684\u503c\ndef getWebpage(url: String): Future[String]\n</code></pre> <ol> <li>Future\u503c\u7684\u63d0\u53d6\u65b9\u5f0f\uff1a\u5728\u5f53\u524d\u7684\u8c03\u7528\u7ebf\u7a0b\u4e2d\uff0c\u8fdb\u884c\u8f6e\u8be2(polling)\uff0c\u8ba9\u7ebf\u7a0b\u5728\u503c\u53ef\u7528\u4e4b\u524d\u5904\u4e8e\u963b\u585e\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u5c06\u963b\u585e\u8f6c\u79fb\u5230\u4e86\u8c03\u7528\u7ebf\u7a0b\u4e2d\u3002Future[T]\u8868\u793a\u4e00\u4e2a\u5f53\u524d\u53ef\u80fd\u4e0d\u53ef\u7528\uff0c\u4f46\u662f\u8fc7\u4e00\u6bb5\u65f6\u95f4\u53ef\u7528\u7684\u7c7b\u578b\u4e3aT\u7684\u503c\u3002\u800cFuture\u8ba1\u7b97\u8868\u793a\u80fd\u4ea7\u751fFuture\u503c\u7684\u5f02\u6b65\u8ba1\u7b97\u3002</li> </ol> Text Only<pre><code>//\u5728\u5916\u56f4\u4f5c\u7528\u57df\u641c\u7d22\u4e00\u4e2a\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u503c\uff0c\u786e\u5b9a\u7ebf\u7a0b\u4f55\u65f6\u4f55\u5730\u6267\u884c(\u7ebf\u7a0b\u6c60)\ndef apply[T](b: =&gt;T)(implicit e: ExecutionContext): Future[T]\n</code></pre>"},{"location":"LANG/JUC-SUC/#future","title":"\u542f\u52a8Future\u8ba1\u7b97","text":"<p>\u5728\u6b64\u4f8b\u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u4f7f\u7528\u4e86\u8f6e\u8be2\u6cd5\u6765\u83b7\u5f97Future\u7684\u503c\u3002Future\u5355\u4f8b\u5bf9\u8c61\u7684polling\u65b9\u6cd5\u662f\u975e\u963b\u585e\u5f0f\u7684\uff0c\u4f46\u5b83\u4eec\u4e5f\u662f\u975e\u786e\u5b9a\u6027\u7684\u3002isCompleted \u4f1a\u8fd4\u56defalse\uff0c\u76f4\u5230Future \u8ba1\u7b97\u5b8c\u6210\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cFuture \u8ba1\u7b97\u7684\u5b8c\u6210\u5bf9\u4e8e\u8f6e\u8be2\u8c03\u7528\u6765\u8bf4\u662f\u4e00\u79cd\u524d\u53d1\u751f\u5173\u7cfb\u3002</p> Text Only<pre><code>object FutureDataType extends App {\n  import scala.concurrent._\n  import ExecutionContext.Implicits.global\n  val buildFile = Future{\n    val f: BufferedSource = Source.fromFile(\"pom.xml\")\n    try{\n      f.getLines().mkString(\"\\n\")\n    } finally f.close()\n  }\n  log(s\"start read the file\")\n  log(s\"status:  ${buildFile.isCompleted}\")\n  Thread.sleep(250)\n  log(s\"status:  ${buildFile.isCompleted}\")\n  log(s\"value: \\n ${buildFile.value}\")\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#future_1","title":"Future\u56de\u8c03","text":"<p>\u6982\u5ff5\uff1a\u56de\u8c03\u662f\u6307\u4e00\u65e6\u53c2\u6570\u53ef\u7528\u5c31\u7acb\u5373\u6267\u884c\u7684\u51fd\u6570\u3002\u5f53\u5411scala\u7684Future\u8f93\u5165\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u7684\u65f6\u5019\uff0c\u6b64\u56de\u8c03\u603b\u662f\u4f1a\u6267\u884c\uff0c\u4f46\u662f\u662f\u5728Future\u7684\u503c\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\u3002</p> Text Only<pre><code>object FuturesCallbacks extends App {\n  def getUrlSpec(): Future[List[String]] = Future {\n    val url = \"http://www.w3.org/Addressing/URL/url-spec.txt\"\n    val f = Source.fromURL(url)\n    try f.getLines.toList finally f.close()\n  }\n  val urlSpec: Future[List[String]] = getUrlSpec()\n  def find(lines: List[String], keyword: String): String =\n    lines.zipWithIndex collect {\n      case (line, n) if line.contains(keyword) =&gt; (n, line)\n  } mkString(\"\\n\")\n\n  urlSpec foreach  {\n    lines =&gt; log(find(lines, \"URL\"))\n  }\n  log(\"callback registered, continuing with other work\")\n  Thread.sleep(20000)\n}\n</code></pre> <p>\u56de\u8c03\u51fd\u6570\u7684\u4f7f\u7528\uff1a</p> <p>\u53ea\u80fd\u7528foreach\u65b9\u6cd5\u5728Future\u5bf9\u8c61\u4e2d\u88c5\u5165\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u3002\u6ce8\u610f\uff0cforeach\u65b9\u6cd5\u4e0eonSuccess\u65b9\u6cd5\u662f\u7b49\u4ef7\u7684\u3002foreach\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u90e8\u5206\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u63a5\u6536\u4e00\u4e2aFuture\u503c\uff0c\u7136\u540e\u4f1a\u6267\u884c\u67d0\u4e2a\u64cd\u4f5c</p> <p>\u9700\u8981\u5f3a\u8c03\u7684\u662f\uff0c\u6ce8\u518c\u56de\u8c03\u7684\u8fc7\u7a0b\u662f\u975e\u963b\u585e\u7684\u3002\u4e3b\u7ebf\u7a0b\u4e2d\u7684log\u8bed\u53e5\u4f1a\u5728\u56de\u8c03\u6ce8\u518c\u5b8c\u6bd5\u540e\u7acb\u523b\u6267\u884c\uff0c\u800c\u56de\u8c03\u91cc\u9762\u7684log\u8bed\u53e5\u5219\u4f1a\u5728\u5f88\u4e45\u4e4b\u540e\u624d\u6267\u884c</p> <p>\u6ce8\u610f\uff0c\u56de\u8c03\u51fd\u6570\u4e0d\u4e00\u5b9a\u4f1a\u5728Future\u5b8c\u6210\u4e4b\u540e\u7acb\u523b\u6267\u884c\u3002\u5927\u90e8\u5206\u6267\u884c\u4e0a\u4e0b\u6587\u4f1a\u5b89\u6392\u4e00\u4e2a\u4efb\u52a1\u4e13\u95e8\u5904\u7406\u56de\u8c03\u3002\u5f53Future\u5b8c\u6210\u540e\uff0c\u56de\u8c03\u51fd\u6570\u603b\u4f1a\u6267\u884c\uff0c\u4e0d\u8fc7\u540c\u4e00\u4e2aFuture\u4e0a\u7684\u4e0d\u540c\u56de\u8c03\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002\u6267\u884c\u4e0a\u4e0b\u6587\u51b3\u5b9a\u4e86\u7531\u54ea\u4e2a\u7ebf\u7a0b\u5728\u4f55\u65f6\u6267\u884c\u56de\u8c03\u51fd\u6570\u3002\u5b8c\u6210Future\u548c\u6267\u884c\u56de\u8c03\u4e4b\u95f4\u5b58\u5728\u524d\u53d1\u751f\u5173\u7cfb\u3002</p> <p>\u56de\u8c03\u51fd\u6570\u7684\u6027\u8d28\uff1a</p> <p>\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u6ca1\u6709\u4efb\u4f55\u526f\u4f5c\u7528\uff0c\u6bd4\u5982\u6ca1\u6709\u53d8\u91cf\u8d4b\u503c\u3001\u4fee\u6539\u53ef\u53d8\u96c6\u5408\u6216\u6267\u884c\u6807\u51c6\u8f93\u51fa\u5199\u64cd\u4f5c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u88ab\u79f0\u4e3a\u662f\u53c2\u8003\u900f\u660e\u7684\u3002</p> <p>Future \u5bf9\u8c61\u4e0a\u7684\u56de\u8c03\u51fd\u6570\u6709\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u6027\u8d28\uff0c\u5373\u53ea\u4f7f\u7528Future.apply\u548cforeach\u8c03\u7528\u53c2\u8003\u900f\u660e\u7684\u56de\u8c03\u51fd\u6570\u7684\u7a0b\u5e8f\u662f\u786e\u5b9a\u7684\u3002</p>"},{"location":"LANG/JUC-SUC/#future_2","title":"Future\u548c\u5f02\u5e38","text":"<p>\u9996\u5148\uff0c\u521b\u5efa\u4e86\u4e00\u4e2aFuture\uff0c\u6ca1\u6709\u6ce8\u518c\u4efb\u4f55\u56de\u8c03\u51fd\u6570\u3002\u7136\u540e\u5728\u8be5\u57fa\u7840\u4e4b\u4e0a\u6ce8\u518c\u5f88\u591a\u7684\u56de\u8c03\u51fd\u6570.</p> <p></p> <p>foreach\u65b9\u6cd5\u63a5\u6536\u7684\u56de\u8c03\u51fd\u6570\u53ea\u88ab\u7528\u6765\u5904\u7406\u6210\u529f\u7684Future\u7684\u503c\u3002\u9762\u5bf9\u5931\u8d25\u7684Future\u7684\u503c\uff0c\u9700\u8981\u4f7f\u7528failed\u65b9\u6cd5\u8fdb\u884c\u5904\u7406</p> Text Only<pre><code>object FuturesFailure extends App {\n  val urlSpec: Future[String] = Future {\n    val invalidUrl = \"http://www.w3.org/non-existent-url-spec.txt\"\n    Source.fromURL(invalidUrl).mkString\n  }\n  urlSpec.failed foreach {\n    case t =&gt; log(s\"exception occurred - $t\")\n  }\n  Thread.sleep(1000)\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#try","title":"\u4f7f\u7528Try\u7c7b\u578b","text":"<p>\u548cOption\u7c7b\u4e0d\u540c\u7684\u662f\uff0cOption\u53ea\u628aNone\u4f5c\u4e3a\u4e0d\u5339\u914d\u7684\u6807\u5fd7\uff0c\u800c\u4e0d\u80fd\u5b58\u50a8\u5931\u8d25\u7684\u4fe1\u606f\u3002</p> <p>Try\u7c7b\u578b\u6709\u4e24\u79cd\u6837\u4f8b\u7c7b\u5b9e\u73b0\uff1a\u4e00\u79cd\u662fSuccess[T]\u7c7b\u578b\uff0c\u5b83\u4fdd\u5b58\u4e86\u8ba1\u7b97\u6210\u529f\u540e\u7684\u7ed3\u679c\uff1b\u53e6\u4e00\u79cd\u662fFailure[T]\u7c7b\u578b\uff0c\u5b83\u4fdd\u5b58\u4e86\u8ba1\u7b97\u5931\u8d25\u65f6\u629b\u51fa\u7684Throwable\u5bf9\u8c61\u3002</p> <p>Try[T]\u5bf9\u8c61\u662f\u5728\u540c\u6b65\u573a\u5408\u4e0b\u4f7f\u7528\u7684\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u5728\u521b\u5efa\u65f6\u5c31\u5c06\u503c\u6216\u5f02\u5e38\u4fdd\u5b58\u4e0b\u6765\u4e86\uff0c\u8fd9\u548cFuture\u5bf9\u8c61\u4e0d\u4e00\u6837\u3002\u4e5f\u5c31\u662f\u8bf4Try\u5bf9\u8c61\u7684\u4f7f\u7528\u603b\u662f\u5728\u8c03\u7528\u7ebf\u7a0b\u4e2d\u5b8c\u6210\u3002</p> <p>\u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u6a21\u5f0f\u5339\u914d\u4f7f\u7528\u7684\u662fTry\u503c\u3002\u5f53\u8c03\u7528onComplete\u56de\u8c03\u51fd\u6570\u65f6\uff0c\u4f1a\u4e3a\u5b83\u63d0\u4f9b\u5339\u914dSuccess\u503c\u6216Failure\u503c\u7684\u90e8\u5206\u51fd\u6570\u3002</p> Text Only<pre><code>urlSpec onComplete {\n  case Success(txt) =&gt; log(find(txt))\n  case Failure(err) =&gt; log(s\"exception occurred - $err\")\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#future_3","title":"Future\u4e0a\u7684\u51fd\u6570\u5f0f\u7ec4\u5408","text":"<p>\u4f5c\u7528\uff1a</p> <p>\u51fd\u6570\u5f0f\u7ec4\u5408\u662f\u7528\u6765\u8865\u5145\u56de\u8c03\u51fd\u6570\u7684\u4e0d\u8db3\u3002\u56de\u8c03\u51fd\u6570\u5f88\u6709\u7528\uff0c\u4f46\u5728\u5927\u578b\u7a0b\u5e8f\u4e2d\u4e0d\u5229\u4e8e\u5206\u6790\u63a7\u5236\u6d41\u3002\u800c\u4e14\uff0c\u56de\u8c03\u51fd\u6570\u4e0d\u80fd\u5b9e\u73b0\u5f02\u6b65\u7f16\u7a0b\u4e2d\u7684\u67d0\u4e9b\u6a21\u5f0f\uff0c\u7279\u522b\u662f\u7528\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u76d1\u542c\u591a\u4e2aFuture\u5bf9\u8c61\u662f\u6bd4\u8f83\u70e6\u7410\u7684\u3002\u8fd8\u597dScala\u63d0\u4f9b\u4e86Future\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u79f0\u4e3a\u51fd\u6570\u5f0f\u7ec4\u5408\u3002\u51fd\u6570\u5f0f\u7ec4\u5408\u662f\u4e00\u79cd\u7f16\u7a0b\u6a21\u5f0f\uff0c\u5176\u601d\u60f3\u662f\u7528\u9ad8\u9636\u51fd\u6570\uff08\u79f0\u4e3a\u7ec4\u5408\u5b50\uff09\u5c06\u7b80\u5355\u503c\u7ec4\u5408\u6210\u590d\u6742\u503c\u3002</p> <p>\u53ef\u4ee5\u5c06Future\u7406\u89e3\u4e3a\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\u7684\u5bb9\u5668\uff0c\u53ea\u4e0d\u8fc7\u5b83\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540e\u53ef\u4ee5\u5bf9\u5176\u5e94\u7528\u51fd\u6570\u5f0f\u7ec4\u5408\u3002</p> <p>\u4f7f\u7528\u65f6\u673a:</p> <p>\u5bf9\u4e8e\u4f9d\u8d56\u4e8e\u5355\u4e2aFuture\u7684\u6709\u526f\u4f5c\u7528\u7684\u884c\u4e3a\uff0c\u4f7f\u7528\u56de\u8c03\u3002\u5176\u4ed6\u60c5\u51b5\u4f7f\u7528\u51fd\u6570\u5f0f\u7ec4\u5408\u3002\u800c\u51fd\u6570\u5f0f\u7ec4\u5408\u4e2d\u5982\u679c\u6709flatmap\uff0c\u4e00\u822c\u4f1a\u4f7f\u7528for\u63a8\u5bfc\u5f0f\u8fdb\u884c\u66ff\u4ee3\u3002\u540c\u65f6\uff0cfor\u63a8\u5bfc\u5f0f\u4e2d\u7684\u8868\u8fbe\u5f0f\u662f\u4e32\u884c\u6267\u884c\u7684\uff0c\u53ef\u80fd\u5728\u5e76\u53d1\u5e76\u53d1\u7f16\u7a0b\u4e2d\u9700\u8981\u6ce8\u610f\u987a\u5e8f\uff0c\u5982\u679c\u8fb9\u8ba1\u7b97\u8fb9\u4f7f\u7528\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898\u3002</p>"},{"location":"LANG/JUC-SUC/#42-promise","title":"4.2 Promise","text":""},{"location":"LANG/JUC-SUC/#_18","title":"\u57fa\u672c\u6982\u5ff5","text":"<ol> <li>\u6982\u5ff5</li> </ol> <p>Promise\u662f\u6307\u53ea\u80fd\u4e00\u6b21\u6027\u8d4b\u503c\u6216\u629b\u51fa\u5f02\u5e38\u7684\u4e00\u79cd\u5bf9\u8c61\u3002\u8fd9\u4e5f\u662fPromise\u6709\u65f6\u5019\u53c8\u88ab\u79f0\u4e3a\u5355\u8d4b\u503c\u53d8\u91cf\u7684\u539f\u56e0\u3002\u4e3b\u8981\u4f5c\u7528\u662f\u6362\u4e00\u79cd\u66f4\u7075\u6d3b\u7684\u65b9\u5f0f\uff0c\u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9Future\uff0c\u800c\u4e0d\u662f\u5355\u4e00\u7684\u7ebf\u7a0b\u8fd4\u56de\u503c</p> <ol> <li>\u521b\u5efa</li> </ol> <p>\u4e3a\u521b\u5efa\u4e00\u4e2aPromise\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u4f7f\u7528Promise\u4f34\u968f\u5bf9\u8c61\u4e0a\u7684Promise.apply\u65b9\u6cd5\u3002\u4e0d\u8fc7\uff0cPromise.apply \u65b9\u6cd5\u5e76\u4e0d\u4f1a\u542f\u52a8\u5f02\u6b65\u8ba1\u7b97\uff0c\u5b83\u53ea\u662f\u521b\u5efa\u4e00\u4e2a\u5168\u65b0\u7684Promise\u5bf9\u8c61\u3002\u5f53Promise\u5bf9\u8c61\u521b\u5efa\u540e\uff0c\u5b83\u5e76\u4e0d\u5305\u542b\u503c\u6216\u5f02\u5e38\u3002\u4e3a\u4e86\u5c06\u503c\u6216\u5f02\u5e38\u8d4b\u503c\u7ed9\u4e00\u4e2aPromise\uff0c\u9700\u8981\u5206\u522b\u4f7f\u7528success\u6216failure\u65b9\u6cd5</p> <ol> <li>\u4e0eFuture\u7684\u8054\u7cfb</li> </ol> <p>\u6bcf\u4e2aPromise\u5bf9\u5e94\u4e00\u4e2aFuture\uff0c\u4e3a\u4e86\u83b7\u5f97Promise\u5bf9\u5e94\u7684Future\uff0c\u53ef\u4ee5\u8c03\u7528Promise\u5bf9\u8c61\u7684Future\u65b9\u6cd5\u3002\u8be5\u65b9\u6cd5\u591a\u6b21\u8c03\u7528\u4e5f\u53ea\u4f1a\u8fd4\u56de\u5bf9\u5e94\u7684\u540c\u4e00\u4e2aFuture\u65b9\u6cd5\u3002Promise\u548cFuture\u5bf9\u5e94\u4e00\u4e2a\u5355\u8d4b\u503c\u53d8\u91cf\u7684\u4e24\u4e2a\u65b9\u9762\uff0cPromise\u5bf9\u8c61\u7ed9\u7528\u6237\u63d0\u4f9b\u4e00\u4e2aFuture\u5bf9\u8c61\u3002\u7528\u6237\u53ef\u4ee5\u5c06Future\u7684\u503c\u8bfb\u51fa\u6765\u3002</p> <p>\ud83d\udd14</p> <p>\u5e38\u89c1\u7684\u4f7f\u7528\u6a21\u5f0f\uff1aFuture-\u56de\u8c03\u6865</p> <ol> <li>\u521b\u5efaPromise\u5bf9\u8c61</li> <li>\u5176\u4e2d\u5176\u4ed6\u8ba1\u7b97\u4efb\u52a1(\u7ebf\u7a0b)\u5b8c\u6210Promise(\u4f7f\u7528\u503c\u6216\u8005\u5f02\u5e38\u503c\u6765\u5b8c\u6210)</li> <li>\u8fd4\u56dePromise\u5bf9\u5e94\u7684Future\u5bf9\u8c61</li> <li>API</li> </ol> <p>promise\u7684success\u65b9\u6cd5\u662f\u5c06promise\u7528\u4e00\u4e2a\u6210\u529f\u7684\u7ed3\u679c\u503c\u5b8c\u6210\uff0c\u81f3\u6b64promise\u5c31\u5b8c\u6210\u4e86\u8d4b\u503c\uff0c\u5176\u5bf9\u5e94\u7684Future\u4e5f\u5c31\u786e\u5b9a\u4e86\u3002</p> <p>\u7528\u6237\u8fd8\u53ef\u4ee5\u4f7f\u7528 trySuccess\u3001tryFailure \u548ctryComplete \u65b9\u6cd5\uff0c\u5176\u5206\u522b\u5bf9\u5e94\u4e8e success\u3001failure\u548ccomplete\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u6807\u8bc6\u8d4b\u503c\u662f\u5426\u6210\u529f\u3002</p> <ol> <li>\u4f8b\u5b50\uff1a\u5b9a\u5236Future.apply\u65b9\u6cd5</li> </ol> Text Only<pre><code>import scala.util.control.NonFatal\nobject PromisesCustomAsync extends App {\n  def myFuture[T](b: =&gt;T): Future[T] = {\n    val p = Promise[T]\n    global.execute(new Runnable {\n      def run() = try {\n        p.success(b)\n      } catch {\n        case NonFatal(e) =&gt; {\n          log(\"here\")\n          p.failure(e)\n        }\n      }\n    })\n    p.future\n  }\n  val f = myFuture { \"naa\" + \"na\" * 8 + \" Katamari Damacy!\" }\n  f foreach { case text:String =&gt; log(text) }\n  Thread.sleep(1000)\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#api_4","title":"\u5305\u88c5\u57fa\u4e8e\u56de\u8c03\u7684API","text":"<ol> <li>\u5fc5\u8981\u6027\uff1a</li> </ol> <p>\u8c03\u7528\u7ebf\u7a0b\u7684\u963b\u585e\uff0c\u53ef\u4ee5\u4f7f\u7528Future\u6216\u8005\u56de\u8c03\u51fd\u6570\u8fdb\u884c\u907f\u514d\u3002</p> <p>\u65e7\u7248\u672c\u7684\u6846\u67b6\u5e38\u4f7f\u7528\u539f\u59cb\u7684\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u7a0b\u5e8f\u4e2d\u7684\u5ef6\u8fdf\u95ee\u9898\u3002\u6267\u884c\u65f6\u95f4\u5f85\u5b9a\u7684\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u8fd4\u56de\u7ed3\u679c\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u5b83\u4eec\u63a5\u6536\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\uff0c\u6b64\u56de\u8c03\u51fd\u6570\u7528\u4e8e\u8bfb\u53d6\u5c06\u6765\u7684\u7ed3\u679c\u3002</p> <p>\u5927\u91cf\u7684\u56de\u8c03\u51fd\u6570\u4f7f\u7528\u4f1a\u4f7f\u5f97\u7ed3\u6784\u53d8\u5f97\u5f02\u5e38\u590d\u6742\uff0c\u53ef\u4ee5\u901a\u8fc7Promise\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570API\u548cFuture\u4e4b\u95f4\u7684\u6865\u6881\u3002\u6b64\u6a21\u5f0f\u79f0\u4e3aFuture-\u56de\u8c03\u6865\u3002</p> Text Only<pre><code>  //\u68c0\u6d4b\u76ee\u5f55\u4e0b\u662f\u5426\u6709\u65b0\u521b\u5efa\u7684\u6587\u4ef6\n  def fileCreated(dir:String):Future[String] = {\n    val p = Promise[String]\n    //\u6bcf1000ms\u6765\u8fdb\u884c\u68c0\u6d4b\n    val fileMonitor = new FileAlterationMonitor(1000)\n    //\u68c0\u6d4b\u7684\u662fdir\u76ee\u5f55\u4e0b\u6587\u4ef6\n    val fileObserver = new FileAlterationObserver(dir)\n    //\u4e0b\u9762\u662f\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5f53\u76ee\u5f55\u4e0b\u6587\u4ef6\u88ab\u521b\u5efa\uff0c\u8be5\u5bf9\u8c61\u7684onFileCreate\u65b9\u6cd5\u4f1a\u88ab\u8c03\u7528\n    val listener = new FileAlterationListenerAdaptor {\n      override def onFileCreate(file: File): Unit = {\n        log(\"File created: \" + file.getName)\n        //\u68c0\u6d4b\u5230\u6587\u4ef6\u521b\u5efa\uff0c\u5c31\u5c06\u6210\u529f\u7ed3\u679c\u4f20\u9012\u7ed9promise\n        try{\n          p.success(file.getName)\n        }finally fileMonitor.stop()\n      }\n    }\n    fileObserver.addListener(listener)\n    fileMonitor.addObserver(fileObserver)\n    fileMonitor.start()\n    p.future\n  }\n</code></pre> <p>\u5b9e\u73b0timeout\u65b9\u6cd5\uff0c\u8c03\u7528timeout\u65b9\u6cd5\uff0c\u4f20\u5165t ms\u7684\u53c2\u6570\uff0c\u7136\u540e\u8ba9\u5b83\u8fd4\u56de\u4e00\u4e2a\u81f3\u5c11t ms\u4e4b\u540e\u624d\u80fd\u5b8c\u6210\u7684Future\u3002</p> Text Only<pre><code>def timeout(t: Long): Future[Unit] = {\n    val p = Promise[Unit]\n    //\n    timer.schedule(new TimerTask {\n      override def run() = {\n        p.success()\n        //\u4e00\u65e6\u8c03\u7528cancel\u65b9\u6cd5\uff0cTimerTask\u5c31\u4e0d\u4f1a\u518d\u88ab\u6267\u884c\u4e86\n        timer.cancel()\n      }\n    }, t)\n    p.future\n }\n</code></pre>"},{"location":"LANG/JUC-SUC/#43-future","title":"4.3 Future\u548c\u963b\u585e","text":"<p>\u963b\u585e\u548cFuture\uff0c\u4e5f\u5c31\u662f\u963b\u585eFuture\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a\u7b2c\u4e00\u79cd\u662f\u7b49\u5f85Future\u5b8c\u6210\uff0c\u7b2c\u4e8c\u79cd\u662f\u5f02\u6b65\u8ba1\u7b97\u5185\u90e8\u963b\u585e\u3002</p> <ol> <li>\u7b49\u5f85Future\u5b8c\u6210</li> </ol> <p>\u53ef\u4f7f\u7528 scala.concurrent \u5305\u4e2d\u7684Await \u5bf9\u8c61\u4e0a\u7684 ready \u548cresult\u65b9\u6cd5\u3002</p> <p>ready\u65b9\u6cd5\u963b\u585e\u8c03\u7528\u7ebf\u7a0b\uff0c\u76f4\u5230\u6307\u5b9a\u7684Future\u5b8c\u6210\u4e3a\u6b62\u3002</p> <p>result\u65b9\u6cd5\u4e5f\u53ef\u963b\u585e\u8c03\u7528\u7ebf\u7a0b\uff0c\u5982\u679cFuture\u6210\u529f\u5b8c\u6210\uff0c\u5219\u8fd4\u56deFuture\u7684\u503c\uff1b\u5982\u679cFuture\u5931\u8d25\uff0c\u5219\u629b\u51fa\u5176\u5f02\u5e38\u3002</p> <p>\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u9700\u8981\u6307\u5b9a\u4e00\u4e2atimeout\u53c2\u6570\uff0c\u5373\u8c03\u7528\u7ebf\u7a0b\u9700\u8981\u7b49\u5f85Future\u8ba1\u7b97\u7684\u6700\u957f\u65f6\u95f4\uff0c\u8d85\u65f6\u540e\u4f1a\u629b\u51fa\u4e00\u4e2a TimeoutException \u5f02\u5e38\u3002</p> Text Only<pre><code>import scala.concurrent.{Await, Future}\nimport scala.concurrent.duration._\nimport scala.concurrent.ExecutionContext.Implicits.global\nimport scala.io.Source\nobject BlockingAwait  extends App {\n  val specUrlSizeFuture = Future{\n    val specUrl = \"http://baidu.com/search?q=helloworld\"\n    Source.fromURL(specUrl).size\n  }\n  val urlSize = Await.result(specUrlSizeFuture, 10 seconds)\n  println(urlSize)\n}\n</code></pre> <ol> <li>\u5728\u5f02\u6b65\u8ba1\u7b97\u5185\u963b\u585e</li> </ol> <p>\u6709\u7684\u65e7\u7248\u672c\u7684API\u4e0d\u4f7f\u7528\u56de\u8c03\u6765\u8fd4\u56de\u4e00\u6b65\u7684\u7ed3\u679c\uff0c\u800c\u662f\u4f7f\u7528\u963b\u585e\u65b9\u6cd5\u3002\u5f53\u8c03\u7528\u4e00\u4e2a\u963b\u585e\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u7528\u6237\u5b8c\u5168\u5931\u53bb\u5bf9\u7ebf\u7a0b\u7684\u63a7\u5236\u6743\uff0c\u5b8c\u5168\u7531\u8fd9\u4e2a\u963b\u585e\u65b9\u6cd5\u6765\u51b3\u5b9a\u4f55\u65f6\u5c06\u7ebf\u7a0b\u89e3\u9501\u5e76\u4ea4\u8fd8\u63a7\u5236\u6743\u3002</p> <p>\u6267\u884c\u4e0a\u4e0b\u6587\u901a\u5e38\u662f\u4f7f\u7528\u7ebf\u7a0b\u6c60\u5b9e\u73b0\u7684\uff0c\u963b\u585e\u5de5\u4f5c\u7ebf\u7a0b\u53ef\u80fd\u8017\u5c3d\u7ebf\u7a0b\u6c60\u8d44\u6e90\uff0c\u5bfc\u81f4\u7ebf\u7a0b\u9965\u997f\u3002</p> <p>\u5982\u679c\u4e00\u5b9a\u8981\u963b\u585e\uff0c\u5219\u963b\u585e\u7684\u90a3\u90e8\u5206\u4ee3\u7801\u5e94\u8be5\u7f6e\u4e8eblocking\u8c03\u7528\u4e2d\u3002\u8fd9\u76f8\u5f53\u4e8e\u544a\u8bc9\u6267\u884c\u4e0a\u4e0b\u6587\u5de5\u4f5c\u7ebf\u7a0b\u88ab\u963b\u585e\u4e86\uff0c\u5fc5\u8981\u65f6\u53ef\u4ee5\u4e34\u65f6\u542f\u52a8\u53e6\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u3002</p> Text Only<pre><code>val futures = for (_ &lt;- 0 until 16) yield Future {\n  blocking {\n    Thread.sleep(1000)\n  }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#44-scalaasync","title":"4.4 Scala\u7684Async\u5e93","text":"<p>Scala Async \u5e93\u5f15\u5165\u4e86\u4e24\u4e2a\u65b0\u65b9\u6cd5\uff1aasync \u548c await\u3002</p> <p>async \u5728\u6982\u5ff5\u4e0a\u7b49\u4ef7\u4e8eFuture.apply\uff0c\u5b83\u542f\u52a8\u4e00\u4e2a\u5f02\u6b65\u8ba1\u7b97\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2aFuture\u5bf9\u8c61\u3002</p> <p>\u800c\u5bf9\u4e8eawait\u65b9\u6cd5\u5219\u4e0d\u80fd\u5c06\u5176\u548c Await \u5bf9\u8c61\u5f04\u6df7\u4e86\uff0c\u540e\u8005\u7528\u4e8e\u963b\u585eFuture,await \u65b9\u6cd5\u5219\u7528\u4e8e\u63a5\u6536\u4e00\u4e2aFuture\u5bf9\u8c61\u5e76\u8fd4\u56de\u5b83\u7684\u503c\u3002\u800c\u4e14\u548cAwait\u5bf9\u8c61\u4e0a\u7684\u65b9\u6cd5\u4e0d\u540c\uff0cawait\u65b9\u6cd5\u4e0d\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c</p>"},{"location":"LANG/JUC-SUC/#45","title":"4.5 \u591a\u7ebf\u7a0b\u65b9\u6848\u9009\u62e9\u603b\u7ed3","text":"<ol> <li>Java</li> <li>\u4e32\u884c\u6a21\u5f0f</li> </ol> <p>\u903b\u8f91\u6700\u7b80\u5355\uff0c\u6027\u80fd\u6700\u4f4e</p> <ol> <li>\u7ebf\u7a0b\u6c60 + Future \u5f02\u6b65\u8c03\u7528</li> </ol> <p>\u53ef\u4ee5\u5e76\u884c\u8ba1\u7b97\uff0c\u4f46\u662f\u9047\u5230Future\u4e4b\u95f4\u6709\u524d\u540e\u4f9d\u8d56\u5173\u7cfb\uff0c\u8fd8\u662f\u9700\u8981\u5927\u91cf\u65f6\u95f4\u963b\u585e/\u8f6e\u8be2</p> <ol> <li>\u7ebf\u7a0b\u6c60 + CompletableFuture\u5f02\u6b65\u8c03\u7528</li> </ol> <p>\u8fd9\u4e2aFuture\u66f4\u52a0\u7c7b\u4f3c\u4e8escala\u7684Future\uff0c\u53ef\u4ee5\u5b89\u88c5\u56de\u8c03\uff0c\u53ef\u4ee5\u8fdb\u884c\u4f9d\u8d56\u5173\u7cfb\u7684\u7ec4\u5408</p> <ol> <li>\u865a\u62df\u7ebf\u7a0b</li> <li> <p>Scala</p> </li> <li> <p>\u4e32\u884c\u6a21\u5f0f</p> </li> </ol> <p>\u903b\u8f91\u6700\u7b80\u5355\uff0c\u6027\u80fd\u6700\u4f4e</p> <ol> <li>\u7ebf\u7a0b\u6c60 + Future + Promise</li> </ol> <p>\u6bd4Java\u66f4\u7075\u6d3b</p> <ol> <li>async/await</li> <li>\u865a\u62df\u7ebf\u7a0b</li> <li>\u6700\u7ec8\u89e3\u51b3\u65b9\u6848\uff1a\u865a\u62df\u7ebf\u7a0b</li> </ol> <p>\u5f97\u7269\u865a\u62df\u7ebf\u7a0b\u5b9e\u8df5</p> <p>\u6027\u80fd\u6d4b\u8bd5</p>"},{"location":"LANG/JUC-SUC/#5","title":"5. \u5e76\u884c\u5bb9\u5668","text":""},{"location":"LANG/JUC-SUC/#51","title":"5.1 \u57fa\u672c\u6982\u5ff5","text":"<ol> <li>\u901a\u7528\u8017\u65f6\u6d4b\u91cf\u51fd\u6570</li> </ol> Text Only<pre><code>@volatile var dummy: Any = _\ndef timed[T](body: =&gt;T): Double = {\n  val start = System.nanoTime\n  dummy = body\n  val end = System.nanoTime\n  ((end - start) / 1000) / 1000.0\n}\n</code></pre> <p>\u793a\u4f8b\uff1a</p> <p>\u4e0b\u9762\u6d4b\u91cf\u7684\u662f\u5e76\u884c\u7248\u5bb9\u5668\u548c\u4e32\u884c\u7248\u5bb9\u5668\u7684\u8017\u65f6\u5bf9\u6bd4\uff0c\u5177\u670910%\u7684\u6027\u80fd\u63d0\u5347\u3002</p> Text Only<pre><code>    import scala.collection._\n    import scala.util.Random\n    object ParBasic extends App {\n      val numbers = Random.shuffle(Vector.tabulate(5000000)(i =&gt; i))\n      val seqtime = timed { numbers.max }\n      log(s\"Sequential time $seqtime ms\")\n      val partime = timed { numbers.par.max }\n      log(s\"Parallel time $partime ms\")\n    }\n</code></pre> <ol> <li>\u901a\u5e38\u7684\u6570\u636e\u5e76\u884c\u64cd\u4f5c\u6d89\u53ca\u66f4\u591a\u5904\u7406\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u3002</li> </ol> <p>\u6b64\u5904\u4e0d\u662f\u901a\u8fc7\u591a\u7ebf\u7a0b\u6846\u67b6\uff0c\u800c\u662f\u901a\u8fc7\u5e76\u884c\u5bb9\u5668\u6765\u5b9e\u884c\u7684\u3002</p> <p>\u5f53\u8c03\u7528\u4e00\u4e2a\u5e76\u884c\u5bb9\u5668\u7684 foreach \u65b9\u6cd5\u65f6\uff0c\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u5c06\u5e76\u53d1\u5730\u5904\u7406\u3002\u5373\u4e0d\u540c\u7684\u5de5\u4f5c\u7ebf\u7a0b\u540c\u65f6\u89e6\u53d1\u6307\u5b9a\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u6709\u6070\u5f53\u7684\u540c\u6b65\u63aa\u65bd\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u540c\u6b65\u6027\u662f\u7531\u539f\u5b50\u6027\u53d8\u91cf\u4fdd\u8bc1\u7684\u3002</p> Text Only<pre><code>import java.util.concurrent.atomic._\nobject ParUid extends App {\n  private val uid = new AtomicLong(0L)\n  val seqtime = timed {\n    for (i &lt;- 0 until 10000000) uid.incrementAndGet()\n  }\n  log(s\"Sequential time $seqtime ms\")\n  val partime = timed {\n    for (i &lt;- (0 until 10000000).par) uid.incrementAndGet()\n  }\n  log(s\"Parallel time $partime ms\")\n}\n</code></pre> <p>\u672c\u4f8b\u4e2d\u53ef\u80fd\u4f1a\u6162\u6216\u8005\u6ca1\u6709\u660e\u663e\u6539\u8fdb\u7684\u539f\u56e0\uff1a\u662f\u56e0\u4e3a\u5de5\u4f5c\u7ebf\u7a0b\u540c\u65f6\u8c03\u7528\u4e86\u539f\u5b50\u6027\u53d8\u91cfuid\u4e0a\u7684incrementAndGet\u65b9\u6cd5\uff0c\u5e76\u4e14\u5c06\u7ed3\u679c\u7acb\u523b\u5199\u5165\u76f8\u540c\u7684\u5185\u5b58\u533a\u57df\u3002</p> <p>\ud83d\udd14</p> <p>\u5728\u73b0\u4ee3\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0c\u5185\u5b58\u5199\u5165\u5e76\u4e0d\u662f\u76f4\u63a5\u64cd\u4f5c\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff08Random AccessMemory,RAM\uff09\uff0c\u56e0\u4e3a\u8fd9\u592a\u6162\u4e86\u3002</p> <p>\u76f8\u53cd\uff0c\u73b0\u4ee3\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0cCPU\u548c\u5185\u5b58\u4e4b\u95f4\u8fd8\u6709\u597d\u51e0\u5c42\u7f13\u5b58\uff1a \u5bb9\u91cf\u5c0f\u7684\u7f13\u5b58\u5f80\u5f80\u901f\u5ea6\u66f4\u5feb\u4e5f\u66f4\u8d35\uff0c\u5b83\u91cc\u9762\u5b58\u7684\u662f\u5904\u7406\u5668\u5f53\u524d\u5904\u7406\u7684\u6570\u636e\u590d\u5236\u3002\u79bb CPU \u6700\u8fd1\u7684\u7f13\u5b58\u5c42\u79f0\u4e3a L1\u7f13\u5b58\uff0cL1\u7f13\u5b58\u53c8\u88ab\u5212\u5206\u4e3a\u591a\u4e2a\u79f0\u4e3a\u7f13\u5b58\u884c\uff08cache line\uff09\u7684\u8fde\u7eed\u7a7a\u95f4\uff0c\u5176\u5178\u578b\u5927\u5c0f\u4e3a64B\u3002</p> <p>\u5728\u6807\u51c6\u7684\u591a\u6838\u5904\u7406\u5668\u4e2d\uff0c\u591a\u4e2a\u5185\u6838\u53ef\u4ee5\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u4e2a\u7f13\u5b58\u884c\uff0c\u4f46\u5199\u64cd\u4f5c\u662f\u4e92\u65a5\u7684\uff0c\u540c\u65f6\u53ea\u80fd\u6709\u4e00\u4e2a\u5185\u6838\u62e5\u6709\u67d0\u4e2a\u7f13\u5b58\u884c\u3002\u5982\u679c\u540c\u65f6\u6709\u53e6\u4e00\u4e2a\u5185\u6838\u8bf7\u6c42\u5199\u5165\u540c\u4e00\u4e2a\u7f13\u5b58\u884c\uff0c\u90a3\u4e48\u6b64\u7f13\u5b58\u884c\u7684\u5185\u5bb9\u5c06\u4f1a\u88ab\u590d\u5236\u5230\u90a3\u4e2a\u5185\u6838\u7684L1\u7f13\u5b58\u4e2d\u3002\u7ef4\u62a4\u8fd9\u79cd\u7f13\u5b58\u4e00\u81f4\u6027\u7684\u534f\u8bae\u79f0\u4e3a\u4fee\u6539\u3001\u4e92\u65a5\u3001\u5171\u4eab\u3001\u975e\u6cd5\uff08Modified Exclusive Shared Invalid,MESI\uff09\u3002\u4ea4\u6362\u7f13\u5b58\u884c\u7684\u6240\u6709\u6743\u7684\u4ee3\u4ef7\u662f\u6bd4\u8f83\u5927\u7684</p> <p>\u56e0\u4e3a\u53d8\u91cfuid\u662f\u539f\u5b50\u6027\u7684\uff0cJVM\u9700\u8981\u786e\u4fdduid\u7684\u5199\u64cd\u4f5c\u548c\u8bfb\u64cd\u4f5c\u4e4b\u95f4\u5177\u6709\u524d\u53d1\u751f\u5173\u7cfb\uff08\u89c1\u7b2c2\u7ae0\uff09\u3002\u4e3a\u4fdd\u8bc1\u5b9e\u73b0\u524d\u53d1\u751f\u5173\u7cfb\uff0c\u5185\u5b58\u5199\u64cd\u4f5c\u5fc5\u987b\u5bf9\u5176\u4ed6\u5904\u7406\u5668\u53ef\u89c1\u3002</p> <p>\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u552f\u4e00\u7684\u529e\u6cd5\u662f\u5728\u5199\u4e4b\u524d\u8ba9\u7f13\u5b58\u884c\u662f\u72ec\u5360\u7684\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4e0d\u540c\u7684\u5904\u7406\u5668\u5185\u6838\u53cd\u590d\u4ea4\u6362\u7f13\u5b58\u884c\u7684\u6240\u6709\u6743\uff0c\u4ee5\u5b9e\u73b0uid\u7684\u5206\u914d\uff0c\u4e8e\u662f\u9020\u6210\u4e86\u5e76\u884c\u7248\u672c\u7684\u901f\u5ea6\u6bd4\u4e32\u884c\u7248\u672c\u7684\u8fd8\u6162\u3002</p> <p>\ud83d\udd14</p> <p>\u591a\u4e2a\u7ebf\u7a0b\u5f80\u540c\u4e00\u5185\u5b58\u533a\u57df\u5199\u5165\u6570\u636e\u9700\u8981\u6070\u5f53\u7684\u540c\u6b65\u63aa\u65bd\uff0c\u8fd9\u4f1a\u9020\u6210\u7ade\u4e89\u548c\u6027\u80fd\u74f6\u9888\uff0c\u56e0\u6b64\uff0c\u5728\u6570\u636e\u5e76\u884c\u64cd\u4f5c\u4e2d\u8981\u5c3d\u91cf\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u3002\u7c7b\u4f3c\u7684\u6027\u80fd\u74f6\u9888\u8fd8\u6709\u5f88\u591a\uff0c\u6bd4\u5982\u591a\u7ebf\u7a0b\u5e76\u53d1\u89e6\u53d1\u540c\u4e00\u5bf9\u8c61\u7684synchronized\u8bed\u53e5\uff0c\u91cd\u590d\u4fee\u6539\u5e76\u53d1\u6620\u5c04\u4e2d\u7684\u540c\u4e00\u4e2a\u952e\uff0c\u6216\u540c\u65f6\u5f80\u5e76\u53d1\u961f\u5217\u4e2d\u63d2\u5165\u5143\u7d20\u3002\u8fd9\u4e9b\u884c\u4e3a\u90fd\u6d89\u53ca\u5f80\u540c\u4e00\u5185\u5b58\u533a\u57df\u5199\u5165\u6570\u636e</p>"},{"location":"LANG/JUC-SUC/#52","title":"5.2  \u5e76\u884c\u5bb9\u5668\u7684\u4f7f\u7528","text":""},{"location":"LANG/JUC-SUC/#_19","title":"\u7c7b\u7ee7\u627f\u5173\u7cfb","text":"<ol> <li>\u5b9a\u4e49</li> </ol> <p>\u5e76\u884c\u5bb9\u5668\u4e0d\u53ef\u4ee5\u662f\u4e32\u884c\u5bb9\u5668\u7684\u5b50\u7c7b\u578b\u3002\u8ba9\u5e76\u884c\u5bb9\u5668\u7ee7\u627f\u67d0\u4e2a\u4e32\u884c\u5bb9\u5668\uff0c\u4f1a\u8fdd\u53cdLiskov\u66ff\u6362\u539f\u5219\u3002Liskov\u66ff\u6362\u539f\u5219\u6307\u7684\u662f\u5982\u679c\u7c7b\u578bS\u662f\u7c7b\u578bT\u7684\u5b50\u7c7b\u578b\uff0c\u5219\u7c7b\u578b\u4e3aT\u7684\u5bf9\u8c61\u53ef\u4ee5\u66ff\u6362\u4e3a\u7c7b\u578b\u4e3aS\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u3002\u56e0\u4e3a\u5bf9\u4e32\u884c\u5bb9\u5668\u9002\u5408\u7684\u8ba1\u7b97\uff0c\u4f7f\u7528\u5e76\u884c\u5bb9\u5668\u53ef\u80fd\u9020\u6210\u6570\u636e\u7ade\u4e89\u3002</p> <p></p> <p></p> <ol> <li>\u8f6c\u6362</li> </ol> <p>\u4f7f\u7528\u4e32\u884c\u5bb9\u5668\u7684par\u65b9\u6cd5\u5c31\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u5e76\u884c\u5bb9\u5668\u3002</p> <p>\u5982\u679c\u9700\u8981\u7f16\u5199\u4e0e\u5bb9\u5668\u7c7b\u578b\u65e0\u5173\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528\u6cdb\u578b\u5bb9\u5668\u7c7b\u578b\uff0c\u4ed6\u4eec\u6bcf\u4e2a\u90fd\u662f\u4e32\u884c\u5bb9\u5668\u548c\u5e76\u884c\u5bb9\u5668\u7684\u7236\u7c7b\u3002\u5982\u679c\u7f16\u5199\u6cdb\u578b\u5bb9\u5668\u7684\u4ee3\u7801\uff0c\u9700\u8981\u5047\u8bbe\u5bb9\u5668\u662f\u5e76\u884c\u7684\uff0c\u53ef\u4ee5\u9632\u6b62\u5f02\u5e38\u60c5\u51b5\u51fa\u73b0\u3002</p>"},{"location":"LANG/JUC-SUC/#_20","title":"\u914d\u7f6e\u5e76\u884c\u5c42\u6b21","text":"<p>\u5e76\u884c\u5bb9\u5668\u9ed8\u8ba4\u7ebf\u7a0b\u6570\u548c\u5904\u7406\u5668\u6570\u76ee\u4e00\u6837\u591a\uff0c\u5373\u7a0b\u5e8f\u6267\u884c\u65f6\u4f7f\u7528\u7684\u5de5\u4f5c\u7ebf\u7a0b\u6570\u76ee\u3002</p> <p>\u8fd9\u4e2a\u9ed8\u8ba4\u884c\u4e3a\u662f\u53ef\u4ee5\u6539\u53d8\u7684\uff0c\u4fee\u6539\u5e76\u884c\u5bb9\u5668\u7684TaskSupport\u5bf9\u8c61\u5373\u53ef\u3002\u8fd9\u91cc\u7528\u5230\u7684\u4e00\u4e2a\u7b80\u5355\u7684 TaskSupport \u5b9e\u73b0\u662f ForkJoinTaskSupport \u7c7b\uff0c\u5b83\u63a5\u6536\u4e00\u4e2aForkJoinPool\u5bb9\u5668\uff0c\u7528\u6765\u8c03\u5ea6\u5e76\u884c\u64cd\u4f5c\u3002</p> <p>\u4e00\u4e2a TaskSupport \u5b9e\u4f8b\u53ef\u4ee5\u7528\u4e8e\u4e0d\u540c\u7684\u5e76\u884c\u5bb9\u5668\uff0c\u5c06\u5176\u8d4b\u503c\u7ed9\u6bcf\u4e2a\u5e76\u884c\u5bb9\u5668\u7684tasksupport\u5b57\u6bb5\u5373\u53ef\u3002</p> Text Only<pre><code>import SUC.{log, timed}\n\nimport scala.collection.parallel\nimport scala.concurrent.forkjoin.ForkJoinPool\nimport scala.util.Random\nobject ParConfig extends App {\n  val fjpool = new ForkJoinPool(2)\n  val customTaskSupport = new parallel.ForkJoinTaskSupport(fjpool)\n  val numbers = Random.shuffle(Vector.tabulate(5000000)(i =&gt; i))\n  val partime = timed {\n    val parnumbers = numbers.par\n    parnumbers.tasksupport = customTaskSupport\n    val n = parnumbers.max\n    println(s\"largest number $n\")\n  }\n  log(s\"Parallel time $partime ms\")\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#53","title":"5.3 \u5e76\u884c\u5bb9\u5668\u7684\u7f3a\u70b9","text":""},{"location":"LANG/JUC-SUC/#_21","title":"\u4e0d\u53ef\u5e76\u884c\u5bb9\u5668","text":"<ol> <li>\u53ef\u5e76\u884c\u7684\u5bb9\u5668\uff1a\u6709\u4e9b Scala \u5bb9\u5668\u4e0a\u7684\u64cd\u4f5c\u662f\u53ef\u4ee5\u5e76\u884c\u7684\uff0c\u6bd4\u5982Array\u3001ArrayBuffer\u3001\u53ef\u53d8HashMap\u3001\u53ef\u53d8HashSet\u3001Range\u3001Vector\u3001\u4e0d\u53ef\u53d8HashMap\u3001\u4e0d\u53ef\u53d8HashSet\u4ee5\u53ca\u5e76\u53d1TrieMap\u3002\u5728\u8fd9\u7c7b\u5bb9\u5668\u4e0a\u8c03\u7528par\u65b9\u6cd5\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u5e76\u884c\u5bb9\u5668\uff0c\u4e14\u4e0e\u539f\u4e32\u884c\u5bb9\u5668\u5171\u4eab\u540c\u4e00\u4efd\u6570\u636e\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u590d\u5236\u6570\u636e\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8f6c\u6362\u8fc7\u7a0b\u5f88\u5feb\u3002</li> <li>\u4e0d\u53ef\u5e76\u884c\u7684\u5bb9\u5668\uff1a\u5176\u4ed6Scala\u5bb9\u5668\u5728\u8c03\u7528par\u65f6\u9700\u8981\u8f6c\u6362\u6570\u636e\uff0c\u88ab\u79f0\u4e3a\u4e0d\u53ef\u5e76\u884c\u5bb9\u5668\u3002\u5728\u4e0d\u53ef\u5e76\u884c\u5bb9\u5668\u4e0a\u8c03\u7528 par \u65b9\u6cd5\u9700\u8981\u5c06\u6570\u636e\u5143\u7d20\u590d\u5236\u5230\u65b0\u5bb9\u5668\u4e2d\u3002\u6bd4\u5982\uff0c\u5728 List \u5bb9\u5668\u4e0a\u8c03\u7528 par\u65b9\u6cd5\u9700\u8981\u5c06\u6570\u636e\u5143\u7d20\u590d\u5236\u5230Vector\u5bb9\u5668\u4e2d</li> </ol>"},{"location":"LANG/JUC-SUC/#_22","title":"\u4e0d\u53ef\u5e76\u884c\u7684\u64cd\u4f5c","text":"<p>scala\u7684APi foldLeft\u5c31\u662f\u540c\u4e00\u4e2a\u4e0d\u53ef\u5e76\u884c\u7684\u64cd\u4f5c.\u6bd4\u5982\u6b64\u65b9\u6cd5\u4ece\u5de6\u81f3\u53f3\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u5c06\u5b83\u4eec\u52a0\u5230\u7c7b\u578b\u4e3aS\u7684\u7d2f\u52a0\u5668\u4e0a\uff0c\u7d2f\u52a0\u5668\u521d\u59cb\u503c\u4e3az\uff0c\u7136\u540e\u51fd\u6570f\u5c06\u5f53\u524d\u7d2f\u52a0\u5668\u548c\u7c7b\u578b\u4e3aT\u7684\u5143\u7d20\u76f8\u52a0\uff0c\u5f97\u5230\u65b0\u7684\u7d2f\u52a0\u5668\uff0c\u5e76\u53c2\u4e0e\u4e0b\u4e00\u6b21\u8ba1\u7b97\u3002</p> Text Only<pre><code>//scala\u7684APi foldLeft\ndef foldLeft[S](z: S)(f: (S, T) =&gt; S): S\n\nList(1, 2, 3).foldLeft(0)((acc, x) =&gt; acc + x)\n</code></pre> <p>foldLeft\u7684\u4e00\u4e2a\u5173\u952e\u6027\u8d28\u662f\u5b83\u4ece\u5de6\u81f3\u53f3\u8bbf\u95ee\u94fe\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u8fd9\u4e00\u70b9\u53cd\u6620\u5728\u51fd\u6570f\u7684\u53c2\u6570\u4e0a\uff0c\u5176\u53c2\u6570\u662f\u4e00\u4e2a\u7c7b\u578b\u4e3aS\u7684\u7d2f\u52a0\u5668\u548c\u4e00\u4e2a\u7c7b\u578b\u4e3aT\u7684\u94fe\u8868\u5143\u7d20\u3002\u51fd\u6570f\u4e0d\u80fd\u5c06\u4e24\u4e2a\u7d2f\u52a0\u5668\u5408\u5e76\u4e3a\u4e00\u4e2a\u7d2f\u52a0\u5668\u3002</p> <p>\u89e3\u51b3\u529e\u6cd5\uff1a</p> <p>\u4e3a\u4e86\u80fd\u591f\u5c06\u4e0d\u540c\u5904\u7406\u5668\u4ea7\u751f\u7684\u7d2f\u52a0\u5668\u5408\u5e76\u8d77\u6765\uff0c\u9700\u8981\u7528\u5230 aggregate \u65b9\u6cd5\u3002aggregate \u65b9\u6cd5\u7c7b\u4f3c\u4e8efoldLeft\uff0c\u53ea\u4e0d\u8fc7\u5b83\u6ca1\u6709\u6309\u4ece\u5de6\u81f3\u53f3\u7684\u65b9\u5f0f\u6307\u5b9a\u6574\u4e2a\u94fe\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u800c\u662f\u6307\u5b9a\u4e00\u4e2a\u5b50\u96c6\uff08\u8bbf\u95ee\u987a\u5e8f\u4ecd\u7136\u662f\u4ece\u5de6\u81f3\u53f3\uff09\u3002\u6bcf\u4e2a\u5b50\u96c6\u53ef\u751f\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u7d2f\u52a0\u5668\u3002</p>"},{"location":"LANG/JUC-SUC/#_23","title":"\u5e76\u884c\u5bb9\u5668\u7684\u526f\u4f5c\u7528","text":"<p>\u4e3a\u907f\u514d\u4f7f\u7528\u540c\u6b65\uff0c\u5e76\u83b7\u5f97\u66f4\u597d\u7684\u53ef\u6269\u5c55\u6027\uff0c\u5e94\u5c3d\u91cf\u4f7f\u7528\u58f0\u660e\u5f0f\u7684\u5e76\u884c\u64cd\u4f5c\uff0c\u800c\u975e\u5728\u5faa\u73af\u4e2d\u4f7f\u7528\u5e76\u884c\u64cd\u4f5c\uff08\u6709\u526f\u4f5c\u7528\uff09</p> <p>\u7c7b\u4f3c\u5730\uff0c\u7528\u6237\u9700\u786e\u4fdd\u5e76\u884c\u64cd\u4f5c\u8bfb\u53d6\u7684\u5185\u5b58\u4f4d\u7f6e\u4e0a\u4e0d\u80fd\u6709\u5e76\u53d1\u7684\u5199\u64cd\u4f5c\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5f53\u524d\u5e76\u53d1\u64cd\u4f5c\u6b63\u5728\u6267\u884c\u65f6\uff0c\u5b50\u96c6b\u4e0d\u5e94\u8be5\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5e76\u53d1\u5730\u4fee\u6539\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u548c\u53ef\u53d8\u53d8\u91cf\u4e00\u6837\u7684\u9519\u8bef\u7ed3\u679c\u3002</p>"},{"location":"LANG/JUC-SUC/#_24","title":"\u975e\u786e\u5b9a\u6027\u5e76\u884c\u64cd\u4f5c\uff0c\u53ef\u4ea4\u6362\u7684\u64cd\u4f5c","text":"<p>\u53ea\u8981\u7528\u4e8e\u63a7\u5236\u5e76\u884c\u7684\u72b6\u6001\u662f\u53ef\u786e\u5b9a\u7684\u3002</p>"},{"location":"LANG/JUC-SUC/#8","title":"8. \u89d2\u8272\u6a21\u578b","text":"<p>\u5728\u89d2\u8272\u6a21\u578b\u4e2d\uff0c\u7a0b\u5e8f\u7531\u5927\u91cf\u5b9e\u4f53\u6784\u6210\uff0c\u5b83\u4eec\u5404\u81ea\u72ec\u7acb\u8fd0\u884c\uff0c\u76f8\u4e92\u4e4b\u95f4\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u6765\u901a\u4fe1\u3002\u8fd9\u79cd\u72ec\u7acb\u7684\u5b9e\u4f53\u79f0\u4e3a\u89d2\u8272\u3002</p> <p>\u89d2\u8272\u6a21\u578b\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u5171\u4eab\u5185\u5b58\u5e26\u6765\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u6570\u636e\u4e89\u7528\u6216\u540c\u6b65\uff0c\u56e0\u4e3a\u5b83\u5e72\u8106\u5c31\u5b8c\u5168\u4e0d\u7528\u5171\u4eab\u5185\u5b58\u3002\u53ef\u53d8\u72b6\u6001\u88ab\u9650\u5236\u5728\u89d2\u8272\u5185\u90e8\uff0c\u5f53\u89d2\u8272\u6536\u5230\u4e00\u4e2a\u6d88\u606f\u4e4b\u540e\uff0c\u8fd9\u4e9b\u72b6\u6001\u4f1a\u88ab\u6f5c\u5728\u5730\u4fee\u6539\u3002\u89d2\u8272\u6536\u5230\u7684\u6d88\u606f\u662f\u88ab\u4e32\u884c\u4f9d\u6b21\u5904\u7406\u7684\u3002\u8fd9\u4fdd\u8bc1\u4e86\u89d2\u8272\u4e2d\u7684\u53ef\u53d8\u72b6\u6001\u7edd\u4e0d\u4f1a\u88ab\u5e76\u53d1\u8bbf\u95ee\u3002</p> <p>\u89d2\u8272\u7684\u521b\u5efa\u548c\u6d88\u606f\u7684\u53d1\u9001\u4e0d\u5173\u5fc3\u89d2\u8272\u7684\u4f4d\u7f6e\u3002\u5728\u5206\u5e03\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u8fd9\u88ab\u79f0\u4e3a\u4f4d\u7f6e\u900f\u660e\uff08location transparency\uff09\u3002</p>"},{"location":"LANG/JUC-SUC/#81","title":"8.1 \u4f7f\u7528\u89d2\u8272\u6a21\u578b","text":"<p>\u5c06\u89d2\u8272\u7cfb\u7edf\u7c7b\u6bd4\u4e3a\u4e00\u4e2a\u516c\u53f8</p> <ol> <li> <p>\u89d2\u8272\u7cfb\u7edf</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u662f\u4e00\u4e2a\u89d2\u8272\u7684\u5206\u5c42\u7ed3\u6784\uff0c\u4e14\u8fd9\u4e9b\u89d2\u8272\u4e4b\u95f4\u5171\u4eab\u4e00\u4e9b\u914d\u7f6e\u9009\u9879\u3002</p> </li> <li>\u4f5c\u7528\uff1a\u89d2\u8272\u7cfb\u7edf\u8d1f\u8d23\u521b\u5efa\u65b0\u7684\u89d2\u8272\u3001\u67e5\u627e\u89d2\u8272\u3001\u8bb0\u5f55\u91cd\u8981\u4e8b\u4ef6\u7b49\u3002\u89d2\u8272\u7cfb\u7edf\u7c7b\u4f3c\u4e8e\u8f6f\u4ef6\u516c\u53f8\u3002</li> <li>\u89d2\u8272\u7c7b</li> <li>\u5b9a\u4e49\uff1a\u662f\u4e00\u4e2a\u63cf\u8ff0\u89d2\u8272\u5185\u90e8\u72b6\u6001\u548c\u6307\u5bfc\u89d2\u8272\u5904\u7406\u6d88\u606f\u7684\u6a21\u677f\u3002</li> <li>\u4f5c\u7528\uff1a\u540c\u4e00\u4e2a\u89d2\u8272\u7c7b\u53ef\u4ee5\u521b\u5efa\u51fa\u591a\u4e2a\u89d2\u8272\uff0c\u89d2\u8272\u7c7b\u7c7b\u4f3c\u4e8e\u516c\u53f8\u5185\u7684\u7279\u5b9a\u804c\u4f4d\uff0c\u6bd4\u5982\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u3001\u8425\u9500\u7ecf\u7406\u6216\u4eba\u4e8b\u7ecf\u7406\u3002</li> <li>\u89d2\u8272\u5b9e\u4f8b</li> <li>\u5b9a\u4e49\uff1a\u89d2\u8272\u5b9e\u4f8b\u662f\u4e00\u4e2a\u5b58\u5728\u4e8e\u8fd0\u884c\u65f6\u5e76\u8d1f\u8d23\u63a5\u6536\u6d88\u606f\u7684\u5b9e\u4f53\u3002\u89d2\u8272\u5b9e\u4f8b\u4e2d\u53ef\u80fd\u5305\u542b\u53ef\u53d8\u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u5411\u5176\u4ed6\u89d2\u8272\u5b9e\u4f8b\u53d1\u9001\u6d88\u606f\u3002</li> <li>\u4f5c\u7528\uff1a\u7c7b\u6bd4\u4e3a\u5177\u4f53\u7684\u5458\u5de5\u3002</li> <li>\u6d88\u606f</li> <li>\u5b9a\u4e49\uff1a\u6d88\u606f\u662f\u89d2\u8272\u4e4b\u95f4\u901a\u4fe1\u7684\u57fa\u672c\u5355\u5143\u3002\u5728 Akka \u4e2d\uff0c\u6d88\u606f\u53ef\u4ee5\u662f\u4efb\u610f\u5bf9\u8c61\u3002\u6d88\u606f\u7c7b\u4f3c\u4e8e\u516c\u53f8\u5185\u7684\u7535\u5b50\u90ae\u4ef6\u3002</li> <li>\u90ae\u7bb1\uff1a\u90ae\u7bb1\u662f\u7528\u6765\u7f13\u51b2\u6d88\u606f\u7684\u4e00\u90e8\u5206\u5185\u5b58\uff0c\u53ea\u4e0d\u8fc7\u5b83\u5c5e\u4e8e\u6bcf\u4e2a\u7279\u5b9a\u7684\u89d2\u8272\u5b9e\u4f8b\u3002\u8fd9\u4e2a\u7f13\u51b2\u533a\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u5176\u4ed6\u89d2\u8272\u5b9e\u4f8b\u53ea\u80fd\u4e00\u6b21\u5904\u7406\u4e00\u4e2a\u6d88\u606f\u3002\u90ae\u7bb1\u5bf9\u5e94\u4e8e\u96c7\u5458\u7684\u7535\u5b50\u90ae\u4ef6\u5ba2\u6237\u7aef\u3002</li> <li>\u89d2\u8272\u5f15\u7528</li> <li>\u5b9a\u4e49\uff1a\u89d2\u8272\u5f15\u7528\u662f\u4e00\u79cd\u652f\u6301\u89d2\u8272\u5411\u4e00\u4e2a\u5177\u4f53\u89d2\u8272\u53d1\u9001\u6d88\u606f\u7684\u5bf9\u8c61\u3002</li> <li>\u4f5c\u7528\uff1a\u6b64\u5bf9\u8c61\u5411\u7a0b\u5e8f\u5458\u9690\u85cf\u4e86\u89d2\u8272\u7684\u5177\u4f53\u4f4d\u7f6e\u4fe1\u606f\u3002\u89d2\u8272\u53ef\u80fd\u8fd0\u884c\u5728\u4e0d\u540c\u7684\u8fdb\u7a0b\u4e2d\uff0c\u4e5f\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u8ba1\u7b97\u673a\u4e0a</li> <li>\u4ece\u8f6f\u4ef6\u516c\u53f8\u7684\u89d2\u5ea6\u770b\uff0c\u89d2\u8272\u5f15\u7528\u5bf9\u5e94\u4e8e\u96c7\u5458\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u96c7\u5458\u4e4b\u95f4\u5c31\u53ef\u4ee5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u4e86\u3002</li> <li>\u8c03\u5ea6\u5668</li> <li>\u5b9a\u4e49\uff1a\u662f\u4e00\u4e2a\u7528\u6765\u8c03\u5ea6\u89d2\u8272\u7684\u7ec4\u4ef6\uff0c\u5b83\u51b3\u5b9a\u4e86\u89d2\u8272\u4f55\u65f6\u53ef\u4ee5\u5904\u7406\u6d88\u606f\u5e76\u4e3a\u4e4b\u5206\u914d\u8ba1\u7b97\u8d44\u6e90\u3002</li> <li>\u5728Akka \u4e2d\uff0c\u8c03\u5ea6\u5668\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u6267\u884c\u4e0a\u4e0b\u6587\u3002\u8c03\u5ea6\u5668\u786e\u4fdd\u4e86\u90a3\u4e9b\u90ae\u7bb1\u975e\u7a7a\u7684\u89d2\u8272\u603b\u80fd\u7531\u4e00\u4e2a\u7ebf\u7a0b\u8fd0\u884c\u8d77\u6765\uff0c\u5e76\u7ebf\u6027\u5730\u5904\u7406\u8fd9\u4e9b\u6d88\u606f\u3002</li> </ol> <p>\ud83d\udd14</p> <p>\u6267\u884c\u4e0a\u4e0b\u6587\uff1a\u6267\u884c\u4e0a\u4e0b\u6587\u53ef\u4ee5\u51b3\u5b9a\u4efb\u52a1\u662f\u5728\u54ea\u4e2a\u7ebf\u7a0b\u4e0a\u8fd0\u884c\uff0c\u4ee5\u53ca\u5982\u4f55\u7ba1\u7406\u8fd9\u4e9b\u7ebf\u7a0b\u3002</p> <p>\u5728 Scala \u4e2d\uff0c\u6267\u884c\u4e0a\u4e0b\u6587\u901a\u5e38\u4f5c\u4e3a\u9690\u5f0f\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\uff0c\u8fd9\u6837\u51fd\u6570\u53ef\u4ee5\u5728\u4e0d\u9700\u8981\u663e\u5f0f\u4f20\u5165\u6267\u884c\u4e0a\u4e0b\u6587\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u5f02\u6b65\u64cd\u4f5c\u3002</p> <ol> <li>\u7c7b\u6bd4\uff1a\u8c03\u5ea6\u5668\u7684\u7c7b\u6bd4\u5bf9\u8c61\u4e4b\u4e00\u662f\u8f6f\u4ef6\u516c\u53f8\u5185\u7684\u7535\u5b50\u90ae\u4ef6\u56de\u590d\u653f\u7b56\uff0c\u4e5f\u5c31\u662f\u89c4\u5b9a\u4e0d\u540c\u804c\u5458\u7684\u90ae\u4ef6\u76f8\u5e94\u65f6\u673a\u3002</li> </ol>"},{"location":"LANG/JUC-SUC/#_25","title":"\u521b\u5efa\u89d2\u8272\u7cfb\u7edf\u548c\u89d2\u8272\u5b9e\u4f8b","text":"<p>Akka\u4e2d\u7684\u89d2\u8272\u5b9e\u4f8b\u7684\u521b\u5efa\u8fc7\u7a0b\u548c\u5bf9\u8c61\u5b9e\u4f8b\u7684\u521b\u5efa\u8fc7\u7a0b\u5927\u81f4\u7c7b\u4f3c\u3002\u9996\u5148\u4e5f\u8981\u5b9a\u4e49\u4e00\u4e2a\u89d2\u8272\u7c7b\uff0c\u5b83\u5b9a\u4e49\u4e86\u89d2\u8272\u7684\u884c\u4e3a\u3002\u7136\u540e\uff0c\u8fd8\u9700\u8981\u6307\u5b9a\u7279\u5b9a\u89d2\u8272\u5b9e\u4f8b\u7684\u914d\u7f6e\u3002\u6700\u540e\uff0c\u8fd8\u8981\u544a\u8bc9\u89d2\u8272\u7cfb\u7edf\u7528\u6307\u5b9a\u7684\u914d\u7f6e\u5b9e\u4f8b\u5316\u89d2\u8272\uff0c\u89d2\u8272\u7cfb\u7edf\u624d\u4f1a\u521b\u5efa\u4e00\u4e2a\u89d2\u8272\u5b9e\u4f8b\uff0c\u5e76\u8fd4\u56de\u6b64\u5b9e\u4f8b\u7684\u89d2\u8272\u5f15\u7528\u3002</p> <ol> <li> <p>\u89d2\u8272\u7c7b\u7684\u58f0\u660e</p> </li> <li> <p>\u89d2\u8272\u7c7b\u7528\u4e8e\u6307\u5b9a\u89d2\u8272\u7684\u884c\u4e3a\u3002</p> </li> </ol> <p>\u5b83\u63cf\u8ff0\u4e86\u89d2\u8272\u5982\u4f55\u54cd\u5e94\u6d88\u606f\u548c\u4e0e\u5176\u4ed6\u89d2\u8272\u901a\u4fe1\u3002\u58f0\u660e\u4e00\u4e2a\u65b0\u7684\u89d2\u8272\u7c7b\u9700\u8981\u6269\u5c55akka.actor\u5305\u4e2d\u7684Actor\u7279\u8d28\u3002\u5e76\u5b9e\u73b0receive\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u51e1\u8fd4\u56de\u4e00\u4e2a\u504f\u51fd\u6570\u5bf9\u8c61\u3002\u5f53\u89d2\u8272\u6536\u96c6\u5230Any\u7c7b\u578b\u7684\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u8be5\u90e8\u5206\u51fd\u6570\u5bf9\u8c61\u5c31\u4f1a\u88ab\u8c03\u7528\u3002\u5426\u5219\u8be5\u6d88\u606f\u4f1a\u88ab\u5ffd\u7565\u3002</p> <ul> <li>\u89d2\u8272\u7c7b\u8fd8\u5c01\u88c5\u4e86\u8fd9\u4e2a\u89d2\u8272\u4f1a\u7528\u5230\u7684\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u8fd9\u4e9b\u5bf9\u8c61\u8868\u793a\u4e86\u89d2\u8272\u7684\u72b6\u6001\u3002</li> </ul> <p>\ud83d\udccc</p> <p>\u5b9a\u4e49: PartialFunction \u504f\u51fd\u6570 \u5141\u8bb8\u4f60\u5b9a\u4e49\u4e00\u4e2a\u53ea\u5bf9\u67d0\u4e9b\u8f93\u5165\u6709\u5b9a\u4e49\u7684\u51fd\u6570\u3002</p> <p>\u5e94\u7528: \u5e38\u7528\u4e8e\u5904\u7406\u90a3\u4e9b\u4e0d\u9700\u8981\u4e3a\u6240\u6709\u53ef\u80fd\u7684\u8f93\u5165\u90fd\u63d0\u4f9b\u6709\u610f\u4e49\u8f93\u51fa\u7684\u60c5\u51b5\u3002</p> <p>\u5b9e\u73b0: \u901a\u8fc7 case \u8bed\u53e5\u6216\u8005 if \u6761\u4ef6\u6765\u5b9e\u73b0\u6a21\u5f0f\u5339\u914d\u3002</p> <p>\u4f7f\u7528: \u53ef\u4ee5\u76f4\u63a5\u5e94\u7528\u4e8e foreach \u6216\u8005 collect \u7b49\u96c6\u5408\u64cd\u4f5c\u4e0a\u3002</p> <p>PartialFunction \u5728\u5904\u7406\u5982\u9519\u8bef\u5904\u7406\u3001\u6570\u636e\u8f6c\u6362\u7b49\u573a\u666f\u65f6\u975e\u5e38\u6709\u7528\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u4f18\u96c5\u5730\u5904\u7406\u65e0\u6548\u8f93\u5165\u7684\u60c5\u51b5\u4e0b\u3002</p> <p>\u4f8b\u5b50\uff1a\u4e0b\u9762\u7684Actor\u7c7b\u53ef\u4ee5\u76f8\u5e94\u6d88\u606fhello\u3002</p> Text Only<pre><code>    import akka.actor._\n    import akka.event.Logging\n    class HelloActor(val hello: String) extends Actor {\n      //\u8be5logging\u5bf9\u8c61\u5f15\u7528\u4e86\u5f53\u524d\u89d2\u8272\u7cfb\u7edf\u4ee5\u53ca\u5f53\u524d\u89d2\u8272\n      val log = Logging(context.system, this)\n      //\u90e8\u5206\u51fd\u6570\n      def receive = {\n        //\u53ef\u4ee5\u76f8\u5e94\u6d88\u606fhello\n        case `hello` =&gt;\n          log.info(s\"Received a '$hello'... $hello!\")\n        case msg\u3000\u3000 =&gt;\n          log.info(s\"Unexpected message '$msg'\")\n          //\u505c\u6b62\u5f53\u524d\u89d2\u8272\n          context.stop(self)\n      }\n    }\n</code></pre> <ol> <li>\u89d2\u8272\u914d\u7f6e</li> <li>\u4e00\u4e2a\u89d2\u8272\u914d\u7f6e\u4e2d\u7684\u4fe1\u606f\u5305\u62ec\u89d2\u8272\u7c7b\u3001\u5176\u6784\u9020\u51fd\u6570\u53c2\u6570\u3001\u90ae\u7bb1\u3001\u8c03\u5ea6\u5668\u7684\u5b9e\u4f8b\u3002</li> <li>\u5728Akka\u4e2d\uff0c\u89d2\u8272\u914d\u7f6e\u7531Props\u7c7b\u8868\u793a\u3002Props\u5bf9\u8c61\u5c01\u88c5\u4e86\u521b\u5efa\u89d2\u8272\u5b9e\u4f8b \u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u5e8f\u5217\u5316\u4e4b\u540e\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\u3002</li> <li>\u4f7f\u7528\u65b9\u6cd5\uff1a\u4e3a\u4e86\u521b\u5efaProps\u5bf9\u8c61\uff0c\u63a8\u8350\u7684\u505a\u6cd5\u662f\u5728\u89d2\u8272\u7c7b\u7684\u4f34\u751f\u5bf9\u8c61\u4e2d\u58f0\u660e\u4e00\u4e9b\u5de5\u5382\u65b9\u6cd5</li> </ol> Text Only<pre><code>object HelloActor {\n//props \u65b9\u6cd5\u7528\u5230 Props.apply \u5de5\u5382\u65b9\u6cd5\u7684\u4e00\u4e2a\u91cd\u8f7d\u65b9\u6cd5\uff0c\n//\u5b83\u901a\u8fc7\u521b\u5efaHelloActor\u7c7b\u6765\u63a5\u6536\u4e00\u4e2a\u4ee3\u7801\u5757\u3002\n  def props(hello: String): Props = Props(new HelloActor(hello))\n//propsAlt\u65b9\u6cd5\u7528\u5230\u4e86Props.apply\u7684\u53e6\u5916\u4e00\u4e2a\u91cd\u8f7d\u65b9\u6cd5\uff0c\n//\u5b83\u7531\u89d2\u8272\u7c7b\u7684Class\u5bf9\u8c61\u548c\u6784\u9020\u51fd\u6570\u53c2\u6570\u94fe\u8868\u521b\u5efa\u51fa\u4e00\u4e2a\u89d2\u8272\u5b9e\u4f8b\u3002\u8fd9\u4e24\u4e2a\u91cd\u8f7d\u65b9\u6cd5\u5728\u8bed\u4e49\u4e0a\u662f\u7b49\u4ef7\u7684\n  def propsAlt(hello: String): Props = Props(classOf[HelloActor], hello)\n}\n</code></pre> <p>\ud83d\udccc</p> <p>\u7b2c\u4e00\u4e2aProps.apply\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u53ef\u4ee5\u8c03\u7528\u89d2\u8272\u7c7b\u6784\u9020\u51fd\u6570\u7684\u95ed\u5305\u3002\u5982\u679c\u7528\u6237\u4e0d\u591f\u4ed4\u7ec6\uff0c\u8fd9\u4e2a\u95ed\u5305\u5f88\u5bb9\u6613\u6355\u6349\u5230\u5916\u5c42\u7684\u5f15\u7528\uff0c\u8fd9\u65f6\uff0c\u8fd9\u4e9b\u5f15\u7528\u4f1a\u53d8\u6210Props\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\u3002\u4f1a\u5bfc\u81f4\u7f51\u7edc\u4f20\u8f93\u7684\u65f6\u5019\u4e00\u540c\u53d1\u9001\uff0c\u5bfc\u81f4\u989d\u5916\u7684\u7f51\u7edc\u5f00\u9500</p> <ol> <li>\u89d2\u8272\u7cfb\u7edf\u4e0e\u89d2\u8272\u521b\u5efa</li> </ol> <p>\u5728\u5b9e\u4f8b\u5316\u89d2\u8272\u65f6\uff0c\u9700\u8981\u5c06\u5176\u89d2\u8272\u914d\u7f6e\u53d1\u9001\u7ed9\u89d2\u8272\u7cfb\u7edf\u7684 actorOf \u65b9\u6cd5\u3002</p> Text Only<pre><code>//\u5305\u5bf9\u8c61\uff1alazy val ourSystem = ActorSystem(\"OurExampleSystem\")  \nobject ActorCreate extends App{\n  private val hiActor: ActorRef = ourSystem.actorOf(HelloActor.props(\"hi\"), name = \"greeter\")\n  //\u5411hiActor\u53d1\u9001\u6d88\u606f\"hi\"\n  hiActor ! \"hi\"\n  Thread.sleep(1000)\n  hiActor ! \"hola\"\n  Thread.sleep(1000)\n  //\u5173\u95edhiActor\n  ourSystem.terminate()\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#_26","title":"\u672a\u5904\u7406\u6d88\u606f\u7684\u7ba1\u7406","text":"<p>\u89d2\u8272\u5b9e\u4f8b\u4f1a\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5904\u7406\u8fd9\u4e2a\u6d88\u606f\u3002\u7528\u6237\u4e5f\u53ef\u4ee5\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u4e88\u5904\u7406\uff0creceive \u65b9\u6cd5\u672a\u5904\u7406\u7684\u6d88\u606f\u4f1a\u88ab\u5c01\u88c5\u6210UnhandledMessage\u5bf9\u8c61\uff0c\u7136\u540e\u8f6c\u53d1\u7ed9\u89d2\u8272\u7cfb\u7edf\u7684\u4e8b\u4ef6\u6d41\uff0c\u8fd9\u5e38\u7528\u4e8e\u65e5\u5fd7\u8bb0\u5f55\u3002</p> Text Only<pre><code>import akka.actor._\nimport akka.event.{Logging, LoggingAdapter}\n\n// \u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u6765\u6f14\u793a\u672a\u5904\u7406\u6d88\u606f\u7684\u5904\u7406\nobject ActorsUnhandled extends App{\n  // \u521b\u5efa\u4e00\u4e2a\u4e0d\u4f1a\u5904\u7406\u4efb\u4f55\u6d88\u606f\u7684\u6f14\u5458\n  private val deafActor: ActorRef = ourSystem.actorOf(Props[DeafActor], name = \"deafy\")\n\n  // \u5411\u6f14\u5458\u53d1\u9001\u4e00\u4e2a\u5b57\u7b26\u4e32\u6d88\u606f\n  deafActor ! \"hi\"\n  // \u7b49\u5f851\u79d2\n  Thread.sleep(1000)\n\n  // \u5411\u6f14\u5458\u53d1\u9001\u4e00\u4e2a\u6574\u6570\u6d88\u606f\n  deafActor ! 12010\n  // \u518d\u6b21\u7b49\u5f851\u79d2\n  Thread.sleep(1000)\n\n  // \u7ec8\u6b62\u7cfb\u7edf\n  ourSystem.terminate()\n}\n\n// \u5b9a\u4e49\u4e00\u4e2a\u6f14\u5458\u7c7b\uff0c\u8be5\u7c7b\u4e0d\u4f1a\u5904\u7406\u4efb\u4f55\u6d88\u606f\nclass DeafActor extends Actor{\n  // \u521d\u59cb\u5316\u65e5\u5fd7\u9002\u914d\u5668\n  private val log: LoggingAdapter = Logging(context.system, this)\n\n  // \u5b9a\u4e49\u63a5\u6536\u6d88\u606f\u7684\u884c\u4e3a\uff0c\u6b64\u5904\u4e0d\u5904\u7406\u4efb\u4f55\u6d88\u606f\n  override def receive: Receive = PartialFunction.empty\n\n  // \u91cd\u5199unhandled\u65b9\u6cd5\u6765\u5904\u7406\u672a\u5904\u7406\u7684\u6d88\u606f\n  override def unhandled(message: Any) = {\n    // \u6839\u636e\u6d88\u606f\u7c7b\u578b\u8fdb\u884c\u4e0d\u540c\u7684\u5904\u7406\n    message match{\n      case msg:String =&gt; log.info(s\"unhandled msg : $msg\")\n      case other =&gt; super.unhandled(other)\n    }\n  }\n}\n</code></pre>"},{"location":"LANG/JUC-SUC/#_27","title":"\u89d2\u8272\u884c\u4e3a\u548c\u72b6\u6001\u5207\u6362","text":"<p>Actor\u7c7b\u7684receive\u65b9\u6cd5\u5fc5\u987b\u8fd4\u56de\u504f\u51fd\u6570\uff0c\u4f46\u662f\u4e0d\u5b9c\u6839\u636e\u89d2\u8272\u7684\u72b6\u6001\u8fd4\u56de\u4e0d\u540c\u7684\u504f\u51fd\u6570\u3002</p> <p>\u5982\u4e0b\u884c\u4e3a\u662f\u4e0d\u88ab\u5141\u8bb8\u7684</p> Text Only<pre><code>class CountdownActor extends Actor {\n  var n = 10\n  def receive = if (n &gt; 0) { // \u4e0d\u8981\u8fd9\u6837\u505a\n    case \"count\" =&gt;\n      log(s\"n = $n\")\n      n -= 1\n  } else PartialFunction.empty\n}\n</code></pre> <p>\u6b63\u786e\u65b9\u5f0f:</p> <p>\u5f53\u4e00\u4e2a\u72b6\u6001\u5316\u7684\u89d2\u8272\u9700\u8981\u4fee\u6539\u884c\u4e3a\u65f6\uff0c\u4e3a\u6bcf\u4e00\u79cd\u884c\u4e3a\u58f0\u660e\u4e00\u4e2a\u72ec\u7acb\u7684\u504f\u51fd\u6570\uff0c\u7136\u540e\u5728receive\u65b9\u6cd5\u4e2d\u8fd4\u56de\u521d\u59cb\u884c\u4e3a\u5bf9\u5e94\u7684\u504f\u51fd\u6570\u3002</p> Text Only<pre><code>class CountdownActor extends Actor {\n  val log = Logging(context.system, this)\n  var n = 10\n//\u6ce8\u610f\uff0c\u8fd9\u91cc\u7528\u5230\u4f34\u751f\u5bf9\u8c61Actor\u4e2d\u7684\u7c7b\u578b\u522b\u540dReceive\uff0c\n//\u5b83\u53ea\u4e0d\u8fc7\u662fPartialFunction[Any,Unit]\u7c7b\u578b\u7684\u7f29\u5199\u3002\n\n  def counting: Actor.Receive = {\n    case \"count\" =&gt;\n      n -= 1\n      log.info(s\"n = $n\")\n      if (n == 0) context.become(done)\n  }\n  def done = PartialFunction.empty\n  def receive = counting\n}\n</code></pre> <p>\u5f53\u4e3a\u590d\u6742\u89d2\u8272\u5efa\u6a21\u65f6\uff0c\u5c06\u5b83\u4eec\u89c6\u4e3a\u72b6\u6001\u673a\uff08statemachine\uff09\u662f\u6bd4\u8f83\u5408\u9002\u7684\u3002</p>"},{"location":"Project/","title":"\u9879\u76ee\u7684\u5f00\u53d1\u7b14\u8bb0","text":"<p>\u5185\u5bb9\u53ef\u4ee5\u5728\u4fa7\u8fb9\u680f\u9009\u62e9</p>"},{"location":"Project/AbstractStreamOperatorDesign/","title":"\u81ea\u5b9a\u4e49StreamOperator","text":""},{"location":"Project/AbstractStreamOperatorDesign/#_1","title":"\u539f\u7406","text":"<p>StreamOperator\u63a5\u53e3\u63d0\u4f9b\u4e86\u5176\u751f\u547d\u5468\u671f\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u627f\u5176\u62bd\u8c61\u7c7bAbstractStreamOperator\uff0c\u5e76\u8986\u76d6\u5176\u4e2d\u7684\u65b9\u6cd5\u8fdb\u884c\u5b9e\u73b0\u3002</p> <p>\u5982\u679c\u9700\u8981\u63a5\u53d7\u4e0a\u6e38\u6570\u636e\uff0c\u5c31\u5fc5\u987b\u5b9e\u73b0OneInputStreamOperator\u6216\u8005TwoInputStreamOperator\u63a5\u53e3\uff0c\u4e3b\u8981\u901a\u8fc7\u8f93\u5165\u7684\u6570\u91cf\u6765\u5224\u65ad\u3002</p>"},{"location":"Project/AbstractStreamOperatorDesign/#_2","title":"\u5177\u4f53\u6b65\u9aa4\uff1a\u4e00\u4e2a\u901a\u7528\u7684\u5b9a\u65f6\uff0c\u5b9a\u91cf\u7684\u8f93\u51fa\u7b97\u5b50\u7684\u8bbe\u8ba1","text":"<ol> <li>\u7ee7\u627fAbstractStreamOperator\u62bd\u8c61\u7c7b\uff0c\u5b9e\u73b0OneInputStreamOperator\u63a5\u53e3</li> <li>\u91cd\u5199open\u65b9\u6cd5\uff0c\u8fdb\u884c\u8d44\u6e90\u521d\u59cb\u5316\uff0c\u8c03\u7528flink\u63d0\u4f9b\u7684\u5b9a\u65f6\u63a5\u53e3\uff0c\u5e76\u6ce8\u518c\u5b9a\u65f6\u5668</li> <li>\u91cd\u5199initializeState/snapshotState\u65b9\u6cd5,\u9700\u8981\u505a\u7f13\u5b58\uff0c\u5219\u9700\u8981\u4f7f\u7528\u5230\u72b6\u6001</li> <li>\u91cd\u5199processElement\u65b9\u6cd5\uff0c\u5c06\u6570\u636e\u7f13\u5b58\u5230state\uff0c\u5230\u8fbe\u4e00\u5b9a\u91cf\u5c31\u8f93\u51fa(collect)</li> <li>\u5b9e\u73b0\u5b9a\u65f6\u76f8\u5173\u7684\u63a5\u53e3\uff0c\u5e76\u5b9e\u73b0\u5176\u4e2d\u7684\u56de\u8c03\u65b9\u6cd5</li> </ol>"},{"location":"Project/AbstractStreamOperatorDesign/#_3","title":"\u8c03\u7528","text":"<p>\u4f7f\u7528dataStream.transfrom\u5373\u53ef\u8fdb\u884c\u8c03\u7528</p>"},{"location":"Project/dynamic-Cep/","title":"\u52a8\u6001CEP\u5b9e\u73b0","text":""},{"location":"Project/dynamic-Cep/#_1","title":"\u53c2\u8003\u8d44\u6e90","text":"<p>\u67b6\u6784\u6587\u7ae0\uff0c\u4f46\u662f\u89c4\u5219\u53d1\u73b0\u90e8\u5206\u5e76\u4e0d\u662f\u91c7\u7528\u4e86\u5e7f\u64ad\u6d41\u7684\u65b9\u5f0f\uff0c\u800c\u662f\u91c7\u7528\u4e86\u5f02\u6b65\u7ebf\u7a0b\u5b9a\u65f6\u626b\u63cf\uff0c\u5e76\u901a\u8fc7\u534f\u8c03\u5668\u5206\u53d1\u5230\u81ea\u5b9a\u4e49\u7b97\u5b50\u4e0a\u53bb\u3002\u540c\u65f6\u672c\u9879\u76ee\u53c2\u8003\u4e86\u591a\u4e2agithub\u5f00\u6e90\u9879\u76ee\u7684\u5b9e\u73b0</p>"},{"location":"Project/dynamic-Cep/#_2","title":"\u672c\u6587\u529f\u80fd","text":"<p>\u4e3b\u8981\u662f\u5bf9\u4e8e\u5f15\u5165\u5f00\u6e90\u7684\u9879\u76ee\u7684\u63a2\u7a76\u548c\u603b\u7ed3\uff0c\u5e76\u5bf9\u591a\u4e2a\u4e0d\u540c\u5f00\u6e90\u5b9e\u73b0\u7684\u7684\u5dee\u5f02\u8fdb\u884c\u5bf9\u6bd4</p>"},{"location":"Project/dynamic-Cep/#_3","title":"\u5b9e\u73b0\u7684\u9700\u6c42","text":"<p>\u5f00\u6e90\u7248\u672c\u7684CEP\u7684pattern\u5230NFA\u8fd9\u4e00\u6b65\u662f\u5728\u7f16\u8bd1\u65f6\u5019\u5c31\u5b8c\u6210\u7684\uff0c\u8fd0\u884c\u65f6\u4e0d\u80fd\u4fee\u6539\u3002 \u90a3\u4e48\u5bf9\u4e8e\u5355\u89c4\u5219\u4fee\u6539\uff0c\u6216\u8005\u662f\u591a\u89c4\u5219\u7684\u6267\u884c\uff0c\u5c31\u65e0\u6cd5\u5b9e\u73b0\uff0c\u6216\u8005\u662f\u4ee3\u4ef7\u5f88\u5927\u3002\u6240\u4ee5\u5f88\u591a\u516c\u53f8\u90fd\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u9009\u62e9\u5bf9\u5f00\u6e90\u7248\u672c\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\uff0c\u4ece\u800c\u5b9e\u73b0\u52a8\u6001\u89c4\u5219\u4fee\u6539\u3002</p>"},{"location":"Project/dynamic-Cep/#_4","title":"\u5b9e\u73b0\u601d\u8def","text":""},{"location":"Project/dynamic-Cep/#_5","title":"\u80cc\u666f","text":"<p>\u4ee5\u7ecf\u5178\u7684\u673a\u623f\u6e29\u5ea6\u68c0\u6d4b\u573a\u666f\u4e3a\u4f8b\u5b50\uff0c\u5047\u8bbe\u73b0\u5728\u8fdb\u5165\u7684\u4e00\u4e2a\\(record\\)\u7684\u683c\u5f0f\u662f \\(|rackID|\u6e29\u5ea6|\u529f\u7387|\u5176\u4ed6|\\),\u800c\u6211\u4eec\u7684\u9700\u6c42\u662f\u9700\u8981\u9488\u5bf9\u4e0d\u540c\u673a\u623f\u6e29\u5ea6\u7684\u53d8\u5316\u8d8b\u52bf\u8fdb\u884c\u68c0\u6d4b\uff0c\u4ece\u800c\u53ef\u4ee5\u8fdb\u884cWarning\u6216\u8005\u662fAlert\u3002</p>"},{"location":"Project/dynamic-Cep/#_6","title":"\u65b9\u6cd5","text":"<p>\u9762\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f7f\u7528CEP\u7684\u901a\u7528\u65b9\u6cd5\u662f\u5bf9\u4ee5\\(rackID\\)\u4e3a\u952e\uff0c\u505a\u4e00\u4e2a\u952e\u63a7\u6d41\uff0c\u7136\u540e\u5bf9keyedStream\u4e0a\u505aSimpleCondition\uff0c\u6216\u8005\u662fIterativeCondtion\uff0c\u4ece\u800c\u5b9e\u73b0\u57fa\u4e8e\u5f53\u524d\u6570\u636e,[ \u5386\u53f2\u6570\u636e ] \u7684\u68c0\u6d4b\uff0c\u7136\u540e\u6700\u540e\u5728\u5bf9PatternStream\u4e0a\u6267\u884cProcessFunc\u903b\u8f91\u3002</p> <p>\u8fd9\u4e2a\u573a\u666f\u4e2d\uff0cpattern\u521d\u59cb\u5316\u7684nfa\u6a21\u578b\u662f\u56fa\u5b9a\u7684\uff0c\u4e5f\u5c31\u662fCepOperator\u7c7b\u4e2d\u7684</p> Text Only<pre><code>private final NFACompiler.NFAFactory&lt;IN&gt; nfaFactory;\n\nprivate transient NFA&lt;IN&gt; nfa;\n</code></pre> <p>\u6210\u5458\u53d8\u91cf\uff0c\u5b83\u5e76\u4e0d\u80fd\u652f\u6301\u8fd0\u884c\u65f6\u7684\u52a8\u6001\u4fee\u6539\u3002</p> <p>\u4e3a\u4e86\u80fd\u591f\u4fee\u6539\uff0c\u4e00\u79cd\u53ef\u80fd\u7684\u5b9e\u73b0\u5982\u4e0b(\u7c7b\u4f3cPPT\u94fe\u63a5\u4e2d\u7684\u5b9e\u73b0\uff0c\u662f\u4e00\u4e2a\u4e09\u89d2\u5f62)(\u6682\u65f6\u8ba8\u8bbakeyedStream)\uff1a</p> <ol> <li>\u628a\u89c4\u5219\u5b58\u50a8DB\u4e2d\uff0c\u5e76\u5728JobMaster\u7aef\u542f\u52a8\u5f02\u6b65\u7ebf\u7a0b(\u901a\u8fc7Coodrinator)\uff0c\u5bf9\u4e8e\u89c4\u5219\u8fdb\u884c\u5b9a\u65f6\u626b\u63cf</li> <li>\u5b9e\u73b0\u4e24\u5bf9Operator-Coordiantor\u3002</li> <li>\u5176\u4e2d\u7684RuleDistributorCoordinator\uff0c\u901a\u8fc7\u5916\u90e8\u5b9e\u73b0\u7684discover\uff0c\u5bf9\u4e8eDB\u8fdb\u884c\u5b9a\u65f6\u626b\u63cf\uff0c\u5e76\u5c06\u6570\u636e\u8bfb\u53d6\uff0c\u5176\u4e00\u90e8\u5206\u751f\u4ea7\u8005\u7684\u4f5c\u7528\u3002</li> <li>\u800cRuleProcessCoordinator\uff0c\u901a\u8fc7Coordinator store\u540cRuleDistributorCoordinator\u83b7\u53d6\u6570\u636e\uff0c\u540c\u6837\u53ef\u4ee5\u62ff\u5230\u53d8\u66f4\u7684\u6570\u636e(\u4e0d\u518d\u6b21\u626b\u63cf\uff0c\u5e94\u8be5\u662f\u4e3a\u4e86\u5bf9\u9f50\u548c\u540c\u6b65)\uff0c\u5e76\u4e14\u8d77\u5230\u4e00\u90e8\u5206\u6d88\u8d39\u8005\u7ebf\u7a0b\u7684\u4f5c\u7528\u3002</li> <li>\u4e24\u4e2aCoordinator\u90fd\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\uff0c\u4e0e\u5bf9\u5e94\u7684Operator(subtask)\u8fdb\u884c\u901a\u4fe1</li> <li>\u5f53\u6570\u636e\u6d41(\u952e\u63a7\u6d41)\u8fdb\u5165\u4e4b\u540e\uff0cRuleDistributorOperator\u5bf9\u4e8e\u6570\u636e\u6d41\u8fdb\u884c\u4fee\u6539\uff0c\u5c06elem\u548crule\u8fdb\u884c\u62fc\u63a5\uff0c\u5f62\u5982\\(elem -&gt; (elem,rule1),(elem,rule2)\\),\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u5982\u6b64\u3002\u4e5f\u901a\u8fc7\u53c2\u6570\u63a7\u5236\u3002\uff0c\u7136\u540e\u5bf9\u4e8e\u65b0\u7684keyedStream,\u4ee5\\(rackID,ruleID\\) \u62fc\u63a5\uff0c\u53d8\u4e3akey\uff0c\u518d\u8fdb\u884c\u4e00\u6b21keyBy\u3002</li> <li>\u5bf9\u4e8e\u65b0\u7684keyBy\u6d41\uff0cRuleProcessOperator\u5bf9\u4e8e\u901a\u8fc7\u4e0eCoordinator\u7684\u6700\u65b0\u901a\u4fe1\uff0c\u5f97\u5230\u6700\u65b0\u7684\u89c4\u5219\u4fe1\u606f\uff0c\u4ece\u800c\u52a8\u6001\u52a0\u8f7dpattern\u4e0efunction\uff0c\u7136\u540e\u52a8\u6001\u751f\u6210nfa,\u8fdb\u884c\u5339\u914d\u3002</li> </ol>"},{"location":"Project/dynamic-Cep/#_7","title":"\u5177\u4f53\u5b9e\u73b0\u601d\u8def","text":"<p>Flip200\u4e2d\u5f00\u59cb\u63d0\u5230\u4e86\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u7684\u4e09\u7c7b\u63a5\u53e3/\u7c7b\uff0c\u5206\u522b\u662f</p> <ol> <li>PatternProcessor\u63a5\u53e3: \u5177\u6709keyby+process\u7684\u7ec4\u5408\u529f\u80fd</li> <li>PatternProcessorManger\u63a5\u53e3: \u7528\u4e8e\u5904\u7406\u6a21\u5f0f\u66f4\u65b0\uff0c\u5e76\u63d0\u4f9b\u5f53\u524dprocessor\u7684\u4fe1\u606f</li> <li>PatternProcessorDiscover\u63a5\u53e3\uff1a\u53d1\u73b0\u6a21\u5f0f\u66f4\u6539\uff0c\u5e76\u901a\u77e5processor\u8fdb\u884c\u66f4\u65b0</li> <li>PatternProcessorDiscoverFactory\u63a5\u53e3: \u5f15\u5165 PatternProcessorDiscovererFactory \u662f\u4e3a\u4e86\u4f7f\u7528 PatternProcessorManager \u521b\u5efa PatternProcessorDiscoverer</li> <li>CEP.patternProcess():\u5c06\u6570\u636e\u6d41\u8f6c\u6362\u4e3a\u5339\u914d\u4e4b\u540e\u7684\u6d41\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c</li> </ol> <p>\u5e76\u5efa\u8bae\u6dfb\u52a0\u4e24\u4e2a\u7b97\u5b50</p> <ol> <li>key-gen-operator:\u5bf9\u4e8e\u6bcf\u4e2a\u8fdb\u6765\u7684\u6570\u636e\uff0c\u5bf9\u6bcf\u79cd\u89c4\u5219\u8fdb\u884c\u62fc\u63a5\uff0c\u7528dataid \u548c ruleid \u8fdb\u884c\u62fc\u63a5\uff0c\u4f5c\u4e3a\u6570\u636e\u7684key</li> <li>\u7d27\u63a5\u7740\uff0c\u505a\u4e00\u6b21keyby\uff0c\u4f7f\u7528\u751f\u6210\u7684key</li> <li>cep-operator: \u771f\u6b63\u505a\u6a21\u5f0f\u5339\u914d\u7684operator\u3002\u8be6\u7ec6\u8d23\u4efb\u89c1\u539f\u6587\u5982\u4e0b\uff1a <p>The first duty is almost the same as that of CepOperator, except that it needs to handle multiple and dynamic patterns now. The second duty has been achieved by PatternStream.process() method, but now it needs to be achieved by inner implementations. </p> </li> </ol> <p>\u5efa\u8bae\u6dfb\u52a0 OperatorCoordinators</p> <ol> <li>\u8fd9\u4e2a\u7b97\u5b50\u7684\u63d0\u51fa\u59cb\u4e8eFlip-27\uff0c\u5e76\u4e14\u673a\u5236\u5df2\u7ecf\u88ab\u5b9e\u73b0\u7684\u5f88\u597d\u4e86\uff0c\u76f4\u63a5\u7ee7\u627f\u4f7f\u7528\u5373\u53ef\u3002(\u67e5\u770b\u5177\u4f53\u63d0\u51fa\uff0c\u5176\u5b9e\u662f\u5728\u81ea\u5b9a\u4e49\u6570\u636e\u6e90\u7528\u7684\u8f83\u591a)</li> </ol> <p>\u5b9a\u65f6\u8c03\u5ea6\u90e8\u5206</p> <ol> <li>\u901a\u8fc7getTimeStamp()\u6765\u8fdb\u884c\u65f6\u95f4\u7684\u8c03\u5ea6</li> <li>\u5f53\u65b0\u89c4\u5219\u5230\u8fbe\uff0c\u9996\u5148\u4f1a\u88ab\u7f13\u5b58\u5230operator\u4e2d\u3002\u5f53watermark\u63a8\u8fdb\u5230\u4e86\uff0c\u5e94\u8be5\u8fdb\u884c\u8c03\u5ea6\u7684\u65f6\u95f4\u4e0ewatermark\u65f6\u95f4\u5bf9\u6bd4\uff0c\u5e76\u76f8\u5e94\u66f4\u65b0\u6a21\u5f0f</li> </ol> <p>\u5bb9\u9519\uff1a\u5728\u68c0\u67e5\u70b9\uff0c\u5219\u5c06\u6a21\u5f0f\u548c\u90e8\u5206\u5339\u914d\u7ed3\u679c\u5b58\u50a8\u5728\u72b6\u6001\u540e\u7aef\u3002</p> <p>\u4e0d\u8db3\uff1a\u8be5\u8bbe\u8ba1\u53ea\u4fdd\u8bc1\u6700\u7ec8\u4e00\u81f4\u6027</p> <p>\u4f7f\u7528\u534f\u8c03\u5668\u800c\u4e0d\u662f\u5e7f\u64ad\u6d41\u7684\u539f\u56e0</p> <p>Unlike input data that is flowing in as a stream, updates are actually control messages that, instead of passing in as datastream, should be sent out by a control center like JobManager. OperatorCoordinators meet this semantics and thus is a more proper choice.</p> <p>\u4e0b\u9762\u8be6\u7ec6\u8bf4\u660e\u6bcf\u4e00\u4e2a\u90e8\u5206</p>"},{"location":"Project/dynamic-Cep/#_8","title":"\u534f\u8c03\u5668\u90e8\u5206","text":"<p>\u5982\u679c\u8981\u521b\u5efa\u4e00\u4e2a\u534f\u8c03\u5668\uff0c\u9996\u5148\u8003\u5bdfCoordiantor\u63a5\u53e3\u7684\u5b9a\u4e49\u3002</p> <p>A coordinator for runtime operators. The OperatorCoordinator runs on the master, associated with the job vertex of the operator. It communicates with operators via sending operator events.</p> <p>\u610f\u5473\u7740\u4e00\u4e2a\u534f\u8c03\u5668\u901a\u5e38\u8fd0\u884c\u5728JobManager\uff0c\u7528\u4e8e\u548c\u7b97\u5b50\u4e4b\u95f4\u901a\u8fc7event\u901a\u4fe1</p> <p>All coordinator methods are called by the Job Manager's main thread (mailbox thread). That means that these methods must not, under any circumstances, perform blocking operations (like I/ O or waiting on locks or futures). That would run a high risk of bringing down the entire JobManager. Coordinators that involve more complex operations should hence spawn threads to handle the I/ O work. The methods on the OperatorCoordinator. Context are safe to be called from another thread than the thread that calls the Coordinator's methods.</p> <p>\u8fd9\u6bb5\u8bdd\u610f\u5473\u7740\uff0c\u6211\u4eec\u5982\u679c\u8981\u5728coordinator\u4e0a\u5b9e\u73b0I/O,\u5219\u6709\u5fc5\u8981\u5355\u72ec\u5f00\u7ebf\u7a0b\uff0c\u9632\u6b62\u963b\u585eJob manager\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\u7684\u534f\u8c03\u5668Context\u5b9e\u4f8b\uff0c\u5185\u90e8\u5305\u542b\u4e86\u4e24\u4e2a\u7ebf\u7a0b\u6c60\u3002\u5982\u679c\u8c03\u7528 context.sendToOperator\uff0c\u5219\u4f1a\u5c06\u4e8b\u4ef6\u59d4\u6258\u7ed9\u534f\u8c03\u5668\u7ebf\u7a0b\u6267\u884c\u3002\u7528\u4e8e\u786e\u4fdd\u4e8b\u4ef6\u662f\u5728\u534f\u8c03\u5668\u7ebf\u7a0b\u6267\u884c\uff0c\u800c\u4e0d\u662f\u5176\u4ed6\u7ebf\u7a0b</p> ApacheConf<pre><code>/**\n     * \u534f\u8c03\u5668\u7ebf\u7a0b\u4e2d\u53d1\u9001\u4e8b\u4ef6\u7ed9\u6307\u5b9a\u7684subTask\n     * @param subtaskId subtask\u7684ID,\u6bd4\u59821\n     * @param event \u6bd4\u5982RuleBindingEvent(bindings=[RuleBinding(id=1),RuleBinding(id=2)])\n     */\n    public void sendEventToOperator(int subtaskId, OperatorEvent event) {\n        callInCoordinatorThread(\n                () -&gt; {\n                    final OperatorCoordinator.SubtaskGateway gateway =\n                            subtaskGateways.get(subtaskId);\n                    if (gateway == null) {\n                        LOG.warn(\n                                String.format(\n                                        \"Subtask %d is not ready yet to receive events.\",\n                                        subtaskId));\n                    } else {\n                        //\u5c06RuleBindingEvent(bindings=[RuleBinding(id=1),RuleBinding(id=2)])\u53d1\u9001\u7ed9\u6307\u5b9a\u7684subTask\n                        gateway.sendEvent(event);\n                    }\n                    return null;\n                },\n                String.format(\"Failed to send event %s to subtask %d\", event, subtaskId));\n    }\n</code></pre> <p>\u534f\u8c03\u5668\u63a5\u53e3\u8fd8\u67093\u4e2a\u5185\u90e8\u63a5\u53e3\uff0c\u5206\u522b\u662fContext, SubtaskGateway\uff0c\u4ee5\u53caProvider\u3002</p> <ol> <li>\u9996\u5148\u662fContext</li> </ol> <p>The context gives the OperatorCoordinator access to contextual information and provides a gateway to interact with other components, such as sending operator events.</p> <ol> <li>\u7136\u540e\u662fSubtaskGateway</li> </ol> <p>The SubtaskGateway is the way to interact with a specific parallel instance of the Operator (an Operator subtask), like sending events to the operator.</p> <ol> <li>\u6700\u540e\u662fProvider</li> </ol> <p>\u8fd9\u4e2aprovider\u53ef\u4ee5\u6839\u636e\u6240\u4f20\u9012\u7684Context\uff0c\u6765\u521b\u5efa\u4e00\u4e2aCoordiantor\u3002\u4f8b\u5982\u53ef\u4ee5\u88abJob manager\u8c03\u7528\uff0c\u5f53\u8c03\u5ea6\u5668\u4ee5\u53ca\u6267\u884c\u56fe\u88ab\u521b\u5efa\u7684\u65f6\u5019\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5728\u8fd9\u4e2a\u65f6\u5019\u521d\u59cb\u5316Coordinator\u3002\u8fd9\u91cc\u6211\u53d1\u73b0coordiantor\u5185\u90e8\u5185\u7f6e\u4e86\u4e00\u4e2a</p> Text Only<pre><code>SourceCoordinatorProvider\n</code></pre> <p>\u5219\u53ef\u4ee5\u53c2\u8003\u8be5\u7c7b\u6765\u8fdb\u884c\u5b9e\u73b0\u3002\u540c\u6837\u53ef\u4ee5\u53c2\u8003\u963f\u91cc\u7684\u5b9e\u73b0\u3002 </p> <p>\u534f\u8c03\u5668\u6709\u4e00\u4e2a\u4f1a\u57fa\u4e8e\u68c0\u67e5\u70b9\u8fdb\u884c\u6062\u590d\u7684\u5b50\u7c7b</p>"},{"location":"Project/dynamic-Cep/#provider","title":"Provider","text":"<p>\u9996\u5148\u8003\u8651\u5b9e\u73b0</p> Text Only<pre><code>RuleDistributorCoordinatorProvider\n</code></pre> <p>\u8fd9\u4e2a\u7c7b\u662f\u7528\u4e8e\u63d0\u4f9b\u534f\u8c03\u5668\u7684\u7c7b\uff0c\u4ed6\u7ee7\u627f\u7684\u5c31\u662f\u4e0a\u9762\u7684\u5b50\u7c7b\u578b\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u57fa\u4e8e\u68c0\u67e5\u70b9\u8fdb\u884c\u6062\u590d\u3002\u5bf9\u4e8e\u8be5\u7c7b\uff0c\u8fdb\u884c\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u53ef\u4ee5\u5411\u5b83\u6765\u4f20\u9012context\uff0c\u6765\u83b7\u5f97\u5bf9\u5e94\u7684\u534f\u8c03\u5668\u5b9e\u4f8b\u3002</p> <p>\u8fd9\u4e2a\u7c7b\u5b9e\u73b0\u7684\u65b9\u6cd5\u5728idea\u4e2d\u627e\u4e0d\u5230\u8df3\u8f6c\uff0c\u4f46\u662f\u6253\u65ad\u70b9\u53ef\u4ee5\u53d1\u73b0\uff0c\u5b9e\u9645\u4e0a\u5728JobGraph\u7684\u521b\u5efa\uff0c\u4e5f\u5c31\u662f\u4eceStreamGraph\u8f6c\u6362\u4e3aJobGraph\u7684\u65f6\u5019\uff0c\u4f1a\u88ab\u5f3a\u8f6c\u4ece\u800c\u88ab\u4f7f\u7528\u3002\u5728JobGraph\u521b\u5efa\u7684\u65f6\u5019\uff0c\u4f1a\u7ef4\u62a4\u4e00\u4e2aprovider\u94fe\u8868\u3002</p>"},{"location":"Project/dynamic-Cep/#coordinator","title":"Coordinator","text":"<p>\u7136\u540e\u8003\u8651</p> <p>public RuleDistributorCoordinator(String operatorName, String ruleUpdatedQueueId, RuleDiscovererFactory discovererFactory, CoordinatorContext coordinatorContext ) { this.operatorName = operatorName; this.discovererFactory = discovererFactory; this.context = coordinatorContext; this.ruleUpdatedQueueId = ruleUpdatedQueueId; updatedEventQueue = getRuleUpdatedEventQueue(); }</p> <p>\u8fd9\u4e2a\u7c7b\u662f\u4e2a\u6838\u5fc3\u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86</p> Text Only<pre><code>OperatorCoordinator, RuleManager\n</code></pre> <p>\u4e24\u4e2a\u63a5\u53e3\u3002</p> <p>\u5176\u4e2dRuleManager\u63a5\u53e3\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5c31\u662f\u5f53\u89c4\u5219\u6539\u53d8\u7684\u65f6\u5019\u9700\u8981\u505a\u51fa\u7684\u52a8\u4f5c\u3002\u8fd9\u4e5f\u5c31\u662f FLIP-200\u4e2d\u63d0\u5230\u7684 PatternProcessorManger\u63a5\u53e3\u3002\u5b83\u548c\u53e6\u4e00\u4e2aRuleDiscover\u63a5\u53e3\u662f\u76f8\u4e92\u914d\u5408\u7684\u3002RuleDiscover\u63a5\u53e3\u4e5f\u5c31\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5c31\u662f\u53d1\u73b0\u89c4\u5219\u7684\u53d8\u52a8\u3002</p> <p>\u5176\u4e2d\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <ol> <li>start\u65b9\u6cd5\uff1a\u5f00\u542f\u4e00\u4e2a\u534f\u8c03\u5668\uff0c\u5728\u5b9e\u73b0\u4e2d\uff0c\u8fd9\u91cc\u4f1a\u7ed9RuleDiscover\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u4e0e\u8d4b\u503c\uff0c\u4e5f\u5c31\u662fRuleDiscover\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u3002\u7136\u540e\u5c06\u8f6e\u8be2DB\u7684\u4efb\u52a1\u63d0\u4ea4\u5230Coodriantor\u7684\u7ebf\u7a0b\u6c60\u4e2d\uff0c\u5b83\u7684\u4e24\u4e2a\u7ebf\u7a0b\u6c60\uff0c\u5927\u5c0f\u90fd\u662f1\uff0c\u662f\u4e3a\u4e86\u4fdd\u62a4\u7ebf\u7a0b\u6267\u884c\u7684\u987a\u5e8f\u662f\u4e32\u884c\u6267\u884c\u3002</li> <li>handEventFromOper:\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u9700\u8981\u5b9e\u73b0\uff0c\u56e0\u4e3a\u8fd9\u91cc\u7684\u4e8b\u4ef6\u4f20\u9012\u662f\u5355\u5411\u7684\uff0c\u4eceJobManager -&gt; subTask</li> <li>checkpointCoordiantor: \u8fd9\u4e2a\u65b9\u6cd5\u7684\u5165\u53c2\u662f\u4e00\u4e2a\u68c0\u67e5\u70b9id\u548c\u5b57\u8282\u6570\u7ec4\u7c7b\u578b\u7684future\uff0c\u9700\u8981\u505a\u7684\u5c31\u662f\u60f3\u7ebf\u7a0b\u6c60\u63d0\u4ea4\u6267\u884c\u4efb\u52a1\uff0c\u5982\u679c\u8f93\u4e86\uff0c\u5c31\u7528\u5b8c\u6210\u7684\u7ed3\u679c\u586b\u5145future\uff0c\u5426\u5219\u5fc5\u987b\u7528\u5f02\u5e38\u8fdb\u884c\u586b\u5145\uff0c\u8fd9\u662f\u6240\u66b4\u9732\u51fa\u6765\u7684\u63a5\u53e3\u6240\u89c4\u5b9a\u7684\u3002</li> <li>\u5bf9\u4e8e\u63a5\u53e3\u6240\u5b9a\u4e49\u7684\uff0c\u4ececheckpointListener\u6240\u63d0\u4f9b\u7684\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5e76\u4e0d\u9700\u8981\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u6709\u65f6\u95f4\u518d\u5177\u4f53\u7814\u7a76</li> <li> <p>\u7136\u540e\u5c31\u662f\u4e3a\u4e86\u4e00\u81f4\u6027\u7684\u8981\u6c42\uff0c\u9700\u8981\u4fdd\u8bc13\u4e2a\u65b9\u6cd5\u7684\u4e25\u683c\u6309\u7167\u987a\u5e8f\u6267\u884c(\u5176\u4e2d1\uff0c4\u662f\u4e00\u79cd\u65b9\u6cd5\uff0c\u4ee3\u8868\u65b0\u5468\u671f\u7684\u5f00\u59cb)</p> </li> <li> <p>executionAttemptReady(int, int, OperatorCoordinator. SubtaskGateway): Called once you can send events to the subtask execution attempt. The provided gateway is bound to that specific execution attempt. This is the start of interaction with the operator subtask attempt. </p> <p>\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u662f\u5f00\u59cb\u548csubtask\u8fdb\u884c\u4ea4\u4e92\u7684    2. &gt; executionAttemptFailed(int, int, Throwable): Called for each subtask execution attempt as soon as the attempt failed or was cancelled. At this point, interaction with the subtask attempt should stop.</p> <p>\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u662f\u5f53\u7ed9subtask\u7684\u4ea4\u4e92\u5728subtask\u7aef\u5931\u8d25\u7684\u65f6\u5019\uff0c\u9700\u8981coordinator\u7acb\u5373\u505c\u6b62\u8fdb\u884c\u4ea4\u4e92    3. &gt; subtaskReset(int, long) or resetToCheckpoint(long, byte[]): Once the scheduler determined which checkpoint to restore, these methods notify the coordinator of that. The former method is called in case of a regional failure/ recovery (affecting possible a subset of subtasks), the later method in case of a global failure/ recovery. This method should be used to determine which actions to recover, because it tells you which checkpoint to fall back to. The coordinator implementation needs to recover the interactions with the relevant tasks since the checkpoint that is restored. It will be called only after</p> <p>\u7b2c\u4e09\u4e2a\u65b9\u6cd5\u7528\u4e8e\u91cd\u7f6e\u5230\u6307\u5b9a\u68c0\u67e5\u70b9\u7684\u4f4d\u7f6e\uff0c\u5b9e\u73b0\u601d\u8def\u5982\u4e0b\uff1a\u5bf9\u4e8e\u6bcf\u4e2acheckpoint\u6240\u4fdd\u5b58\u7684\u6570\u636e\uff0c\u90fd\u7528checkpointId + byte[] data\u6765\u552f\u4e00\u6807\u8bc6\u3002\u6240\u4ee5\u5f53\u8fdb\u884c\u91cd\u7f6e\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7readObject\u91cd\u65b0\u8bfb\u53d6\u6062\u590d\u6570\u636e\u3002\u8fd9\u91cc\u68c0\u67e5\u70b9\u53ea\u7ef4\u62a4\u4e00\u4e2a\u72b6\u6001\uff0c\u5c31\u662f RuleBindingEvent\u3002\u81f3\u4e8ediscover\uff0c\u53ef\u4ee5\u76f4\u63a5\u91cd\u65b0\u521b\u5efa\u3002\u8981\u6ce8\u610f\u65b9\u6cd5\u4e2d\u6240\u63d0\u9192\u7684\u5bf9\u4e8e\u7a7a\u72b6\u6001\u7684\u7279\u5224\u3002    4. &gt; executionAttemptReady(int, int, OperatorCoordinator. SubtaskGateway): Called again, once the recovered tasks (new attempts) are ready to go. This is later than subtaskReset(int, long), because between those methods, the new attempts are scheduled and deployed.</p> <p>\u4e00\u65e6\u4ece\u68c0\u67e5\u70b9\u6062\u590d\uff0c\u5219\u5c31\u53ef\u4ee5\u518d\u6b21\u5c1d\u8bd5\u4e0esubtask\u8fdb\u884c\u4ea4\u4e92\u3002 6. \u4ee5\u53ca\u4e00\u4e2a\u8f85\u52a9\u65b9\u6cd5 runInEventLoop</p> </li> </ol> Text Only<pre><code>context.runInCoordinatorThread\n</code></pre> <p>\u628a\u4efb\u52a1\u59d4\u6258\u7ed9\u534f\u8c03\u5668\u7ebf\u7a0b\u6c60\u8fdb\u884c\u6267\u884c 7. \u4ee5\u53ca\u9700\u8981\u5b9e\u73b0ruleManager\u63a5\u53e3\u7684onRuleUpdated\u65b9\u6cd5    \u9996\u5148\uff0c\u4e0d\u540c\u7684Coordinator\u4e4b\u95f4\uff0c\u53ef\u4ee5\u901a\u8fc7 CoordinatorStore \u8fdb\u884c\u8d44\u6e90\u7684\u5171\u4eab\uff0c\u4ed6\u5c31\u662f\u4e00\u4e2a\u5e76\u53d1\u7684hashMap\uff0c\u4ece\u800c\u652f\u6301\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u5f0f\u3002\u7136\u540e\uff0c\u8fd8\u53ef\u4ee5\u5c06\u4e8b\u4ef6\u53d1\u9001\u7ed9\u5bf9\u5e94\u7684\u90a3\u4e2a\u7b97\u5b50    \u8fd9\u4e24\u8005\u7684\u5b8c\u6210\uff0c\u90fd\u901a\u8fc7context\u6765\u5b8c\u6210</p>"},{"location":"Project/dynamic-Cep/#coordiantor","title":"\u4e24\u79cdCoordiantor\u804c\u8d23\u4e0e\u4ea4\u4e92","text":"<p>\u9996\u5148\u662f</p> Text Only<pre><code>RuleDistributorCoordinator\n</code></pre> <p>\u5b83\u901a\u8fc7discover\uff0c\u67e5\u770bDB\u89c4\u5219\u662f\u5426\u6539\u53d8\u3002\u5982\u679c\u6539\u53d8\uff0c\u5219\u5bf9\u4e8e\u6bcf\u4e2a\u89c4\u5219(\u65b0\u89c4\u5219\uff0c\u4e5f\u53ef\u4ee5\u662f\u89c4\u5219\u6700\u65b0\u7248)\uff0c\u5c06\u89c4\u5219\u76f8\u5173\u53c2\u6570\u5c01\u88c5\u5230event \u6b64\u5904\u4f7f\u7528\u7684event\u4e00\u5171\u6709\u4e24\u79cd</p> <ol> <li>RuleBindingEvent</li> <li>\u5b9a\u4e49\uff1a\u89c4\u5219\u7ed1\u5b9a\u4e8b\u4ef6</li> <li>\u5185\u5bb9\uff1a\u5305\u542b\u4e00\u4e2aRuleBinding\u5217\u8868</li> <li>RuleBinding\uff1a\u89c4\u5219\u7ed1\u5b9a\u5b9e\u4f53\u3002\u5305\u542b\u89c4\u5219id,version\uff0c\u4ee5\u53ca\u7ed1\u5b9a\u7684key\u3002</li> <li>RuleUpdatedEvent</li> <li>\u5b9a\u4e49\uff1a\u89c4\u5219\u66f4\u65b0\u4e8b\u4ef6</li> <li>\u5185\u5bb9\uff1a\u5305\u542b\u4e00\u4e2aRuleUpdated\u5217\u8868</li> <li>RuleUpdated: \u89c4\u5219\u66f4\u65b0\u5b9e\u4f53\u3002\u5305\u542b\u89c4\u5219\u5b9a\u4e49\u65f6json\u5b57\u7b26\u4e32\u9664\u4e86binding\u90e8\u5206\u7684\u6240\u6709\u5b57\u6bb5\u3002</li> <li>\u901a\u8fc7\u4e00\u4e2a\u5171\u4eabmap\u8fdb\u884c\u6d88\u606f\u901a\u4fe1</li> </ol>"},{"location":"Project/dynamic-Cep/#_9","title":"\u7b97\u5b50\u5f00\u53d1\u90e8\u5206","text":"<p>\u7b97\u5b50\u540c\u6837\u6309\u7167FLIP-200\u4e2d\u601d\u8def\u5b9e\u73b0\uff0c\u5148\u5b9e\u73b0\u4e00\u4e2akey-Gen oper\uff0c\u518d\u5b9e\u73b0\u4e00\u4e2acep oper\u3002</p>"},{"location":"Project/dynamic-Cep/#key-gen-oper","title":"key-Gen-Oper","text":"<p>\u81ea\u5b9a\u4e49\u4e00\u4e2aStreamOperator\uff0c\u539f\u7406\u5c31\u662f\u53ef\u4ee5\u7ee7\u627f\u5176\u62bd\u8c61\u7c7bAbstractStreamOperator,\u5e76\u8986\u76d6\u5176\u4e2d\u7684\u65b9\u6cd5\u3002</p> <p>\u5982\u679c\u9700\u8981\u63a5\u53d7\u4e0a\u6e38\u6570\u636e\uff0c\u5c31\u5fc5\u987b\u5b9e\u73b0OneInputStreamOperator\u6216\u8005TwoInputStreamOperator\u63a5\u53e3\uff0c\u4e3b\u8981\u901a\u8fc7\u8f93\u5165\u7684\u6570\u91cf\u6765\u5224\u65ad\u3002</p> <p>\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ul> <li>\u7ee7\u627fAbstractStreamOperator\u62bd\u8c61\u7c7b\uff0c\u5b9e\u73b0OneInputStreamOperator\u63a5\u53e3</li> <li>\u91cd\u5199open\u65b9\u6cd5\uff0c\u8fdb\u884c\u8d44\u6e90\u521d\u59cb\u5316\uff0c\u8c03\u7528flink\u63d0\u4f9b\u7684\u5b9a\u65f6\u63a5\u53e3\uff0c\u5e76\u6ce8\u518c\u5b9a\u65f6\u5668</li> <li>\u91cd\u5199initializeState/snapshotState\u65b9\u6cd5,\u9700\u8981\u505a\u7f13\u5b58\uff0c\u5219\u9700\u8981\u4f7f\u7528\u5230\u72b6\u6001</li> <li>\u91cd\u5199processElement\u65b9\u6cd5\uff0c\u5c06\u6570\u636e\u7f13\u5b58\u5230state\uff0c\u5230\u8fbe\u4e00\u5b9a\u91cf\u5c31\u8f93\u51fa(collect)</li> <li>\u5b9e\u73b0\u5b9a\u65f6\u76f8\u5173\u7684\u63a5\u53e3\uff0c\u5e76\u5b9e\u73b0\u5176\u4e2d\u7684\u56de\u8c03\u65b9\u6cd5</li> </ul> <p>\u65b9\u6cd5</p> <ol> <li>open: \u9996\u5148\u8fdb\u884c\u5404\u53d8\u91cf\u7684\u521d\u59cb\u5316\uff0c\u521d\u59cb\u5316collector\u4ee5\u53ca\u662f\u5426\u7ed1\u5b9a\u53c2\u6570\u7684\u76f8\u5173\u53d8\u91cf\u3002\u7136\u540e\u5bf9distributor\u63a5\u53e3\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5b83\u662f\u4e00\u4e2aRuleDistributor\u63a5\u53e3\uff0c\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528lambda\u521b\u5efa\u5b9e\u4f8b\u3002\u91cc\u9762\u540c\u65f6\u5c01\u88c5\u4e86\u6570\u636e\u7684\u53d1\u9001\uff0c\u4e5f\u5c31\u662fcollector\u903b\u8f91\u3002</li> <li>processElement: \u76f4\u63a5\u8c03\u7528\u5c01\u88c5\u597d\u7684\u51fd\u6570\u8fdb\u884c\u8c03\u7528\u3002\u8fd9\u91cc\u5c06func\u89c6\u4f5cfirst-class\u8fdb\u884c\u4f20\u9012</li> </ol> <p>\u5185\u90e8\u7c7b\u548c\u5185\u90e8\u63a5\u53e3</p> <ol> <li>\u5185\u90e8\u63a5\u53e3\uff1a</li> </ol> Text Only<pre><code>RuleDistributor\n</code></pre> <p>\u4e3b\u8981\u7528\u4e8e\u5b9e\u73b0first-class 2. \u5185\u90e8\u7c7b\uff1a</p> Text Only<pre><code>KeyBindingMap\n</code></pre> <p>\u662f\u5bf9\u4e8ekey\u7ed1\u5b9a\u89c4\u5219\u7684map\u7684\u5c01\u88c5\uff0c\u5e76\u4e14\u652f\u6301\u6b63\u5219\u529f\u80fd</p>"},{"location":"Project/dynamic-Cep/#cep-process-oper","title":"cep-Process-Oper","text":""},{"location":"Project/econ-rule-engine/","title":"\u91d1\u878d\u98ce\u63a7\u5f15\u64ce","text":"<p>\u9879\u76ee\u5730\u5740\uff1astream_rule_flink: a rule-engine try,created by lx in 2024-12-06 (gitee.com)\u3002\u76ee\u524d\u662f\u79c1\u6709\u4ed3\u5e93</p>"},{"location":"Project/econ-rule-engine/#_2","title":"\u9879\u76ee\u80cc\u666f","text":"<p>\u5728\u98ce\u63a7\u8981\u7565\u8fd9\u672c\u4e66\u4e2d\uff0c\u5178\u578b\u7684\u4e00\u4e2a\u53cd\u6b3a\u8bc8\u9632\u63a7\u4f53\u7cfb\u6709\u4e09\u5c42\u3002</p> <ul> <li>\u7ec8\u7aef\u98ce\u63a7\uff1a\u6709\u8bbe\u5907\u6307\u7eb9\uff0c\u667a\u80fd\u9a8c\u8bc1\u7801</li> <li>\u5206\u6790\u51b3\u7b56\uff1a\u4ece\u7ec8\u7aef\u91c7\u96c6\u6570\u636e\uff0c\u7136\u540e\u8fdb\u884c\u51b3\u7b56\u5f15\u64ce\uff0c\u4ee5\u53ca\u5b9e\u65f6\u6307\u6807\u7684\u8ba1\u7b97\uff0c\u5e76\u7ed3\u5408\u6570\u636e\u6316\u6398\u7684\u90e8\u5206\uff0c\u4ee5\u53ca\u6570\u636e\u753b\u50cf\u7684\u6807\u7b7e\u8f93\u51fa\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u8ba1\u7b97</li> <li>\u6570\u636e\u753b\u50cf\uff1a\u4ece\u5206\u6790\u5c42\u6c89\u6dc0\u6570\u636e\uff0c\u5e76\u5c06\u6807\u7b7e\u8f93\u51fa\u5230\u5206\u6790\u5c42</li> </ul> <p>\u6700\u7ec8\u76ee\u6807\uff0c\u662f\u505a\u4e00\u4e2a\u5168\u6d41\u7a0b\u7684\u98ce\u63a7\u7cfb\u7edf\uff0c\u5176\u4e2d\u7684\u6838\u5fc3\u662fFlink\u5f15\u64ce\u7ed3\u5408OLAP\u3002</p> <p></p>"},{"location":"Project/econ-rule-engine/#_3","title":"\u9879\u76ee\u6280\u672f\u6808","text":"<p>\u76ee\u524d\u96c6\u4e2d\u7cbe\u529b\u5728\u5f00\u53d1\u5206\u6790\u51b3\u7b56\u5c42\u7684\u90e8\u5206\uff0c\u5e76\u5f00\u59cb\u8003\u8651\u52a0\u5165\u6570\u636e\u6316\u6398\u90e8\u5206\u6316\u6398\u6709\u6548\u7684\u89c4\u5219\u8865\u5145\u8fdb\u53bb\u3002</p> <ul> <li>\u5f15\u64ce\u6838\u5fc3\uff1aFlink</li> <li>OLAP\uff1aDoris</li> <li>\u7f13\u5b58\u9009\u578b\uff1aRedis</li> <li>\u6d88\u606f\u961f\u5217\uff1aKafka</li> <li>\u6570\u636e\u6316\u6398\u90e8\u5206\uff1a\u6ca1\u6709\u5f00\u59cb\u505a\uff0c\u8003\u8651Scala SparkML\u6216\u8005\u76f4\u63a5Python</li> </ul> <p>\u7528\u6237\u753b\u50cf\u90e8\u5206\u9700\u8981\u7ed3\u5408\u79bb\u7ebf\u6570\u4ed3\u53bb\u505a\uff0c\u8fd9\u90e8\u5206\u6682\u65f6\u6ca1\u6709\u505a\u3002</p>"},{"location":"Project/econ-rule-engine/#_4","title":"\u9879\u76ee\u96be\u70b9","text":"<p>\u9759\u6001\u89c4\u5219\u7684\u5b9e\u73b0\u7684\u6838\u5fc3\u903b\u8f91\u5df2\u7ecf\u5b8c\u6210\u3002</p> <p>\u76ee\u524d\u5728\u5b9e\u65f6\u89c4\u5219\u7684\u52a8\u6001\u6dfb\u52a0\u4e0e\u4fee\u6539\u6709\u95ee\u9898\u3002\u9996\u5148\uff0c\u73b0\u6709\u7684\u5f00\u6e90\u9879\u76ee\u6709\u597d\u51e0\u4e2a\uff0c\u4f46\u662f\u90fd\u6ca1\u6709\u6587\u6863\u3002\u4ec5\u6709\u7684\u6587\u6863\u662fFlink\u5b98\u65b9\u7684Flip200\u7684\u8bbe\u8ba1\u601d\u8def\u3002\u552f\u4e00\u7684\u65b9\u6cd5\u5c31\u662f\u6df1\u5165\u6e90\u7801\uff0c\u4e00\u6b65\u4e00\u6b65\u8c03\u8bd5\u4ee3\u7801\u540e\u5c06\u903b\u8f91\u8fdb\u884c\u8c03\u6574\uff0c\u5e76\u52a0\u5165\u81ea\u5df1\u9879\u76ee\u3002</p> <p>\u76ee\u524d\u7684\u6570\u636e\u4e5f\u662f\u95ee\u9898\uff0c\u53ea\u80fd\u6682\u65f6\u6a21\u62df\u6570\u636e\u5e76\u76f4\u63a5\u5b58\u5165Kafka\u4e2d\u3002</p> <p>\u5bf9\u4e8e\u6570\u636e\u6316\u6398\u90e8\u5206\u7684\u7814\u7a76\u662f\u76ee\u524d\u7f3a\u5c11\u7684\u4e00\u6b65\uff0c\u4f46\u662f\u4e5f\u662f\u5fc5\u987b\u505a\u7684\u4e00\u6b65\u3002\u56e0\u4e3a\u53ea\u6709\u5927\u89c4\u6a21\u7684\u6316\u6398\u624d\u80fd\u6709\u6548\u7684\u53d1\u73b0\u5408\u9002\u7684\u89c4\u5219\u6a21\u5f0f</p>"},{"location":"Project/econ-rule-engine/#_5","title":"\u5f00\u53d1\u8fdb\u5ea6","text":"<ul> <li>2024-12-06</li> <li>\u5c06\u4e4b\u524d\u7684scala SparkDemo\u9759\u6001\u89c4\u5219\u7248\u672c\u7b49\u4ef7\u8f6c\u6362\u4e3aflink,\u521d\u59cb\u5316\u9879\u76ee</li> <li>\u5bf9\u8f6f\u4ef6\u7248\u672c\u8fdb\u884c\u89c4\u5212\uff0c\u6700\u65b0\u7248Flink\u90e8\u5206\u7ec4\u4ef6\u4ecd\u65e7\u6ca1\u6709\u9002\u914d1.20</li> <li>\u6784\u5efa\u5de5\u5177\u7c7b\u548c\u6700\u521d\u59cb\u903b\u8f91</li> <li>2024-12-07 \u6dfb\u52a0</li> <li>\u5e8f\u5217\u5316\u9009\u578b\uff0c\u8003\u8651Protobuf,\u6dfb\u52a0Demo\u5e76\u8fdb\u884c\u5355\u6d4b</li> <li>\u5bf9\u4e8e\u666e\u901a\u89c4\u5219\uff0c\u7ec4\u5408\u89c4\u5219\uff0c\u7ec4\u5408\u987a\u5e8f\u89c4\u5219\u8fdb\u884c\u53c2\u6570\u5c01\u88c5</li> <li>\u6dfb\u52a0\u89c4\u5219\u7684\u5339\u914d\u903b\u8f91\uff0c\u4ece\u753b\u50cf\u7cfb\u7edf\u53d6\u6570\u636e\uff0c\u67e5\u770b\u89c4\u5219\u547d\u4e2d\u60c5\u51b5</li> <li>\u5bf9\u4e8e\u666e\u901a\u89c4\u5219\uff0c\u7ec4\u5408\u89c4\u5219\uff0c\u7ec4\u5408\u987a\u5e8f\u89c4\u5219\u6dfb\u52a0\u89c4\u5219\u5339\u914d\u670d\u52a1\uff0c\u751f\u6210\u5339\u914d\u7ed3\u679c</li> <li>\u8003\u8651Flink\u7684cep\u5e93\u51fd\u6570\u7b80\u5316\u4ee3\u7801\uff0c\u72b6\u6001\u540e\u7aef\u6362\u4e3arocksDB\u5bf9\u5176\u4ed6\u7ec4\u4ef6\u66ff\u6362\u7684\u53ef\u80fd\u6027</li> <li>\u8003\u8651doris\u7684\u7269\u5316\u89c6\u56fe\uff0c\u4ee5\u53caseq_match,\u7f13\u89e3Flink state\u5b58\u50a8\u538b\u529b\u4e0e\u8ba1\u7b97\u538b\u529b,\u5bf9\u6570\u636e\u51b7\u70ed\u5206\u79bb</li> <li>2024-12-08 \u6dfb\u52a0</li> <li>\u5bf9\u4e8eCEP\u8fdb\u884c\u6df1\u5165\u4e86\u89e3\uff0c\u5e76\u901a\u8fc7\u673a\u67b6\u6e29\u5ea6\u63a2\u67e5\u6848\u4f8b\u6765\u4f7f\u7528single\u89c4\u5219\u4ee5\u53cacombine\u89c4\u5219\uff0c\u67e5\u770b\u5bf9\u4e8e\u52a8\u6001\u89c4\u5219\u7684\u652f\u6301</li> <li>\u5c1d\u8bd5\u5728\u672c\u5730\u8fd0\u884c\u52a8\u6001cep\uff0c\u4f46\u662f\u6700\u540e\u62a5\u9519\uff0c\u6240\u4ee5\u5f00\u6e90\u7248\u672c\u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u8be5\u529f\u80fd\uff0c\u5b98\u65b9\u7684demo\u53ea\u662f\u7528\u6765\u770b\u7684\uff0c\u5e76\u4e14\u5546\u7528\u7248\u672c\u6700\u9ad8\u4e5f\u53ea\u652f\u63011.17</li> <li>\u8003\u8651\u628a\u9759\u6001\u89c4\u5219\u5168\u90e8\u7528CEP\u5b9e\u73b0</li> <li>2024-12-09 \u6dfb\u52a0</li> <li>\u638c\u63e1groovy\u8bed\u6cd5\uff0c\u7814\u7a76\u7528groovy\u5b9e\u73b0\u52a8\u6001\u89c4\u5219\u7684\u53ef\u80fd\u6027</li> <li>\u5c1d\u8bd5\u7528groovy\u5b9e\u73b0\u52a8\u6001\u89c4\u5219\uff0c\u4f46\u662f\u53d1\u73b0\u65e0\u6cd5\u5b9e\u73b0,\u56e0\u4e3a\u52a8\u6001\u89c4\u5219\u7684\u9700\u6c42\u662f\u5728\u6267\u884c\u4e2d\u52a8\u6001\u4fee\u6539\u7684\uff0c\u800c\u4e0d\u662f\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u8fdb\u884c\u7c7b\u52a0\u8f7d\u6765\u5b9e\u73b0\u7684</li> <li>\u6700\u7ec8\u901a\u8fc7\u5bf9\u4e00\u4e2a\u4e8c\u5f00\u7684flink\u7248\u672c\u8fdb\u884c\u6d4b\u8bd5\u4e0e\u6253\u5305\uff0c\u5b9e\u73b0\u52a8\u6001\u89c4\u5219\u7684\u589e\u52a0\uff0c\u5e76\u4e14\u5728\u6e29\u5ea6\u63a2\u67e5\u4e2d\u6d4b\u8bd5\u529f\u80fd\u5b8c\u5907\uff0c\u52a8\u6001\u6dfb\u52a0\u89c4\u5219\u4e5f\u53ef\u4ee5\u770b\u51fa\u6765\u63a2\u67e5\u51fa\u7684\u6570\u636e\u6709\u53d8\u5316</li> <li>2024-12-10 \u6dfb\u52a0</li> <li>\u67e5\u770bflink\u5e95\u5c42\u539f\u7406\uff0c\u5c1d\u8bd5\u89e3\u51b3\u52a8\u6001\u89c4\u5219\u4fee\u6539\u5931\u8d25\u7684\u95ee\u9898</li> <li>\u6210\u529f\u5b9e\u73b0\u57fa\u4e8e\u591a\u89c4\u5219\uff0c\u5e76\u4e14\u53ef\u52a8\u6001\u6dfb\u52a0\u89c4\u5219\u7684\u767b\u9646\u65e5\u5fd7\u4fe1\u606f\u68c0\u6d4b\u673a\u5236\uff0c\u8003\u8651\u5b58\u5165\u5206\u6790\u7cfb\u7edf\u8fdb\u884c\u5206\u6790</li> <li>2024-12-11 \u6dfb\u52a0</li> <li>\u5bf9\u4e8edoris\u7684\u8fde\u63a5\u90e8\u5206\u4ee5\u53caseq_match\u8fdb\u884c\u5c01\u88c5\u548c\u6d4b\u8bd5\uff0c\u5e76\u5bf9\u65e5\u5fd7\u8f93\u51fa\u8fdb\u884c\u8c03\u6574\uff0c\u4e4b\u524d\u7684\u8fd0\u884c\u4e0d\u8d77\u6765\uff0c\u73b0\u5728\u53ef\u4ee5\u8fd0\u884c</li> <li>\u5bf9\u4e8edynamic-cep\u7684\u5c1d\u8bd5\u6682\u65f6\u622a\u6b62\u5e76\u6ce8\u91ca\u6389\uff0c\u6ca1\u6709\u6587\u6863\uff0c\u80fd\u8dd1\u8d77\u6765\u548c\u7b80\u5355\u4f7f\u7528\u5c31\u884c</li> <li>\u5bf9\u4e8egroovy\uff0c\u5f15\u5165\u7684jar\u5305\u5728\u6709\u7684\u65f6\u5019\u4e00\u76f4\u62a5\u9519\uff0c\u6682\u65f6\u6ce8\u91ca\u6389</li> <li>2024-12-12 \u6dfb\u52a0</li> <li>Doris\u529f\u80fd\u6d4b\u8bd5\u5b8c\u6bd5\uff0c\u5355\u6d4b\u901a\u8fc7\uff0c\u5305\u62ec\u4eceKafKa\u5bfc\u5165\u6570\u636e\uff0c\u7269\u5316\u89c6\u56fe\uff0c\u4ee5\u53caJDBC\u8fde\u63a5\u67e5\u8be2\u90e8\u5206</li> <li>\u4e3b\u6d41\u7a0b\u5f15\u5165Doris\u5b8c\u6bd5\uff0c\u8fd8\u672a\u6d4b\u8bd5\u4e3b\u6d41\u7a0b</li> <li>\u8003\u8651\u540e\u7eed\u6dfb\u52a0\u7684ML\u6a21\u5757\uff0c\u8981\u4e0d\u8981\u8003\u8651\u4f7f\u7528Spark\uff0c\u8fd8\u662f\u76f4\u63a5\u4f7f\u7528Flink</li> <li>2024-12-13 \u6dfb\u52a0</li> <li>\u4e3b\u6d41\u7a0b\u5728n\u6b21debug\u5728\u8dd1\u8d77\u6765\u4e86\uff0c\u7531\u4e8e\u6ca1\u6709\u505a\u753b\u50cf\uff0c\u6240\u4ee5\u628a\u65e5\u5fd7\u5206\u6790\u90e8\u5206\u5168\u90e8\u653edoris\uff0c\u76f4\u63a5\u4ecedoris\u67e5\u8be2\uff0c\u8fd9\u91cc\u903b\u8f91\u8fd8\u6709\u95ee\u9898\uff0clistState\u6ca1\u6709\u7ed3\u5408\u5b8c\u6574</li> <li>\u90e8\u5206\u63a5\u53e3\u7b49\u53c2\u6570\uff0c\u4ee5\u53ca\u6570\u636e\u6a21\u62df\u7684\u5206\u5e03\u6709\u95ee\u9898\uff0c\u4e0d\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u9700\u8981\u91cd\u65b0\u8bbe\u8ba1</li> <li>2024-12-14 \u6dfb\u52a0</li> <li>\u91cd\u65b0\u52a0\u56de\u52a8\u6001CEP\u63a5\u53e3\uff0c\u51c6\u5907\u548c\u9879\u76ee\u7ed3\u5408\u3002\u4f46\u662f\u8003\u8651\u4e4b\u540e\uff0c\u5f15\u5165\u7684\u5f00\u6e90\u4ee3\u7801\u6682\u65f6\u4e0d\u4f7f\u7528git\u8fdb\u884c\u7248\u672c\u7ba1\u7406\u4e86</li> <li>2024-12-15 \u6dfb\u52a0</li> <li>\u5927\u81f4\u68b3\u7406\u6e05\u695a\u4e86\u52a8\u6001CEP\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5f00\u59cb\u7814\u7a76\u5177\u4f53\u7684\u7c7b\u52a0\u8f7d\u5b9e\u73b0</li> <li>2024-12-16 \u6dfb\u52a0</li> <li>\u53d1\u73b0\u4e86\u5916\u90e8\u5f15\u5165\u7684\u5f00\u6e90\u5b9e\u73b0\uff0c\u5176\u5b9e\u540c\u6837\u662f\u53c2\u8003\u5b98\u65b9\u90a3\u4e2a\u534a\u6210\u54c1\u5f00\u6e90\u800c\u5b9e\u73b0\u7684,\u5c24\u5176\u662f\u4e0eDB\u4ea4\u4e92\uff0c\u7c7b\u52a0\u8f7d\u7684\u90e8\u5206\u5b8c\u5168\u4e00\u81f4</li> <li>\u6ca1\u6709\u5408\u9002\u7684\u6570\u636e\u6e90\uff0c\u4ee5\u53ca\u5916\u90e8\u5df2\u7ecf\u505a\u597d\u7684\u65e5\u5fd7\u7cfb\u7edf\u3002\u53ea\u80fd\u6682\u65f6\u518d\u628a\u4e4b\u524d\u7684\u903b\u8f91\u5b8c\u5584\u4e00\u4e0b\u3002</li> <li>2024-12-17 \u6dfb\u52a0</li> <li>\u8003\u8651\u4e86\u6240\u6709\u53ef\u80fd\u7684Flink\u591a\u7ebf\u7a0b\u5171\u4eab\u72b6\u6001\u7684\u65b9\u6848\u6765\u7ef4\u62a4\u7269\u5316\u89c6\u56fe\uff0c\u8003\u8651\u81ea\u5b9a\u4e49oper\u6765\u63a5\u4e00\u4e0b\u6570\u636e\u6d41\u83b7\u53d6\u7ed3\u679c\uff0c\u7136\u540e\u548ccoodrinator\u4ea4\u4e92\u7684\u5b9e\u73b0\u96be\u5ea6</li> <li>2024-12-18 \u6dfb\u52a0</li> <li>\u8003\u8651\u6570\u636e\u89c4\u6a21\uff0c\u6700\u540e\u76f4\u63a5\u7528\u4fa7\u5199\u6d41\u628a\u547d\u4e2d\u6570\u636e\u590d\u5236\u4e00\u4efd\uff0c\u76f8\u5f53\u4e8e\u91c7\u6837\u6765\u786e\u5b9a\u4f7f\u7528\u7684\u7ef4\u5ea6\uff0c\u7136\u540e\u5e76\u884c\u505a\u547d\u4e2d\u6570\u636e\u7684sink\u4ee5\u53ca\u7269\u5316\u89c6\u56fe\u7684\u521b\u5efa\u3002</li> <li>2024-12-19 \u6dfb\u52a0</li> <li>\u4e00\u6b65\u4e00\u6b65\uff0c\u53c2\u8003\u591a\u4e2a\u5f00\u6e90\u5b9e\u73b0\uff0c\u7814\u7a76flink\u52a8\u6001cep\u5b9e\u73b0\u5185\u90e8\u539f\u7406\uff0c\u51c6\u5907\u540e\u7eed\u5b9e\u73b0\u4e00\u4e2a\u7cbe\u7b80\u7248\u7684</li> <li>2024-12-20 \u6dfb\u52a0</li> <li>\u8003\u8bd5\u590d\u4e60</li> </ul>"},{"location":"TEST/","title":"\u8003\u8bd5\u7684\u590d\u4e60\u7b14\u8bb0","text":"<p>\u5185\u5bb9\u53ef\u4ee5\u5728\u4fa7\u8fb9\u680f\u9009\u62e9</p>"},{"location":"TEST/blockchain/","title":"blockchain","text":""},{"location":"TEST/blockchain/#_1","title":"\u7b2c\u4e00\u8282 \u901a\u8bc6","text":"<ol> <li>\u533a\u5757\u94fe\u7684\u8bde\u751f\uff1a    2008\u5e74\uff0c\u4e2d\u672c\u806a\uff0c\u767d\u76ae\u4e66\u3002\u89e3\u51b3\u4e86\u7535\u5b50\u8d27\u5e01\u652f\u4ed8\u7684\u4e09\u5927\u95ee\u9898\uff1a\u91cd\u590d\u652f\u4ed8\u95ee\u9898\uff0c\u4f9d\u8d56\u7b2c\u4e09\u65b9\u95ee\u9898\uff0c\u53d1\u884c\u91cf\u63a7\u5236\u95ee\u9898</li> <li>\u533a\u5757\u94fe\u7684\u4e09\u8981\u7d20    \u4e09\u8981\u7d20\uff1a\u4ea4\u6613(\u5bfc\u81f4\u8d26\u672c\u72b6\u6001\u6539\u53d8)\uff0c\u533a\u5757(\u5171\u8bc6)\uff0c\u94fe(\u4e32\u8054)</li> <li>\u4e0e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u533a\u522b\uff1a<ol> <li>\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff1a\u53ef\u7be1\u6539\uff0c\u96be\u9a8c\u8bc1</li> <li>\u533a\u5757\u94fe\uff1a\u96be\u7be1\u6539\uff0c\u6613\u9a8c\u8bc1</li> </ol> </li> <li>\u533a\u5757\u94fe\u5b9a\u4e49\uff1a<ol> <li>\u72ed\u4e49\uff1a\u4e00\u79cd\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u5c06\u6570\u636e\u533a\u5757\u4ee5\u987a\u5e8f\u5f62\u5f0f\u76f8\u8fde\u7684\u94fe\u5f0f\u6570\u636e\u7ed3\u6784\uff0c\u5e76\u4ee5\u5bc6\u7801\u5b66\u5f62\u5f0f\u4fdd\u8bc1\u4e0d\u53ef\u7be1\u6539\u7684\u5206\u5e03\u5f0f\u8d26\u672c\u6280\u672f</li> <li>\u5e7f\u4e49\uff1a\u5229\u7528\u5757\u94fe\u5f0f\u7ed3\u6784\u5b58\u50a8\u6570\u636e\uff0c\u4ee5\u5206\u5e03\u5f0f\u7b97\u6cd5\u6765\u66f4\u65b0\u6570\u636e\uff0c\u4f7f\u7528\u5bc6\u7801\u5b66\u65b9\u5f0f\u4fdd\u8bc1\u5b89\u5168\u7684\uff0c\u5229\u7528\u81ea\u52a8\u5316\u811a\u672c\u7ec4\u6210\u7684\u667a\u80fd\u5408\u7ea6\u6765\u7f16\u7a0b\u7684 \u5206\u5e03\u5f0f\u57fa\u7840\u67b6\u6784\u548c\u8ba1\u7b97\u8303\u5f0f**</li> </ol> </li> </ol>"},{"location":"TEST/blockchain/#_2","title":"\u7b2c\u4e8c\u8282 \u901a\u8bc6","text":"<ol> <li>\u4ef7\u503c\u4f20\u9012\uff1a    \u4e24\u79cd\u4ef7\u503c\u7684\u4f20\u9012\u65b9\u5f0f\uff1a\u4ef7\u503c\u7684\u4f20\u9012\u8981\u6c42\u4fe1\u606f\u7684\u4f20\u9012\u548c\u4ef7\u503c\u7684\u8f6c\u79fb\u540c\u65f6\u8fdb\u884c</li> <li>\u533a\u5757\u94fe\u7684\u672c\u8d28\uff1a\u4e00\u79cd\u53bb\u4e2d\u5fc3\u5316\u7684\u72b6\u6001\u673a\u3002\u6bd4\u7279\u5e01\u548c\u4ee5\u592a\u574a\u90fd\u5c5e\u4e8e\u4ea4\u6613\u9a71\u52a8\u7684\u5206\u5e03\u5f0f\u72b6\u6001\u673a</li> <li>\u533a\u5757\u94fe1.0\u548c2.0\u533a\u522b\uff1a<ol> <li>\u57282.0\u589e\u52a0\u4e86\u5408\u7ea6\u5c42</li> <li>\u5171\u8bc6\u5c42\u589e\u52a0\u4e86\u6743\u76ca\u8bc1\u660e\u7b49\u65b0\u673a\u5236</li> </ol> </li> </ol>"},{"location":"TEST/blockchain/#1","title":"\u7b2c\u4e09\u8282 \u5305\u542b\u4f5c\u4e1a1","text":"<ol> <li> <p>\u6bd4\u7279\u5e01\u7cfb\u7edf\u4eba\u5458\u7ec4\u6210</p> <ol> <li>\u5f00\u53d1\u4eba\u5458\uff1a\u7acb\u6cd5\u6743</li> <li>\u77ff\u5de5\uff1a\u884c\u653f\u6743</li> <li>\u7528\u6237\uff1a\u53f8\u6cd5\u6743</li> <li> <p>\u6bd4\u7279\u5e01\u53d1\u578b\u673a\u5236</p> </li> <li> <p>\u603b\u6570\u91cf\uff1a\u6838\u5b9a\uff0c\u6bcf10\u5206\u949f\u51fa\u4e00\u4e2a\u533a\u5757\uff0c\u6700\u521d\u533a\u5757\u5956\u52b150\u679a\uff0c\u7136\u540e\u6bcf21\u4e07\u4e2a\u533a\u5757\u51cf\u534a(\u56db\u5e74\u51cf\u534a)\uff0c\u52302140\u5e74\u5de6\u53f3\u53d1\u884c\u5b8c\u6bd5</p> </li> <li>\u7b2c\u4e00\u4e2a\u533a\u5757\u88ab\u6210\u4e3a\u521b\u4e16\u533a\u5757\uff0c\u5185\u5bb9\u4e0d\u80fd\u6539\u53d8</li> <li> <p>\u4f5c\u4e1a1</p> </li> <li> <p>\u8ba1\u7b97\u603b\u91cf2100\u4e07\u7684\u7531\u6765</p> </li> <li>\u8ba1\u7b97\u56db\u5e74\u51cf\u534a\u8bf4\u6cd5\u7684\u7531\u6765</li> <li>\u8ba1\u7b97\u603b\u5171\u51cf\u534a\u7684\u6b21\u6570</li> <li>\u8ba1\u7b97\u88ab\u6316\u5b8c\u7684\u5e74\u4efd-2140\u662f\u600e\u4e48\u5f97\u51fa\u6765\u7684</li> <li> <p>\u6bd4\u7279\u5e01\u4fe1\u606f\u6570\u636e\u7684\u67e5\u8be2</p> </li> <li> <p>\u6bd4\u7279\u5e01\u662f\u5b58\u5728\u4e8e\u6574\u4e2ap2p\u7f51\u7edc\u7684\u3002</p> </li> <li>\u6bcf\u4e00\u7b14\u67e5\u8be2\u90fd\u7ecf\u8fc7\u5168\u7f51\u5e7f\u64ad\uff0c\u6240\u6709\u4ea4\u6613\u4eba\u4eba\u53ef\u89c1\uff0c\u516c\u5f00\u900f\u660e\uff0c\u53ef\u4ee5\u67e5\u770b\u4efb\u4f55\u6570\u636e\uff0c\u5e76\u4e14\u4fdd\u8bc1\u4ea4\u6613\u65e0\u6cd5\u4f2a\u9020</li> </ol> </li> </ol>"},{"location":"TEST/blockchain/#_3","title":"\u7b2c\u56db\u8282 \u52a0\u5bc6\u5b66","text":"<ol> <li>\u54c8\u5e0c\u7b97\u6cd5\u7279\u70b9\uff1a<ol> <li>\u6b63\u5411\u5bb9\u6613</li> <li>\u53cd\u5411\u56f0\u96be</li> <li>\u5f02\u5165\u5f02\u51fa</li> <li>\u8f93\u5165\u654f\u611f</li> </ol> </li> <li>\u96ea\u5d29\u6548\u5e94\uff1a\u54c8\u5e0c\u51fd\u6570\u7684\u8f93\u5165\u660e\u6587\uff0c\u6709\u5fae\u7b11\u7684\u5dee\u8ddd\uff0c\u5c31\u4f1a\u5bfc\u81f4\u8f93\u51fa\u7684\u4e25\u91cd\u4e0d\u4e00\u81f4</li> <li>\u6bd4\u7279\u5e01\u7684\u5730\u5740\u751f\u6210\u4f7f\u7528\u4e86\uff1a$SHA256 $ and $   RIPEMD\u2212160$</li> <li>SHA-2<ol> <li>\u5176\u4e2d\u7684224\uff0c256\u662f\u54c8\u5e0c\u6458\u8981\u7684\u957f\u5ea6\uff0c\u8f93\u51fa\u957f\u5ea6\u8d8a\u957f\uff0c\u6297\u653b\u51fb\u80fd\u529b\u8d8a\u5f3a</li> </ol> </li> <li>\u52a0\u5bc6\u89e3\u5bc6\u7b97\u6cd5<ol> <li>\u6838\u5fc3\u903b\u8f91\uff1a\u660e\u6587\u901a\u8fc7\u52a0\u5bc6\u5bc6\u94a5\u53d8\u4e3a\u5bc6\u6587\uff0c\u5bc6\u6587\u901a\u8fc7\u89e3\u5bc6\u5bc6\u94a5\u53d8\u4e3a\u660e\u6587</li> <li>\u5982\u679c\u52a0\u5bc6\u5bc6\u94a5=\u89e3\u5bc6\u5bc6\u94a5\uff0c\u5219\u662f\u5bf9\u79f0\u52a0\u5bc6(\u79c1\u94a5\u52a0\u5bc6)\uff0c\u5426\u5219\u4e3a\u975e\u5bf9\u79f0\u52a0\u5bc6(\u516c\u94a5\u52a0\u5bc6)</li> </ol> </li> <li>\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff1a<ol> <li>\u516c\u5f00\u5bc6\u94a5\uff0c\u53ef\u516c\u5f00</li> <li>\u79c1\u6709\u5bc6\u94a5\uff0c\u79c1\u6709</li> <li>\u751f\u6210\uff1a\u901a\u8fc7\u4e00\u5bf9\u5bc6\u94a5\u5bf9\u5f97\u5230\uff0c\u901a\u8fc7\u79c1\u94a5\u5f97\u5230\u516c\u94a5\uff0c\u4f46\u662f\u53cd\u8fc7\u6765\u4e0d\u884c</li> <li>\u6d41\u7a0b    \u5982\u679cA\u8981\u548cB\u901a\u4fe1\uff0c\u5219\u5728\u6b64\u4e4b\u524d\uff0cB\u5e7f\u64ad\u516c\u94a5\uff0cA\u83b7\u5f97B\u7684\u516c\u94a5\u3002\u7136\u540eA\u7ed9B\u53d1\u6d88\u606f\uff0c\u5219\u4f7f\u7528B\u7684\u516c\u94a5\u52a0\u5bc6\uff0c\u53d1\u9001\u7ed9B\uff0cB\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u89e3\u5bc6\u5373\u53ef\u3002</li> <li>\u4e24\u79cd\u5e94\u7528\uff1a\u5176\u5b9e\u516c\u94a5\u548c\u79c1\u94a5\u90fd\u53ef\u4ee5\u7528\u4e8e\u52a0\u5bc6    \u79c1\u94a5\u52a0\u5bc6\uff0c\u516c\u94a5\u89e3\u5bc6\uff1a\u8eab\u4efd\u8ba4\u8bc1    \u516c\u94a5\u52a0\u5bc6\uff0c\u79c1\u94a5\u89e3\u5bc6\uff1a\u4fe1\u606f\u52a0\u5bc6</li> </ol> </li> <li>\u516c\u94a5\u5bc6\u7801\u7b97\u6cd5\u7684\u5206\u7c7b<ol> <li>\u5927\u6574\u6570\u56e0\u5b50\u5206\u89e3\u95ee\u9898</li> <li>\u79bb\u6563\u5bf9\u79f0\u95ee\u9898</li> </ol> </li> <li>\u692d\u5706\u66f2\u7ebf\uff1a<ol> <li>\u6807\u51c6\u65b9\u7a0b\uff1a\u5176\u4e2d\u7684\u7cfb\u6570a = 0, b = 7\uff0c\u4e5f\u5c31\u662f\\(y = x^3 + 7\\)</li> </ol> </li> <li>\u5e26\u7b7e\u540d\u7684\u901a\u4fe1\u8fc7\u7a0b\uff1a<ol> <li>\u5982\u679cA\u548cB\u9700\u8981\u8fdb\u884c\u4e92\u76f8\u901a\u4fe1\uff0c\u5219\u9996\u5148\u4e92\u6362\u516c\u94a5\u3002\u516c\u94a5\u90fd\u662f\u7528\u81ea\u8eab\u7684\u79c1\u94a5\u4ea7\u751f\u7684\u3002</li> <li>\u6570\u5b57\u7b7e\u540d\u662f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u6839\u636e\u8981\u53d1\u9001\u7684\u6d88\u606f\u5177\u4f53\u53d8\u5316\u800c\u751f\u6210\u7684\u3002</li> <li>\u5982\u679cA\u8981\u7ed9B\u53d1\u6d88\u606f\uff1a<ol> <li>\u52a0\u5bc6\uff1a\u7528B\u7684\u516c\u94a5\u628a\u8981\u53d1\u7684\u6d88\u606f\u52a0\u5bc6</li> <li>\u7b7e\u540d\uff1a\u7528A\u81ea\u5df1\u7684\u79c1\u94a5\u7ed9\u6d88\u606f\u7b7e\u540d</li> </ol> </li> <li>B\u6536\u5230\u6d88\u606f\u4e4b\u540e\uff1a<ol> <li>\u89e3\u5bc6\uff1a\u7528B\u81ea\u5df1\u7684\u79c1\u94a5\u628a\u6d88\u606f\u89e3\u5bc6</li> <li>\u9a8c\u8bc1\uff1a\u7528A\u7684\u516c\u94a5\u8fdb\u884c\u9a8c\u8bc1</li> </ol> </li> </ol> </li> </ol>"},{"location":"TEST/blockchain/#2","title":"\u7b2c\u4e94\u8282 \u533a\u5757\u7ed3\u6784 \u5305\u542b\u4f5c\u4e1a2 \u4e0e \u753b\u56fe\u9898","text":"<ol> <li>\u533a\u5757\u94fe\uff1a\u7531\u5305\u542b\u4ea4\u6613\u4fe1\u606f\u7684\u533a\u5757\u4ece\u540e\u5411\u524d\u6709\u5e8f\u94fe\u63a5\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bcf\u4e2a\u533a\u5757\u90fd\u6307\u5411\u524d\u4e00\u4e2a\u533a\u5757\u3002\u7b2c0\u4e2a\u662f\u521b\u4e16\u533a\u5757\u3002</li> <li>\u533a\u5757\u9ad8\u5ea6\uff1a\u662f\u4ece\u67d0\u4e2a\u533a\u5757\u5230\u7b2c\u4e00\u4e2a\u533a\u5757\u7684\u9ad8\u5ea6\u3002</li> <li>\u533a\u5757\u7684\u6807\u8bc6\u7b26\uff1a<ol> <li>\u533a\u5757\u9ad8\u5ea6\uff1a\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u80fd\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u533a\u5757\uff0c\u56e0\u4e3a\u67d0\u4e2a\u9879\u76ee\u4e2d\u53ef\u80fd\u77ed\u65f6\u95f4\u5185\u6709\u4e24\u4e2a\u540c\u6837\u7684\u9ad8\u5ea6\u7684\u533a\u5757</li> <li>\u533a\u5757\u5934\u7684\u54c8\u5e0c\uff1a\u53ef\u4ee5\u552f\u4e00\u6807\u8bc6\u3002\u5e76\u4e14\u6bcf\u4e2a\u533a\u5757\u5b58\u50a8\u7684\u662f\u7236\u533a\u5757\u7684Hash\u503c\u3002\u5e76\u4e14\u53ea\u6709\u533a\u5757\u5934\u88ab\u7528\u4e8e\u8ba1\u7b97Hash\u3002</li> <li>\u533a\u5757\u5934Hash\u7684\u4f5c\u7528\uff1a<ol> <li>\u53ef\u4ee5\u4e71\u5e8f\u83b7\u5f97\u533a\u5757\uff0c\u7136\u540e\u6309\u7167Hash\u987a\u5e8f\u8fde\u63a5\u3002\u65b9\u4fbf\u5e76\u884c\u4f20\u8f93\u3002</li> <li>\u53ef\u4ee5\u9632\u6b62\u7be1\u6539\uff0c\u56e0\u4e3a\u5982\u679c\u8981\u6539\uff0c\u5c31\u8981\u4e00\u6539\u5230\u5934\u3002\u4f46\u662f\u521b\u4e16\u533a\u5757\u65e0\u6cd5\u4fee\u6539\uff0c\u6240\u4ee5\u65e0\u6cd5\u4fee\u6539\u3002</li> <li>\u5b58\u50a8\uff1a\u4e00\u822c\u533a\u5757\u5b58\u50a8\u5728k-v DB\u4e2d\uff0ck\u662fHash\uff0cv\u662f\u533a\u5757</li> </ol> </li> </ol> </li> <li>\u533a\u5757\u5bb9\u91cf\u5927\u5c0f<ol> <li>\u533a\u5757\u5bb9\u91cf\u5927\u5c0f\u662f1MB</li> <li>\u6bcf\u4e2a\u533a\u5757\u5305\u542b\u7684\u4ea4\u6613\u6570\uff1a\u5047\u8bbe\u4e00\u7b14\u4ea4\u6613\u9700\u8981250\u5b57\u8282\uff0c\u800c\u533a\u5757\u5934\u56fa\u5b9a80\u5b57\u8282\uff0c\u5219\u5927\u7ea6\u53ef\u4ee5\u5305\u542b\\(1024 * 1024 / 250 = 4194\\) \u7b14\u4ea4\u6613</li> </ol> </li> <li>\u533a\u5757\u4ea4\u6613\u9891\u7387<ol> <li>\u6bcf10\u5206\u949f\u4ea7\u751f\u4e00\u4e2a\u533a\u5757\uff0c\u4e00\u4e2a\u533a\u57574194\u7b14\u4ea4\u6613</li> <li>4194 / 600 = 7 tps</li> <li>\u8fd9\u662f\u4e00\u4e2a\u5f88\u4f4e\u7684\u4ea4\u6613\u9891\u7387\uff0c\u5e76\u53d1\u6570\u592a\u4f4e</li> </ol> </li> <li>\u533a\u5757\u53c2\u6570<ol> <li>\u7248\u4e0a\u9ed8\u65f6\u96be\u968f</li> <li>\u7248\u672c\uff1a\u7248\u672c\u53f7</li> <li>\u4e0a\u4e00\u4e2a\u533a\u5757\u7684\u54c8\u5e0c\u503c\uff1a\u6307\u5411\u4e0a\u4e00\u4e2a\u533a\u5757</li> <li>\u9ed8\u514b\u5c14\u6811\u6839\u8282\u70b9\u54c8\u5e0c\uff1a\u6839\u636e\u4e00\u4e2a\u533a\u5757\u4e2d\u6240\u6709\u4ea4\u6613\u7684Merkle tree\u7684root\u7684\u54c8\u5e0c\u503c</li> <li>\u65f6\u95f4\u6233\uff1a\u533a\u5757\u4ea7\u751f\u7684\u65f6\u95f4\u3002\u4f46\u662f\u7236\u533a\u5757\u65f6\u95f4\u6233\u4e0d\u4e00\u5b9a\u4e25\u683c\u5c0f\u4e8e\u5b50\u533a\u5757\u65f6\u95f4\u6233\uff0c\u6709\u4e2a\u5bb9\u5fcd\u8303\u56f4\u3002</li> <li>bits:\u7528\u4e8e\u96be\u5ea6\u503c\u7684\u8bbe\u7f6e\u3002\u76ee\u6807\u54c8\u5e0c\u503c\u7ecf\u8fc7\u538b\u7f29\uff0c\u751f\u6210bits\u5b57\u6bb5\u3002bits\u503c\u8d8a\u5c0f\uff0c\u5219hash\u503c\u8d8a\u5c0f\uff0c\u6316\u77ff\u8d8a\u96be</li> <li>Nonce\uff1a\u4e00\u4e2a32\u4f4d\u968f\u673a\u6570</li> </ol> </li> <li>\u54c8\u5e0c\u503c\u7684\u8ba1\u7b97\uff1a<ol> <li>\u6839\u636e\u533a\u5757\u53c2\u6570\uff0c\u6bcf\u6b21\u53d6\u4e00\u4e2a\u968f\u673a\u6570(\u53ea\u6709\u8fd9\u4e2a\u662f\u53d8\u91cf)\uff0c\u7136\u540e\u5c06\u53c2\u6570\u76f8\u52a0\uff0c\u5bf9\u8fd9\u4e2a\u548c\u6c42\u4e24\u6b21sha256\uff0c\u5219\u6c42\u5f97\u4e00\u4e2a\u54c8\u5e0c\u503c\u3002</li> <li>\u5982\u679c\u81ea\u5df1\u904d\u5386\u968f\u673a\u6570\uff0c\u6c42\u54c8\u5e0c\u503c\uff0c\u6c42\u5f97\u7684\u7ed3\u679c&lt;\u76ee\u6807\u54c8\u5e0c\u503c\uff0c\u5219\u6210\u529f</li> <li>\u8fd9\u4e2a\u884d\u751f\u51fa\u5de5\u4f5c\u91cf\u8bc1\u660e\u673a\u5236\uff1a\u8bc1\u660e\u53ea\u7528\u8ba1\u7b971\u6b21\uff0c\u4f46\u662f\u6253\u5305\u7684\u65f6\u5019\u9700\u8981\u8ba1\u7b97 \\(2 ^ {32}\\) \u6b21</li> </ol> </li> <li>\u5b8c\u6574\u6253\u5305\u8fc7\u7a0b\uff1a<ol> <li>\u628a\u672c\u5730\u5185\u5b58\u7684\u4ea4\u6613\u8bb0\u5f55\u5230\u533a\u5757\u4f53\u4e2d</li> <li>\u628a\u4ea4\u6613\u751f\u6210merkle\u6811\uff0c\u628aroot\u6c42hash\uff0c\u5b58\u5728\u533a\u5757\u5934</li> <li>\u628a\u4e0a\u4e00\u4e2a\u533a\u5757\u7684\u533a\u5757\u5934\u6570\u636e\u901a\u8fc7sha256\u751f\u6210hash\u503c\uff0c\u586b\u5165\u7236Hash</li> <li>\u628a\u65f6\u95f4\u6233\u5b58\u50a8\u65f6\u95f4\u6233\u5b57\u6bb5</li> <li>\u611f\u77e5\u96be\u5ea6\u503c\uff0c\u5b58\u5165bits\u5b57\u6bb5</li> <li>\u751f\u6210\u968f\u673a\u6570\uff0c\u901a\u8fc7\u672c\u533a\u5757\u7684\u8fd9\u4e9bhash\u503c\u8fdb\u884c\u904d\u5386\uff0c\u5982\u679c\u54c8\u5e0c\u503c\u5c0f\u4e8ebits\u5b57\u6bb5\u53cd\u538b\u7f29\u51fa\u6765\u7684hash\uff0c\u5219\u89c6\u4e3a\u6210\u529f</li> </ol> </li> <li>\u5de5\u4f5c\u91cf\u8bc1\u660e\u7684\u672c\u8d28\uff1a<ol> <li>1 cpu 1\u7968</li> <li>\u6700\u957f\u94fe\u4e3a\u4e3b</li> </ol> </li> <li>\u9ed8\u514b\u5c14\u6811\u7684\u7ed8\u5236<ol> <li>\u552f\u4e00\u4e00\u4e2a\u7ed8\u56fe\u9898\uff0c\u5fc5\u8003\u3002</li> <li>\u81ea\u5e95\u5411\u4e0a\u8fdb\u884c\u7ed8\u5236</li> </ol> </li> <li>\u9ed8\u514b\u5c14\u6811\u4f5c\u7528\uff1a<ol> <li>\u4ee3\u66ff\u54c8\u5e0c\u5217\u8868\uff0c\u7ec4\u6210\u4e00\u9897\u9ed8\u514b\u5c14\u6811\uff0c\u65b9\u4fbfp2p\u6d4b\u8bd5</li> <li>\u96b6\u5c5e\u8bc1\u660e</li> </ol> </li> <li>\u9ed8\u514b\u5c14\u6811\u8ba1\u7b97\uff1a\u67d0\u4e2a\u6bd4\u7279\u5e0164\u7b14\u4ea4\u6613\uff0c\u91c7\u7528\u9ed8\u514b\u5c14\u6811\u8fdb\u884c\u5b58\u50a8\uff0c\u5219\u8f7b\u8282\u70b9\u8fdb\u884c\u9a8c\u8bc1\u7684\u65f6\u5019\uff0c\u9664\u4e86\u672c\u8eab\u7684\u4ea4\u6613\u54c8\u5e0c\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u8fd4\u56de\u591a\u5c11\u54c8\u5e0c\u503c\uff1f\u5f53\u7ed3\u679c\u662f32\u6216\u800530\u7b14\u4ea4\u6613\u7684\u65f6\u5019\uff0c\u53c8\u4f1a\u662f\u591a\u5c11\u6761</li> <li>\u6bd4\u7279\u5e01\u5bc6\u7801\u5b66\u7b97\u6cd5\uff1a<ol> <li>\u54c8\u5e0c\u7b97\u6cd5\uff1a<ol> <li>SHA-256</li> <li>RIPEMD-160\uff1a\u7528\u4e8e\u751f\u6210\u6bd4\u7279\u5e01\u5730\u5740</li> </ol> </li> <li>ECDSA \u975e\u5bf9\u79f0\u52a0\u5bc6\u3001\u7b7e\u540d\u7b97\u6cd5</li> <li>\u4e5f\u6709\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5</li> </ol> </li> <li>\u53cc\u82b1\uff1a\u503c\u653b\u51fb\u8005\u51e0\u4e4e\u540c\u65f6\u5c06\u540c\u4e00\u7b14\u94b1\u7528\u4f5c\u4e0d\u540c\u4ea4\u6613\u6216\u8005\u83b7\u5f97\u4e86\u7269\u54c1\u6700\u7ec8\u5374\u6ca1\u638f\u94b1</li> <li>UTXO\u6a21\u578b\u548cAccount\u6a21\u578b<ol> <li>\u8d26\u6237\uff1a\u662f\u533a\u5757\u94fe\u7cfb\u7edf\u4e2d\u7684\u6570\u5b57\u8d27\u5e01\u7684\u6240\u6709\u8005\uff0c\u79f0\u4e3a\u5730\u5740</li> <li>\u8d26\u6237\u4e4b\u95f4\u7684\u8d27\u5e01\u4ea4\u6613\u901a\u8fc7\u4ea4\u6613\u6765\u5b9e\u73b0\u8f6c\u8d26</li> <li>\u6bd4\u7279\u5e01\u662fUTXO\u6a21\u578b\uff0c\u4ee5\u592a\u574a\u662fAccount\u6a21\u578b</li> </ol> </li> <li>\u6bd4\u7279\u5e01\u7684UTXO\u6a21\u578b\uff1a<ol> <li>\u6bd4\u7279\u5e01\u7684\u4ea4\u6613\u5206\u4e3a\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u4ea4\u6613\u7684\u8f93\u5165\u548c\u8f93\u51fa\u90fd\u662f\u5355\u4e00\u7684\u6574\u4f53\uff0c\u4e0d\u53ef\u5212\u5206\u3002</li> <li>\u5b9a\u4e49\uff1a\u672a\u82b1\u8d39\u7684\u4ea4\u6613\u8f93\u51fa</li> </ol> </li> </ol>"},{"location":"TEST/blockchain/#_4","title":"\u7b2c\u516d\u8282 \u5171\u8bc6\u7b97\u6cd5","text":"<ol> <li>\u5171\u8bc6\u7b97\u6cd5<ol> <li>\u5b9a\u4e49\uff1a\u9488\u5bf9\u67d0\u4e00\u4e2a\u63d0\u6848\uff0c\u8fbe\u6210\u4e00\u81f4\u610f\u89c1\u7684\u673a\u5236\uff0c\u5c31\u662f\u5171\u8bc6\u7b97\u6cd5</li> <li>\u7b97\u6cd5\u548c\u673a\u5236\u7684\u533a\u522b\uff1a<ol> <li>\u7b97\u6cd5\uff1a\u987a\u5e8f\u654f\u611f</li> <li>\u673a\u5236\uff1a\u987a\u5e8f\u4e0d\u654f\u611f</li> </ol> </li> <li>\u533a\u5757\u94fe\u5171\u8bc6\u7b97\u6cd5\uff1a\u4f7f\u5f97\u533a\u5757\u94fe\u4e8b\u52a1\u8fbe\u6210\u5206\u5e03\u5f0f\u5171\u8bc6(\u5404\u4e2a\u8282\u70b9\u5bf9\u4ea4\u6613\u7ed3\u679c\u8fbe\u6210\u4e00\u81f4)\u7684\u7b97\u6cd5</li> </ol> </li> <li>\u5206\u5e03\u5f0f\u7cfb\u7edf<ol> <li>\u5b9a\u4e49\uff1a\u4e00\u4e2a\u7ec4\u4ef6\u5728\u4e0d\u540c\u7684\u8054\u7f51\u7684\u8ba1\u7b97\u673a\u4e0a\uff0c\u7ec4\u4ef6\u4e4b\u95f4\u901a\u8fc7\u4f20\u9012\u6d88\u606f\u8fdb\u884c\u901a\u4fe1\u548c\u534f\u8c03\uff0c\u5171\u540c\u5b8c\u6210\u4e00\u4e2a\u4efb\u52a1\u7684\u7cfb\u7edf</li> <li>\u4e0d\u53ef\u9760\u60c5\u51b5\uff1a<ol> <li>\u8282\u70b9\u4e0d\u53ef\u9760</li> <li>\u7f51\u7edc\u4e0d\u53ef\u9760</li> </ol> </li> </ol> </li> <li>\u4e00\u81f4\u6027<ol> <li>\u6ce8\u610f\u70b9\uff1a\u4e00\u81f4\u6027\u4e0d\u7b49\u4e8e\u5171\u8bc6\u7b97\u6cd5</li> <li>\u5206\u5e03\u5f0f\u7cfb\u7edf\u5e94\u8be5\u6ee1\u8db3\u7684\u8981\u6c42\uff1a\u6d3b\u6027\uff0c\u5b89\u5168\u6027\uff0c\u6b63\u786e\u6027</li> <li>\u7c7b\u522b\uff1a<ol> <li>\u5f3a\u4e00\u81f4\u6027</li> <li>\u987a\u5e8f\u4e00\u81f4\u6027</li> <li>\u5f31\u4e00\u81f4\u6027</li> </ol> </li> </ol> </li> <li>\u4e0d\u540c\u94fe\u7684\u5171\u8bc6\u7b97\u6cd5<ol> <li>\u516c\u6709\u94fe<ol> <li>pow</li> <li>pos</li> <li>dpos</li> <li>ripple</li> </ol> </li> <li>\u8054\u76df\u94fe<ol> <li>pbft</li> <li>dbft</li> </ol> </li> <li>\u79c1\u6709\u94fe<ol> <li>paxos</li> <li>raft</li> </ol> </li> </ol> </li> <li>FLP\u5b9a\u7406<ol> <li>\u5728\u4e0d\u80fd\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u5916\u90e8\u7684\u540c\u6b65\u65f6\u949f\u7684\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b8c\u5168\u5f02\u6b65\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u800c\u8a00\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u8282\u70b9\u6545\u969c\uff0c\u5c31\u4f1a\u5bfc\u81f4\u5168\u5c40\u5171\u8bc6\u65e0\u6cd5\u8fbe\u6210</li> <li>\u5b9a\u7406\u5185\u5bb9\uff1a\u5373\u4f7f\u5728\u7f51\u7edc\u901a\u4fe1\u53ef\u9760\u7684\u60c5\u51b5\u4e0b\uff0c\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u5171\u8bc6\u95ee\u9898\u6ca1\u6709\u901a\u7528\u7684\u89e3\u6cd5</li> </ol> </li> <li>CAP\u5b9a\u7406<ol> <li>\u5185\u5bb9\uff1a\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u4e0d\u53ef\u80fd\u540c\u65f6\u6ee1\u8db3\u4e09\u4e2a\u91cd\u8981\u7684\u5c5e\u6027\uff1a<ol> <li>\u4e00\u81f4\u6027C:\u8fd9\u91cc\u6307\u5f3a\u4e00\u81f4\u6027</li> <li>\u53ef\u7528\u6027A\uff1a\u7528\u6237\u7684\u57fa\u672c\u8bf7\u6c42\u53ef\u4ee5\u88ab\u6ee1\u8db3</li> <li>\u5206\u533a\u5bb9\u9519\u6027P\uff1a\u7cfb\u7edf\u7684\u5206\u533a\u6545\u969c\u5bfc\u81f4\u5ef6\u8fdf\u7b49\u60c5\u51b5\u4e0b\uff0c\u7cfb\u7edf\u4ecd\u7136\u53ef\u4ee5\u5de5\u4f5c</li> </ol> </li> <li>\u4e0d\u540c\u7684\u7ec4\u5408<ol> <li>CA\uff1a\u51e0\u4e4e\u4e0d\u5b58\u5728\uff0c\u56e0\u4e3a\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u5fc5\u987b\u8981\u6ee1\u8db3P</li> <li>CP:   \u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\u9700\u8981\u4fdd\u8bc1\u4e00\u81f4\u6027</li> <li>AP\uff1a12306\uff0c\u6dd8\u5b9d\uff0c\u6781\u7aef\u60c5\u51b5\u4e0b\u9700\u8981\u4fdd\u8bc1\u670d\u52a1\u53ef\u7528</li> </ol> </li> <li>POW \u662fAP\u6a21\u5f0f\uff0c\u727a\u7272\u4e86\u5f3a\u4e00\u81f4\u6027\u3002\u662f\u4e00\u79cd\u6982\u7387\u6027\u7684\u62dc\u5360\u5ead\u534f\u8bae</li> <li>\u6bd4\u7279\u5e01\u662fAP\u6a21\u5f0f\uff0c\u56e0\u6b64\u4ed6\u7684\u5171\u8bc6\u95ee\u9898\u662f\u4e2a\u6700\u7ec8\u4e00\u81f4\u6027\u7684\u95ee\u9898\u3002\u540c\u65f6\u4e2d\u672c\u806a\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u79f0\u4e3a\u975e\u786e\u5b9a\u6027\u7684\u6982\u7387\u4e00\u81f4\u6027\u7684\u95ee\u9898</li> <li>\u516c\u6709\u94fe\u53ef\u4ee5\u6700\u7ec8\u4e00\u81f4\u6027\uff0c\u800c\u4e00\u822c\u79c1\u6709\u94fe\u548c\u8054\u76df\u94fe\u90fd\u662f\u5f3a\u4e00\u81f4\u6027\u7b97\u6cd5</li> </ol> </li> <li>\u62dc\u5360\u5ead\u5c06\u519b\u95ee\u9898<ol> <li>\u80cc\u666f\uff1a\u5c06\u519b\u4f5c\u6218\u65f6\u7684\u4fe1\u4f7f\uff0c\u751a\u81f3\u5c06\u519b\u90fd\u53ef\u80fd\u53db\u53d8\uff0c\u95ee\u5c06\u519b\u4ec0\u4e48\u60c5\u51b5\u4e0b\u80fd\u4fdd\u8bc1\u5bf9\u4f5c\u6218\u65b9\u6848\u8fbe\u6210\u5171\u8bc6</li> <li>\u7ed3\u8bba\uff1a\u5982\u679c\u53db\u53d8\u6570\\(F &lt; 1/3N\\)\uff0c\u5219\u624d\u6709\u4fdd\u8bc1\u3002\u5426\u5219\u65e0\u89e3\u3002\u4e09\u4e2a\u4eba\u4e2d\u6709\u4e00\u4e2a\u90fd\u4e0d\u884c</li> <li> <p>\u53d1\u5c55\uff1a</p> <ol> <li>BFT\uff1a\\(O(n^F)\\)</li> <li> <p>PBFT \\(O(N^2)\\)\uff0c</p> <ol> <li>\u5b9a\u4e49\uff1a\u5b9e\u7528\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\uff0c\u662fpaxos\u7b97\u6cd5\u7684\u53d8\u79cd\u3002\u672c\u8d28\uff1a\u7ed9\u5168\u7f51\u6d88\u606f\u7684\u987a\u5e8f\u8fdb\u884c\u5171\u8bc6</li> <li>\u8fc7\u7a0b\uff1arequest\uff0cpre-prepare\uff0cprepare\uff0ccommit\uff0cresponse</li> <li>\u7f3a\u70b9\uff1a<ol> <li>\u8282\u70b9\u4e0a\u9650\uff1a100\u4e2a</li> <li>\u4e0d\u80fd\u9632\u6b62\u5973\u5deb\u653b\u51fb\uff1a\u4e00\u4e2a\u4eba\u6076\u610f\u4f2a\u9020\u591a\u4e2a\u7528\u6237\u8fdb\u884c\u5171\u8bc6\u8fc7\u7a0b</li> </ol> </li> <li>\u62dc\u5360\u5ead\u5bb9\u9519\u7b97\u6cd5\u5206\u7c7b\uff1a</li> </ol> </li> <li> <p>\u786e\u5b9a\u6027\u7b97\u6cd5\uff1a\u4e00\u65e6\u5bf9\u67d0\u4e2a\u7ed3\u679c\u8fbe\u6210\u5171\u8bc6\uff0c\u5c31\u4e0d\u80fd\u66f4\u6539</p> </li> <li>\u6982\u7387\u6027\u7b97\u6cd5\uff1a\u5171\u8bc6\u7ed3\u679c\u6682\u65f6\u4e0d\u7a33\u5b9a\uff0c\u968f\u7740\u65f6\u95f4\u63a8\u79fb\u88ab\u63a8\u7ffb\u7684\u53ef\u80fd\u6027\u8d8a\u6765\u8d8a\u5c0f\uff0c\u6700\u540e\u79f0\u4e3a\u786e\u5b9a\u6027\u5171\u8bc6</li> <li>POW<ol> <li>\u5b9a\u4e49\uff1a\u6743\u76ca\u8bc1\u660e\u673a\u5236\uff0c\u4e5f\u79f0\u4e3a\u80a1\u4efd\u8bc1\u660e\u673a\u5236</li> <li>\u5b89\u5168\u6027\uff1a\u6765\u6e90\u4e8e\u62b5\u62bc\u7684\u7ecf\u6d4e\u4ef7\u503c</li> <li>\u5b9e\u73b0\u624b\u6bb5\uff1a\u5e01\u9f84 = \u6301\u6709\u6570\u91cf + \u6301\u6709\u65f6\u95f4</li> <li>\u53c2\u4e0e\u89d2\u8272\uff1a\u9a8c\u8bc1\u8005</li> <li>\u4f18\u70b9\uff1a\u4eba\u4eba\u53ef\u6316\u77ff\uff0c\u8282\u80fd\u73af\u4fdd\uff0c\u6027\u80fd\u9ad8\uff0c\u7f51\u7edc\u66f4\u5b89\u5168</li> </ol> </li> <li>\u4e0d\u53ef\u80fd\u4e09\u89d2(\u4e0d\u662f\u5b9a\u7406)\uff1a<ol> <li>\u53bb\u4e2d\u5fc3\u5316\uff0c\u5b89\u5168\uff0c\u6548\u7387\uff1a\u4e0d\u53ef\u80fd\u540c\u65f6\u90fd\u6ee1\u8db3</li> </ol> </li> <li>\u6bd4\u7279\u5e01\u8282\u70b9\u529f\u80fd\uff1a<ol> <li>\u94b1\u5305\u529f\u80fd</li> <li>\u5b8c\u6574\u533a\u5757\u94fe</li> <li>\u6316\u77ff\u529f\u80fd</li> <li>\u8def\u7531\u529f\u80fd(\u552f\u4e00\u5fc5\u987b)</li> </ol> </li> <li>\u6bd4\u7279\u5e01\u8282\u70b9\u5206\u7c7b<ol> <li>\u666e\u901a\u5168\u8282\u70b9\uff1a\u5b8c\u6574\u4e14\u6700\u65b0\u7684\u8282\u70b9\u6570\u636e</li> <li>bitcoin core\u5168\u8282\u70b9\uff1a\u529f\u80fd\u6700\u4e3a\u5168\u9762\u7684\u8282\u70b9</li> <li>SPV\u94b1\u5305\u8282\u70b9\uff1a\u8f7b\u8282\u70b9\uff0c\u53ea\u7528\u652f\u4ed8\u9a8c\u8bc1\uff0c\u6ce8\u610f\u4e0d\u662f\u4ea4\u6613\u9a8c\u8bc1\uff0c\u5e76\u4e14\u53ea\u7528\u4e0b\u8f7d\u533a\u5757\u5934</li> <li>\u72ec\u7acb\u6316\u77ff\u8282\u70b9</li> </ol> </li> <li>\u6bd4\u7279\u5e01\u8f7b\u8282\u70b9\u4e00\u5e74\u65b0\u589e\u7684\u6570\u636e\u91cf\uff1f<ol> <li>\u5047\u8bbe\u533a\u5757\u593480\u5b57\u8282</li> <li>10\u5206\u949f\u4e00\u5757</li> <li>\u4e00\u5e74\u65b0\u589e\u7684\u6570\u636e\u91cf\uff1a\\(80 * 6 * 24 *365 = 4MB\\)</li> </ol> </li> </ol> </li> </ol> </li> </ol>"},{"location":"TEST/blockchain/#_5","title":"\u7b2c\u4e03\u8282 \u533a\u5757\u94fe\u5e94\u7528","text":"<ol> <li>\u5e94\u7528\u7684\u573a\u666f<ol> <li>\u91d1\u878d\uff1a\u4ea4\u6613\uff0c\u652f\u4ed8</li> <li>\u516c\u76ca\uff1a\u516c\u76ca\u6350\u8d60</li> <li>\u6587\u5a31\uff1a\u6570\u5b57\u7248\u6743</li> <li>\u7269\u8054\u7f51\uff1a\u7269\u54c1\u6eaf\u6e90\uff0c\u9632\u4f2a</li> </ol> </li> </ol>"},{"location":"TEST/javaweb/","title":"javaweb","text":""},{"location":"TEST/javaweb/#_1","title":"\u8003\u8bd5\u8303\u56f4","text":"<p>1-6\u7ae0\uff0c10\u7ae0</p>"},{"location":"TEST/javaweb/#1","title":"\u7b2c1\u7ae0 \u7f51\u9875\u5f00\u53d1\u57fa\u7840","text":""},{"location":"TEST/javaweb/#html","title":"HTML","text":"<p>\u4f8b\u5b50\uff1a</p> ApacheConf<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;here for title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li>\u5b9a\u4e49\uff1a\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00</li> <li>\u540e\u7f00\u540d: html\u6216\u8005htm</li> <li>\u5143\u7d20\uff1a</li> <li>doctype: \u4e00\u6761\u6307\u4ee4\uff0c\u7528\u4e8e\u5411\u6d4f\u89c8\u5668\u8bf4\u660ehtml\u6587\u4ef6\u4f7f\u7528\u54ea\u79cdHTML\u89c4\u8303</li> <li>html\u6807\u7b7e: \u6839\u6807\u7b7e</li> <li>head\u6807\u7b7e: \u5934\u90e8\u6807\u7b7e</li> <li>body\u6807\u7b7e\uff1a\u4e3b\u4f53\u6807\u7b7e</li> <li>\u6807\u7b7e\u7c7b\u578b</li> <li>\u5355\u6807\u7b7e\uff1a&lt;\u6807\u7b7e\u540d /&gt;\u3002 \u4e0d\u9700\u8981\u9009\u62e9\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u4f7f\u7528\u5355\u6807\u7b7e\u8fdb\u884c\u63cf\u8ff0</li> <li>\u53cc\u6807\u7b7e\uff1a &lt;\u6807\u7b7e\u540d&gt; &lt;/ \u6807\u7b7e\u540d&gt;</li> <li>\u6ce8\u91ca\u6807\u7b7e </li> <li>\u5e38\u89c1\u7684HTML\u6807\u7b7e</li> <li>\u6bb5\u843d\uff0c\u884c\u5185\uff0c\u6362\u884c\u6807\u7b7e</li> <li>\u6587\u672c\u6837\u5f0f\u6807\u7b7e</li> <li>\u8868\u683c\u6807\u7b7e</li> <li> <p>\u8868\u5355\u6807\u7b7e\uff1a\u7f51\u9875\u4e0a\u5141\u8bb8\u8f93\u5165\u4fe1\u606f\u7684\u533a\u57df</p> <ol> <li>\u8868\u5355\u57df\uff1aaction=url, method=post/get,name=\"xxx\"</li> <li>\u8868\u5355:<ol> <li>\u4f7f\u7528input\u5355\u6807\u7b7e</li> <li>\u6587\u672c\uff1atext; \u5355\u9009ratio; \u591a\u9009\uff1acheckbox; \u6587\u4ef6\u4e0a\u4f20\uff1afile; \u63d0\u4ea4: submit\uff1b\u91cd\u7f6e\uff1a reset</li> </ol> </li> <li>\u591a\u6587\u672c\u6807\u7b7e\uff1atextarea cols= rows=</li> <li> <p>\u5217\u8868\u6807\u7b7e\uff1a</p> </li> <li> <p>\u65e0\u5e8f\u5217\u8868\uff1aul + li</p> </li> <li>\u6709\u5e8f\u5217\u8868\uff1aol + li</li> <li>\u8d85\u94fe\u63a5\u6807\u7b7e</li> <li>\u56fe\u50cf\u6807\u7b7e</li> </ol> </li> </ol>"},{"location":"TEST/javaweb/#css","title":"CSS","text":"<ol> <li>\u5b9a\u4e49\uff1a\u5c42\u53e0\u6837\u5f0f\u8868</li> <li>\u5f15\u7528\u65b9\u5f0f\uff1a</li> <li>\u884c\u5185\u5f0f(\u5185\u8054\u5f0f)\uff1a\u6807\u7b7e + style</li> <li>\u5185\u5d4c\u5f0f\uff1a\u5c06css\u4ee3\u7801\u96c6\u4e2d\u5199\u5728head\u90e8\u5206\uff0c\u5e76\u7528style\u6807\u7b7e\u5b9a\u4e49</li> <li>\u5916\u94fe\u5f0f\uff1a\u5e38\u7528\uff0c\u5c06css\u6587\u4ef6\u7684\u94fe\u63a5\u6807\u7b7e(link)\u5199\u5728head\u6807\u7b7e\u4e2d\u3002\u9700\u8981\u5b9a\u4e49\uff1ahref\uff0ctype\uff0crelation</li> <li>\u5bfc\u5165\u5f0f\uff1a\u4e86\u89e3\u5373\u53ef</li> <li>\u9009\u62e9\u5668\u548c\u5e38\u7528\u5c5e\u6027</li> <li>\u7c7b\u578b\uff1a\u8303\u56f4\u4ece\u5927\u5230\u5c0f<ol> <li>\u901a\u914d\u7b26\u9009\u62e9\u5668\uff1a\u80fd\u5339\u914d\u6240\u6709\u5143\u7d20</li> <li>\u6807\u7b7e\u9009\u62e9\u5668\uff1a\u901a\u8fc7\u6807\u7b7e\u540d\u79f0\u6765\u9009\u62e9</li> <li>\u7c7b\u9009\u62e9\u5668\uff1a\u901a\u8fc7\u6807\u7b7e\u7684class\u5c5e\u6027\u9009\u62e9\uff0c\u53ef\u4ee5\u4e0d\u552f\u4e00</li> <li>id\u9009\u62e9\u5668\uff1a\u552f\u4e00\u6807\u8bc6\u67d0\u4e2a\u6807\u7b7e</li> </ol> </li> </ol>"},{"location":"TEST/javaweb/#js","title":"JS","text":"<ol> <li>\u5b9a\u4e49\uff1a\u4e00\u79cd\u811a\u672c\u8bed\u8a00\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u7f16\u8bd1\uff0c\u76f4\u63a5\u5d4c\u5165HTML\u9875\u9762\u4e2d\uff0c\u628a\u9759\u6001\u7684\u9875\u9762\u8f6c\u6362\u4e3a\u548c\u7528\u6237\u4ea4\u4e92\u7684\u52a8\u6001\u6548\u679c\u9875\u9762</li> <li>\u7ec4\u6210</li> <li>ES\uff1a\u8bed\u6cd5\u6807\u51c6</li> <li>DOM\uff1a\u6587\u6863\u5bf9\u8c61\u6a21\u578b\uff0c\u53ef\u5bf9\u9875\u9762\u7684\u5404\u79cd\u5143\u7d20\u4ea4\u4e92</li> <li>BOM\uff1a\u6d4f\u89c8\u5668\u5bf9\u8c61\u6a21\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7BOM\u5bf9\u6d4f\u89c8\u5668\u8fdb\u884c\u4ea4\u4e92</li> <li>\u5f15\u5165\u65b9\u5f0f</li> <li>\u884c\u5185\u5f0f\uff1a\u6bd4\u5982\u5728input\u63a7\u4ef6\u4e2d\u5f15\u5165</li> <li>\u5185\u5d4c\u5f0f\uff1a\u901a\u8fc7script\u6807\u7b7e</li> <li>\u5916\u94fe\u5f0f\uff1a\u540c\u6837\u901a\u8fc7script\u6807\u7b7e + src \u6807\u7b7e\u90e8\u5206\u5f15\u5165JS\u6587\u4ef6</li> <li>\u6570\u636e\u7c7b\u578b</li> <li>Number</li> <li>String</li> <li>Boolean</li> <li>Object</li> <li>Null</li> <li>Undefined\uff1a\u6307\u53d8\u91cf\u88ab\u521b\u5efa\uff0c\u4f46\u662f\u6ca1\u6709\u88ab\u8d4b\u503c\u7684\u65f6\u5019\u6240\u62e5\u6709\u7684\u503c</li> <li>\u53d8\u91cf\uff1a\u7528var\u58f0\u660e</li> <li>DOM</li> <li>\u4f8b\u5982\u4e00\u4e2aHTML\u6587\u4ef6\u53ef\u4ee5\u505a\u51fa\u4e00\u4e2aDOM\u6811(P22)</li> <li>head\u548cbody\u662f\u4e24\u4e2a\u5206\u652f</li> <li>BOM</li> <li>\u7ec4\u6210<ol> <li>Document</li> <li>Location</li> <li>Navigator</li> <li>Screen</li> <li>History</li> </ol> </li> <li>\u6838\u5fc3\u662fWindow\uff0c\u5176\u4ed6\u662fWindow\u7684\u5b50\u5bf9\u8c61</li> </ol>"},{"location":"TEST/javaweb/#java-web","title":"\u7b2c\u4e8c\u7ae0 JAVA WEB\u6982\u8ff0","text":""},{"location":"TEST/javaweb/#xml","title":"XML","text":"<ol> <li>\u5b9a\u4e49\uff1a\u53ef\u6269\u5c55\u6807\u8bb0\u8bed\u8a00</li> <li>\u4e0eHTML\u533a\u522b</li> <li>HTML\u7528\u4e8e\u663e\u793a\u6570\u636e\uff0cXML\u7528\u4e8e\u4f20\u8f93\u6570\u636e</li> <li>HTML\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0cXML\u533a\u5206\u5927\u5c0f\u5199</li> <li>XML\u4e0d\u4f1a\u8fc7\u6ee4\u7a7a\u683c</li> <li>XML\u53ef\u4ee5\u6269\u5c55\u6807\u7b7e</li> <li>\u8bed\u6cd5</li> <li>\u6587\u6863\u58f0\u660e\uff1aversion,encoding,standlone,\u5176\u4e2dversion\u662f\u5f3a\u5236\u6027\u58f0\u660e\u3002standlone\u9ed8\u8ba4\u503c\u662fno</li> <li>\u5143\u7d20\u5b9a\u4e49\uff1a\u4f7f\u7528\u6807\u7b7e\u5b9a\u4e49\uff0c\u6811\u5f62\u7ed3\u6784\u3002\u53ea\u6709\u4e00\u4e2a\u9876\u5c42\u5143\u7d20\uff0c\u4e3a\u6839\u5143\u7d20\u6216\u8005\u6587\u6863\u5143\u7d20</li> <li>\u5c5e\u6027\u5b9a\u4e49\uff1a\u540c\u6837\u4f7f\u7528\u6807\u7b7e\u5b9a\u4e49</li> <li>\u6ce8\u91ca</li> <li>DTD\u7ea6\u675f</li> <li>\u5b9a\u4e49\uff1a\u5bf9XML\u8bed\u6cd5\u8fdb\u884c\u7ea6\u675f</li> <li>\u5185\u5bb9\uff1a\u53ef\u4ee5\u5305\u542b\u5143\u7d20\u7684\u5b9a\u4e49\uff0c\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5143\u7d20\u5c5e\u6027\u7684\u5b9a\u4e49\uff0c\u4ee5\u53ca\u5b9e\u4f53\u7b26\u53f7\u4e4b\u95f4\u7684\u5173\u7cfb</li> <li>\u5f15\u5165DTD\u7ea6\u675f\uff1a<ol> <li>SYSTEM</li> <li>PUBLIC \u516c\u53f8 + \u7248\u672c + \u8bed\u8a00</li> </ol> </li> <li>\u8bed\u6cd5<ol> <li> </li> <li>\u5b50\u5143\u7d20</li> <li>\u6df7\u5408\u5185\u5bb9\uff1a\u5305\u542b\u5b50\u5143\u7d20\uff0c\u4e5f\u5305\u542b\u5b57\u7b26\u4e32</li> <li>EMPTY\uff1a\u7a7a\u5143\u7d20</li> <li>ANY</li> </ol> </li> <li>\u5c5e\u6027\u5b9a\u4e49<ol> <li>\u8fd9\u91cc\u662f\u4e3a\u5143\u7d20\u5b9a\u4e49\u5c5e\u6027</li> <li>\u8bbe\u7f6e\u8bf4\u660e<ol> <li>REQUIRED:\u5fc5\u987b\u7684</li> <li>IMPLIED:\u53ef\u4ee5\u5305\u542b\u53ef\u4ee51\u4e0d\u5305\u542b</li> <li>FIXED\uff1a\u56fa\u5b9a\u7684\u9ed8\u8ba4\u503c</li> <li>\u9ed8\u8ba4\u503c</li> </ol> </li> <li>\u5c5e\u6027\u7c7b\u578b<ol> <li>CDATA\uff1a\u548c#PCDATA\u4e00\u6837\uff0c\u90fd\u662f\u6587\u672c\u5b57\u7b26\u4e32</li> <li>Enumbered:\u679a\u4e3e\u7c7b\u578b</li> <li>ID\uff1a\u552f\u4e00\u6807\u8bc6\u67d0\u4e2a\u5143\u7d20</li> <li>IDREF \u548cIDREFS\uff1a\u5143\u7d20 + \u8054\u7cfb</li> </ol> </li> </ol> </li> <li>schema\u7ea6\u675f<ol> <li>\u540e\u7f00\uff1axsd\u7ea6\u675f</li> <li>\u540d\u79f0\u7a7a\u95f4\uff1a\u5143\u7d20\u540d xmlns\uff1aprefixname=\"URL\"</li> <li>\u4f5c\u7528\uff1a\u5c06\u67d0\u4e00\u4e2a\u524d\u7f00\u7ed1\u5b9a\u5230\u67d0\u4e2aURL\u4e0a\uff0c\u7136\u540e\u5c06\u8be5\u524d\u7f00\u6dfb\u52a0\u5230\u5143\u7d20\u540d\u79f0\u524d\u9762\uff0c\u8bf4\u660e\u8be5\u5143\u7d20\u5c5e\u4e8e\u54ea\u4e2a\u6a21\u5f0f\u6587\u6863</li> </ol> </li> </ol>"},{"location":"TEST/javaweb/#pcdata","title":"PCDATA\uff1a\u8868\u793a\u5143\u7d20\u4f7f\u666e\u901a\u6587\u672c\u5b57\u7b26\u4e32","text":""},{"location":"TEST/javaweb/#_2","title":"\u7a0b\u5e8f\u5f00\u53d1\u4f53\u7cfb\u7ed3\u6784","text":"<ol> <li>\u4f53\u7cfb\u7ed3\u6784</li> <li>C/S\u6a21\u5f0f\uff1a\u76f4\u63a5\u5ba2\u6237\u7aef\u5230\u6570\u636e\u5e93</li> <li>B/S\u6a21\u5f0f\uff1a\u6d4f\u89c8\u5668 +WEB\u6d4f\u89c8\u5668 + \u6570\u636e\u5e93\u670d\u52a1\u5668\u3002\u5168\u9762\u53d6\u4ee3\u4e86C/S\u6a21\u5f0f</li> <li>Tomcat</li> <li>\u5b89\u88c5\uff1a\u5728\u53e6\u4e00\u4e2aidea\u4e2d\u8fdb\u884c\u7684\u521b\u5efa</li> </ol>"},{"location":"TEST/javaweb/#http","title":"\u7b2c\u4e09\u7ae0 HTTP\u534f\u8bae","text":""},{"location":"TEST/javaweb/#_3","title":"\u5185\u5bb9","text":"<ol> <li>\u5b9a\u4e49\uff1a\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae</li> <li>\u7279\u70b9</li> <li>\u652f\u6301C/S\u6a21\u5f0f</li> <li>\u7b80\u5355\u5feb\u901f</li> <li>\u7075\u6d3b</li> <li>\u65e0\u72b6\u6001</li> <li>HTTP1.1\u5bf9HTTP1.0\u7684\u6539\u8fdb\uff1aHTTP1.1\u7684\u652f\u6301\u6301\u4e45\u8fde\u63a5\uff0c\u51cf\u5c11\u4e86\u5efa\u7acb\u548c\u5173\u95ed\u8fde\u63a5\u7684\u8017\u65f6</li> <li>\u8bf7\u6c42\u6d88\u606f</li> <li>\u8bf7\u6c42\u884c<ol> <li>\u683c\u5f0f\uff1aGET /index.html HTTP1.1</li> <li>\u8bf7\u6c42\u65b9\u5f0f \u8d44\u6e90\u8def\u5f84 \u4f7f\u7528\u7684HTTP\u7248\u672c</li> <li>\u53ea\u6709\u4e00\u79cd\u4f7f\u7528post\uff0c\u5c31\u662f\u63d0\u4ea4\u8868\u5355\u7684\u65f6\u5019\uff0c\u5176\u4f59\u90fd\u4f7f\u7528get\uff08\u6bd4\u5982\u8d85\u94fe\u63a5\uff09</li> </ol> </li> <li>\u8bf7\u6c42\u5934<ol> <li>k-v\u5bf9\u5f62\u5f0f</li> <li>\u5e38\u89c1\u8bf7\u6c42\u5934<ol> <li>Accept</li> <li>Accpet-Encoding\uff1a\u662f\u538b\u7f29\u65b9\u5f0f\u3002\u7528\u4e8e\u6307\u5b9a\u5ba2\u6237\u7aef\u80fd\u591f\u89e3\u7801\u7684\u6570\u636e\u7f16\u7801\u65b9\u5f0f .\u6709gzip\u548ccompress\u65b9\u5f0f</li> <li>HOST\uff1a\u7528\u4e8e\u6307\u5b9a\u8d44\u6e90\u6240\u5728\u7684\u8def\u5f84\u548c\u7aef\u53e3\u53f7</li> <li>If-Modifed-Since\uff1a\u4e0e\u672c\u5730\u7f13\u5b58\u6709\u5173\uff0c\u5982\u679c\u6ca1\u6709\u7f13\u5b58\u5219\u8fd4\u56de304\u72b6\u6001\u7801</li> <li>Referer\uff1a\u6d4f\u89c8\u5668\u5bf9\u670d\u52a1\u5668\u53d1\u8d77\u8bf7\u6c42\uff0c\u5bf9\u4e8e\u5355\u673a\u8d85\u94fe\u63a5\u7684\u60c5\u51b5\u4f1a\u6709Referer\uff0c\u53ef\u4ee5\u7528\u4e8e\u533a\u522b\u4e0d\u540c\u8bbf\u95ee\u65b9\u5f0f\uff0c\u5236\u4f5c\u9632\u76d7\u94fe\u3002</li> <li>User-Agent\uff1a\u6709Mozilla\u7cfb\u5217</li> </ol> </li> </ol> </li> <li>\u6d88\u606f\u5b9e\u4f53</li> <li>\u76f8\u5e94\u6d88\u606f</li> <li>\u54cd\u5e94\u884c<ol> <li>\u683c\u5f0f\uff1aHTTP1.1 200 OK</li> <li>\u7248\u672c\u53f7 \u72b6\u6001\u7801 \u63cf\u8ff0</li> <li>\u5e38\u89c1\u72b6\u6001\u7801<ol> <li>1xx\uff1a\u8bf7\u6c42\u5df2\u7ecf\u63a5\u53d7\uff0c\u53ef\u7ee7\u7eed\u5904\u7406</li> <li>2xx: \u8bf7\u6c42\u5df2\u88ab\u670d\u52a1\u5668\u6210\u529f\u63a5\u6536\uff0c\u7406\u89e3</li> <li>3xx: \u4e3a\u5b8c\u6210\u8bf7\u6c42\uff0c\u5ba2\u6237\u7aef\u9700\u8981\u8fdb\u4e00\u6b65\u7ec6\u5316\u8bf7\u6c42\u3002\u6bd4\u5982302\uff0c\u8bf7\u6c42\u91cd\u5b9a\u5411</li> <li>4xx: \u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u6709\u9519\u8bef\uff0c\u6bd4\u5982404\uff0c\u670d\u52a1\u5668\u627e\u4e0d\u5230\u8d44\u6e90</li> <li>5xx\uff1a\u670d\u52a1\u5668\u51fa\u73b0\u9519\u8bef\uff0c\u6bd4500\uff0c\u670d\u52a1\u5668\u53d1\u751f\u9519\u8bef</li> </ol> </li> </ol> </li> <li>\u54cd\u5e94\u5934\uff1a<ol> <li>k-v\u683c\u5f0f</li> <li>\u5e38\u89c1\u76f8\u5e94\u5934<ol> <li>Location\uff1a\u901a\u77e5\u5ba2\u6237\u7aef\u8bf7\u6c42\u6587\u6863\u7684\u65b0\u5730\u5740\uff0c\u591a\u914d\u54083xx\u72b6\u6001\u7801\u4f7f\u7528\u3002\u4e0d\u80fd\u540c\u65f6\u51fa\u73b0Location\u548cContent-Type\u4e24\u4e2a\u5b57\u6bb5</li> <li>Server\uff1a\u6307\u5b9a\u670d\u52a1\u5668\u8f6f\u4ef6\u4ea7\u54c1</li> <li>Refresh\uff1a\u9875\u9762\u5237\u65b0\uff0c\u53ef\u4ee5\u5237\u65b0\u5230\u65b0\u7684\u5730\u5740\uff1a refresh ; 3 ; url=</li> <li>Content-Disposition: \u6ca1\u6709\u5728HTTP\u7684\u6807\u51c6\u89c4\u8303\u4e2d\u5b9a\u4e49\uff0c\u8ba9\u7528\u6237\u9009\u62e9\u628a\u54cd\u5e94\u5b9e\u4f53\u4fdd\u5b58\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d</li> <li>COntent-Encoding\uff1a\u76f8\u5e94\u6d88\u606f\u7684\u538b\u7f29\u65b9\u5f0f</li> </ol> </li> </ol> </li> <li>\u76f8\u5e94\u6d88\u606f\u4f53</li> </ol>"},{"location":"TEST/javaweb/#servlet","title":"\u7b2c\u56db\u7ae0 Servlet","text":"<p>\u89c1\u4ee3\u7801</p>"},{"location":"TEST/javaweb/#_4","title":"\u7b2c\u4e94\u7ae0 \u4f1a\u8bdd\u4e0e\u4f1a\u8bdd\u6280\u672f","text":"<ol> <li>\u4f1a\u8bdd\u6280\u672f</li> <li>\u5b9a\u4e49\uff1a\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u8fdb\u884c\u4e00\u7cfb\u5217\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u8fc7\u7a0b</li> <li>\u7c7b\u522b\uff1aCookie\u548cSession</li> <li>Cookie\u5bf9\u8c61</li> <li>\u53ea\u6709\u5b83\u662f\u7528\u6237new\u7684</li> <li>\u5b9a\u4e49\uff1a\u7c7b\u4f3c\u4f1a\u5458\u5361\uff0c\u5f53\u7528\u6237\u8bbf\u95ee\u670d\u52a1\u5668\u7684\u65f6\u5019\uff0c\u670d\u52a1\u5668\u7ed9\u5ba2\u6237\u53d1\u9001\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u90fd\u4fdd\u5b58\u5230Cookie\u4e2d\u3002\u5f53\u6d4f\u89c8\u5668\u518d\u6b21\u4f7f\u7528Cookie\u8bbf\u95ee\u670d\u52a1\u5668\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f5c\u51fa\u6b63\u786e\u7684\u76f8\u5e94\u3002\u4e5f\u5c31\u662f\u670d\u52a1\u5668\u7ed9\u6d4f\u89c8\u5668\u6253\u6807\uff0c\u7136\u540e\u6d4f\u89c8\u5668\u8bbf\u95ee\u6bcf\u6b21\u90fd\u9700\u8981\u5e26\u4e0a\u8fd9\u4e2a\u6807\u7b7e</li> <li>\u65b9\u5f0f\uff1a\u670d\u52a1\u5668\u8bbe\u7f6e\uff0c\u6d4f\u89c8\u5668\u4fdd\u5b58</li> <li>\u65b9\u6cd5<ol> <li>\u6784\u9020\u65b9\u6cd5\uff0c\u53ea\u6709\u4e00\u4e2a\uff0c\u540d\u79f0\u4e0d\u80fd\u4fee\u6539\uff0c\u503c\u53ef\u4ee5</li> </ol> </li> <li>Session\u5bf9\u8c61</li> <li>\u5b9a\u4e49\uff1a\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u670d\u52a1\u5668\uff0c\u6bcf\u6b21\u7528\u6237\u767b\u5f55\uff0c\u4f7f\u7528cookie\u5b58\u50a8id\uff0c\u5219\u53ef\u4ee5\u5224\u65ad\u662f\u54ea\u4e2asession\u7684\u8303\u56f4</li> <li>4\u4e2a\u57df\u5bf9\u8c61\u7684\u5927\u5c0f\uff1a\u4ece\u5c0f\u5230\u5927<ol> <li>pageContext(JSP)</li> <li>HttpServletRequest</li> <li>HttpSession</li> <li>ServletContext</li> </ol> </li> <li>\u751f\u547d\u5468\u671f<ol> <li>\u751f\u6548\uff1a\u7b2c\u4e00\u6b21\u8bbf\u95eeJSP\u9875\u9762\u7684\u65f6\u5019\u751f\u6548</li> <li>\u5931\u6548<ol> <li>\u8d85\u65f6\u3002\u5982\u679c\u5728web.xml\u4e2d\u8bbe\u7f6e\u4e3a0\u6216\u8005\u8d1f\u6570\uff0c\u5c31\u4ee3\u8868\u6c38\u4e0d\u8d85\u65f6\uff0c\u9ed8\u8ba430\u5206\u949f</li> <li>invalidate</li> <li>\u5173\u95ed\u6d4f\u89c8\u5668</li> </ol> </li> </ol> </li> <li>\u7f16\u7801</li> <li>\u5b9e\u4f8b\uff1a\u8d2d\u4e66\u793a\u4f8b    \u4e00\u5171\u4f7f\u7528\u4e09\u4e2aServlet\uff0c\u7b2c\u4e00\u4e2alistBookServlet\u7528\u4e8e\u548c\u6570\u636e\u5e93\u4ea4\u4e92\uff0c\u83b7\u53d6\u6570\u636e\uff0c\u5e76\u901a\u8fc7\u70b9\u51fb\u8d85\u94fe\u63a5\u8f6c\u5230\u7b2c\u4e8c\u4e2aPurchaseServlet(    \u7528\u4e8e\u5bf9session\u7684\u5b58\u50a8\u7684k-v\u8fdb\u884c\u66f4\u65b0)\u3002\u6700\u540e\u8f6c\u5230BookServlet\uff0c\u7528\u4e8e\u5bf9\u8d2d\u7269\u8f66\u6570\u636e\u8fdb\u884c\u5c55\u793a\u3002</li> </ol> ApacheConf<pre><code>//\u7b2c1\u4e2a\n@WebServlet(name = \"listBookServlet\", value = \"/listBookServlet\")\npublic class ListBookServlet extends HttpServlet {\n    private static final long serialVersionUID = 1L;\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        resp.setContentType(\"text/html;charset=UTF-8\");\n        PrintWriter writer = resp.getWriter();\n        Collection&lt;Book&gt; books = BookDB.getAll();\n        writer.println(\"books are\");\n        books.forEach(book -&gt; {\n            String url = \"purchaseServlet?id=\" + book.getId();\n            writer.write(book.getName() + \"&lt;a href='\" + url\n                    + \"'&gt;get it&lt;/a&gt;&lt;br&gt;\");\n        });\n\n    }\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        doGet(req, resp);\n    }\n}\n\n//\u7b2c2\u4e2a\n@WebServlet(name = \"purchaseServlet\", value = \"/purchaseServlet\")\npublic class PurchaseServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        String id = req.getParameter(\"id\");\n        if(id == null){\n            String url = \"/listBookServlet\";\n            resp.sendRedirect(url);\n            return;\n        }\n        Book book = BookDB.getBook(id);\n        HttpSession session = req.getSession();\n        List&lt;Book&gt; cart = (List&lt;Book&gt;) session.getAttribute(\"cart\");\n        if(cart == null){\n            cart = new ArrayList&lt;&gt;();\n            session.setAttribute(\"cart\", cart);\n        }\n        cart.add(book);\n        Cookie cookie = new Cookie(\"JSESSEIONID\", session.getId());\n        cookie.setMaxAge(60*30);\n        cookie.setPath(\"/\");\n        resp.addCookie(cookie);\n\n        String url = \"bookServlet\";\n        resp.sendRedirect(url);\n    }\n\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        doGet(req, resp);\n    }\n}\n\n//\u7b2c3\u4e2a\n@WebServlet(name = \"bookServlet\", urlPatterns= \"/bookServlet\")\npublic class BookServlet extends HttpServlet {\n    public BookServlet() {\n        super();\n    }\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        resp.setContentType(\"text/html;charset=UTF-8\");\n        final PrintWriter writer = resp.getWriter();\n        HttpSession session = req.getSession(false);\n        var flag = true;\n        List&lt;Book&gt; cart = null;\n        if(session == null){\n            flag = false;\n        }else{\n            cart = (List&lt;Book&gt;) session.getAttribute(\"cart\");\n            if(cart == null){\n                flag = false;\n            }\n        }\n\n        if(!flag){\n            writer.println(\"cart is empty\");\n        }else{\n            cart.forEach(book -&gt; {\n                writer.write(book.getName() + \"&lt;br&gt;\");\n            });\n        }\n    }\n\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        doGet(req, resp);\n    }\n}\n</code></pre>"},{"location":"TEST/javaweb/#jsp","title":"\u7b2c\u516d\u7ae0 JSP\u6280\u672f","text":"<ol> <li>JSP    1.\u5b9a\u4e49\uff1a\u662fServlet\u66f4\u9ad8\u7ea7\u522b\u7684\u6269\u5c55\uff0c\u5728JSP\u6587\u4ef6\u4e2d\uff0cHTML\u4ee3\u7801\u548cJava\u4ee3\u7801\u5171\u540c\u5b58\u5728\uff0c\u5176\u4e2dHTML\u4ee3\u7801\u7528\u4e8e\u5b9e\u73b0\u7f51\u9875\u7684\u9759\u6001\u529f\u80fd\uff0c\u800cJava\u4ee3\u7801\u5b9e\u73b0\u52a8\u6001\u5185\u5bb9\u7684\u5c55\u793a\u3002\u6700\u7ec8\uff0cJSP\u6587\u4ef6\u4f1a\u5728Web\u670d\u52a1\u5668\u4e0a\u7684Web\u5bb9\u5668\u4e2d\u7f16\u8bd1\u6210\u4e3aServlet</li> <li>\u7279\u70b9<ol> <li>\u8de8\u5e73\u53f0</li> <li>\u4e1a\u52a1\u4ee3\u7801\u5206\u79bb</li> <li>\u7ec4\u4ef6\u91cd\u7528</li> <li>\u9884\u7f16\u8bd1</li> </ol> </li> <li>\u4f7f\u7528\uff1a\u5728web\u6587\u4ef6\u5939\u4e0b\u548c\u521b\u5efahtml\u4e00\u6837\uff0c\u521b\u5efajsp\u6587\u4ef6\u5e76\u4f7f\u7528</li> <li>JSP\u8fd0\u884c\u539f\u7406</li> <li>\u57fa\u4e8e\u8bf7\u6c42\uff0c\u54cd\u5e94\u6a21\u5f0f</li> <li>\u8fc7\u7a0b<ol> <li>\u9996\u5148\uff0c\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u6587\u4ef6\uff0c\u8bf7\u6c42\u8bbf\u95eeJSP\u6587\u4ef6</li> <li>JSP\u5c06JSP\u6587\u4ef6\u8f6c\u6362\u4e3aJava\u6e90\u6587\u4ef6(Servlet\u6e90\u7a0b\u5e8f)</li> <li>JSP\u5bb9\u5668\u5c06Java\u6e90\u6587\u4ef6\u7f16\u8bd1\u4e3a\u5b57\u8282\u7801\u6587\u4ef6</li> <li>Servlet\u5bb9\u5668\u5c06\u8be5\u6587\u4ef6\u52a0\u8f7d\uff0c\u521b\u5efaServlet\u5b9e\u4f8b(\u5e38\u9a7b\u5185\u5b58)\uff0c\u5e76\u6267\u884cjspInit\u65b9\u6cd5\u5b8c\u6210\u521d\u59cb\u5316(\u6267\u884c\u4e00\u6b21)</li> <li>JSP\u5bb9\u5668\u6267\u884cjspService\u65b9\u6cd5\u6765\u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u5bf9\u6bcf\u4e2a\u8bf7\u6c42\uff0c\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6765\u5904\u7406\u5b83</li> <li>\u5904\u7406\u5b8c\u6210\uff0c\u54cd\u5e94\u5bf9\u8c61\u7531JSP\u5bb9\u5668\u63a5\u53d7\uff0c\u5c06HTML\u683c\u5f0f\u7684\u9759\u6001\u9875\u9762\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef</li> </ol> </li> <li>JSP\u811a\u672c\u5143\u7d20<ol> <li>\u5b9a\u4e49\uff1a\u6307\u5d4c\u5957\u8fdb\u5165\u7684Java\u4ee3\u7801</li> <li>\u5206\u7c7b<ol> <li>JSP Scriptlets\uff1a&lt;% %&gt;\uff0c\u7528\u4e8e\u4f7f\u7528\u7b80\u5355\u7684\u8bed\u53e5\uff0c\u76f8\u5f53\u4e8e\u65b9\u6cd5\u5185\u5b9a\u4e49\u7684\u5c40\u90e8\u53d8\u91cf</li> <li>\u58f0\u660e\u6807\u8bc6:&lt;%\uff01 %&gt;,\u591a\u4e86\u4e2a\u5192\u53f7\u3002\u7528\u4e8e\u5b9a\u4e49\u6574\u4e2a\u9875\u9762\u9700\u8981\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u6210\u5458\u53d8\u91cf\uff0c\u65b9\u6cd5\u7b49\u3002\u5728\u5f53\u524d\u754c\u9762\u6709\u6548\u3002\u53ef\u4ee5\u5728head\u90e8\u5206\u58f0\u660e</li> <li>JSP\u8868\u8fbe\u5f0f\uff1a&lt;%= expression %&gt;,\uff0c\u7528\u4e8e\u5411\u9875\u9762\u8f93\u51fa\u4fe1\u606f</li> </ol> </li> </ol> </li> <li>JSP\u6307\u4ee4</li> <li>page\u6307\u4ee4\uff1a&lt;%@ page k1=v1,k2=v2 &gt;</li> <li>include\u6307\u4ee4\uff0c\u7528\u4e8e\u5305\u542b\u53e6\u4e00\u4e2a\u5143\u7d20</li> <li>JSP\u52a8\u4f5c\u5143\u7d20</li> <li>\u5b9a\u4e49\uff1a\u7528\u4e8e\u63a7\u5236JSP\u52a8\u4f5c\u7684\u884c\u4e3a\uff0c\u6267\u884c\u4e00\u4e9bJSP\u4f5c\u7528</li> <li>\u5143\u7d20<ol> <li>\u5305\u542b\u6587\u4ef6\u5143\u7d20,jsp:include page=\u53ef\u4ee5\u5f15\u5165\u52a8\u6001\u6587\u4ef6(\u6bd4\u5982\u53ef\u4ee5\u662fjsp)\u6216\u8005\u662f\u9759\u6001\u6587\u4ef6\uff0cflush\u9ed8\u8ba4\u503c\u662ffalse</li> <li>\u8bf7\u6c42\u8f6c\u53d1\u5143\u7d20\uff0cjsp:forward page=</li> </ol> </li> <li>\u4e24\u79cdinclude\u7684\u533a\u522b<ol> <li>include\u6307\u4ee4\u901a\u8fc7file\u5c5e\u6027\u6307\u5b9a\u6587\u4ef6\uff0cfile\u5c5e\u6027\u652f\u6301\u4efb\u4f55\u8868\u8fbe\u5f0f\uff0c\u540e\u8005\u4f7f\u7528page\u6307\u4ee4\uff0c\u652f\u6301\u8868\u8fbe\u5f0f</li> <li>\u4f7f\u7528\u524d\u8005\uff0c\u4f1a\u7f16\u8bd1\u6210\u4e00\u4e2a\u5b57\u8282\u7801\u6587\u4ef6\u3002\u540e\u8005\u4f1a\u5206\u522b\u7f16\u8bd1\u6210\u591a\u4e2a</li> <li>\u524d\u8005\u53d8\u91cf\u4e0d\u80fd\u91cd\u590d\uff0c\u540e\u8005\u53ef\u4ee5</li> </ol> </li> <li>\u9690\u5f0f\u5bf9\u8c61</li> <li>out\uff1a\u5e26\u7f13\u5b58\u7684PrintWriter</li> <li>request/response</li> <li>config</li> <li>session</li> <li>application</li> <li>page</li> <li>pageContext:4\u4e2a\u4f5c\u7528\u8303\u56f4\uff1apage,request,session,application</li> <li>exception:\u53ef\u4ee5\u6307\u5b9a\u9519\u8bef\u5904\u7406\u7684jsp\u4f4d\u7f6e</li> </ol>"},{"location":"TEST/javaweb/#jdbcservletjsp","title":"\u5927\u9898 JDBC+Servlet+JSP","text":""},{"location":"TEST/javaweb/#1connection","title":"1.\u5c01\u88c5Connection\u5de5\u5177\u7c7b","text":"<p>\u8fd9\u91cc\u7701\u7565</p>"},{"location":"TEST/javaweb/#2userbean","title":"2.\u521b\u5efaUserBean","text":"<p>\u5bf9\u5e94\u5b57\u6bb5\u8fdb\u884c\u5c01\u88c5\u7684bean\u5bf9\u8c61</p>"},{"location":"TEST/javaweb/#3loginjsp","title":"3.\u521b\u5efalogin.jsp","text":"ApacheConf<pre><code>&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;login&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form action=\"LoginServlet\" method=\"post\" name=\"loginForm\"&gt;\n    \u7528\u6237\u540d:&lt;input name=\"username\" type=\"text\" id=\"username\" style=\"width: 200px\"/&gt;&lt;br&gt;&lt;br&gt;\n    \u5bc6\u7801:&lt;input name=\"password\" type=\"password\" id=\"password\" style=\"width: 200px\"/&gt;&lt;br&gt;&lt;br&gt;\n    input:&lt;input type=\"submit\" name=\"submit\" value=\"\u767b\u5f55\"&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"TEST/javaweb/#4-loginservlet","title":"4. \u521b\u5efaLoginServlet","text":"ApacheConf<pre><code>/**\n * ClassName: LoginServlet\n * Package: org.example.userlogin\n * Description:\n *\n * @author lx\n * @version 1.0\n */\n@WebServlet(name = \"LoginServlet\", urlPatterns = \"/LoginServlet\")\npublic class LoginServlet extends HttpServlet {\n\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        req.setCharacterEncoding(\"UTF-8\");\n        resp.setCharacterEncoding(\"UTF-8\");\n        resp.setContentType(\"text/html;charset=utf-8\");\n        PrintWriter out = resp.getWriter();\n        String username = req.getParameter(\"username\");\n        String password = req.getParameter(\"password\");\n        if(userDao.checkuser(username, password)){\n            out.println(\"success\");\n        }else{\n            out.println(\"failure\");\n        }\n    }\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        doGet(req, resp);\n    }\n}\n</code></pre>"},{"location":"TEST/javaweb/#5-daobeanorm","title":"5. DAO\u5c42\u5c01\u88c5\u4ece\u8868\u5230bean\u5bf9\u8c61\u7684\u903b\u8f91(ORM)","text":"ApacheConf<pre><code>/**\n * ClassName: userDao\n * Package: org.example.userlogin.DAO\n * Description:\n *\n * @author lx\n * @version 1.0\n */\npublic class userDao {\n    public static boolean checkuser(String username, String password){\n        Connection conn = getConnection();\n        if(conn==null){\n            return false;\n        }\n        var sql = \"select `passward` from userin.tb_user where username=\" + \"'\" + username + \"'\";\n        try(var statement = conn.createStatement()){\n            ResultSet resultSet = statement.executeQuery(sql);\n            while(resultSet.next()){\n                String pwd = resultSet.getString(\"passward\");\n                if(pwd.equals(password)){\n                    return true;\n                }\n            }\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n        return false;\n    }\n}\n</code></pre>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/","title":"\u6570\u5b57\u56fe\u50cf\u5904\u7406","text":""},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_2","title":"\u7b2c\u4e00\u7ae0 \u5bfc\u8bba","text":"<ol> <li>\u56fe\u50cf\u5206\u7c7b</li> <li>\u6a21\u62df\u56fe\u50cf\uff1a\u53c8\u79f0\u4e3a\u5149\u5b66\u56fe\u50cf\uff0c\u7a7a\u95f4\u5750\u6807\u548c\u660e\u6697\u7a0b\u5ea6\u662f\u8fde\u7eed\u7684\uff0c\u8ba1\u7b97\u673a\u65e0\u6cd5\u76f4\u63a5\u5904\u7406</li> <li>\u6570\u5b57\u56fe\u50cf\uff1a\u7a7a\u95f4\u5750\u6807\u548c\u7070\u5ea6\u4e0d\u8fde\u7eed\uff0c\u53ef\u4ee5\u4f7f\u7528\u8ba1\u7b97\u673a\u5904\u7406</li> <li>\u6570\u5b57\u56fe\u50cf\u5b9a\u4e49</li> <li>\u56fe\u50cf\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u4e8c\u7ef4\u51fd\u6570\\(f(x,y)\\),\u5176\u4e2dx,y\u662f\u7a7a\u95f4\u5750\u6807\uff0c\u800c\u5728x,y\u5904\u7684\u5e45\u503c\u4e3a\u8be5\u70b9\u7684\u5f3a\u5ea6\u6216\u8005\u7070\u5ea6\u3002\u5982\u679c\u79bb\u6563\uff0c\u5219\u4e3a\u7070\u5ea6\u56fe\u50cf</li> <li>\u56fe\u50cf\u7684\u57fa\u672c\u7ec4\u6210\u662f\u50cf\u7d20\uff0c\u6bcf\u4e2a\u50cf\u7d20\u90fd\u6709\u4f4d\u7f6e\u548c\u5e45\u503c</li> <li>\u6570\u5b57\u56fe\u50cf\u5904\u7406</li> <li>\u5b9a\u4e49\uff1a\u501f\u52a9\u4e8e\u6570\u5b57\u8ba1\u7b97\u673a\u6765\u5904\u7406\u6570\u5b57\u56fe\u50cf</li> <li>\u65b9\u5f0f\uff1a\u56fe\u50cf\u5230\u56fe\u50cf\uff0c\u56fe\u50cf\u5230\u975e\u56fe\u50cf</li> <li>\u7ec4\u6210\uff1a\u56fe\u50cf\u83b7\u53d6\u8bbe\u5907\uff0c\u4e13\u7528\u56fe\u50cf\u5904\u7406\u8bbe\u5907\u6216\u8005\u6709\u76f8\u5e94\u914d\u7f6e\u7684\u8ba1\u7b97\u673a\uff0c\u56fe\u5f62\u8f93\u51fa\u8bbe\u5907</li> <li>\u76ee\u7684<ol> <li>\u63d0\u9ad8\u56fe\u50cf\u7684\u89c6\u611f\u8d28\u91cf</li> <li>\u63d0\u53d6\u56fe\u50cf\u4e2d\u5305\u542b\u7684\u7279\u5f81\u548c\u4fe1\u606f</li> <li>\u56fe\u50cf\u6570\u636e\u7684\u53d8\u5316\uff0c\u7f16\u7801\u548c\u538b\u7f29\uff0c\u4fbf\u4e8e\u5b58\u50a8\u4e8e\u4f20\u8f93</li> </ol> </li> <li>\u610f\u4e49<ol> <li>\u6269\u5927\u4eba\u7684\u89c6\u89c9</li> <li>\u4ee3\u66ff\u4eba\u7684\u89c6\u89c9</li> <li>\u6253\u52a8\u4eba\u7684\u89c6\u89c9</li> </ol> </li> </ol>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_3","title":"\u7b2c\u4e8c\u7ae0 \u57fa\u7840\u77e5\u8bc6","text":"<p>\u4e3b\u8981\u5206\u4e3a\u56fe\u50cf\u83b7\u53d6\u548c\u56fe\u50cf\u6570\u5b57\u5316\uff0c\u4e3b\u8981\u4e3a\u6570\u5b57\u5316</p> <ol> <li>\u6570\u5b57\u5316</li> <li>\u5b9a\u4e49\uff1a\u6240\u8c13\u56fe\u50cf\u6570\u5b57\u5316\uff0c\u662f\u5c06\u6a21\u62df\u56fe\u50cf\u7ecf\u8fc7\u79bb\u6563\u5316\u4e4b\u540e\uff0c\u5f97\u5230\u7528\u6570\u5b57\u8868\u793a\u7684\u56fe\u50cf\u3002       \u5305\u62ec\u4e86\u7a7a\u95f4\u79bb\u6563\u5316(\u91c7\u6837)\u548c\u660e\u6697\u8868\u793a\u6570\u636e\u7684\u79bb\u6563\u5316(\u91cf\u5316)</li> <li>\u91c7\u6837<ol> <li>\u95f4\u9694\u662f\u5173\u952e\uff0c\u592a\u5c0f\u4e86\u5219\u6570\u636e\u91cf\u592a\u5927\u3002\u592a\u5927\u4e86\u5219\u65e0\u6cd5\u8bc6\u522b\u7ec6\u8282</li> <li>\u539f\u7406\u662f\u5bf9\u8fde\u7eed\u56fe\u50cf\u751f\u6210\u626b\u63cf\u7ebf\uff0c\u5bf9\u6bcf\u4e2a\u7ebf\u8fdb\u884c\u53d6\u6837\u548c\u91cf\u5316</li> <li>\u65b9\u5f0f\uff1a\u6709\u7f1d\uff0c\u65e0\u7f1d\uff0c\u91cd\u53e0</li> </ol> </li> <li>\u6570\u5b57\u5316\u5904\u7406\u89c4\u5219<ol> <li>\u5bf9\u7f13\u6162\u53d8\u5316\u7684\u56fe\u50cf\uff0c\u7ec6\u91cf\u5316\uff0c\u7c97\u91c7\u6837</li> <li>\u7ec6\u8282\u4e30\u5bcc\u7684\u56fe\u50cf\uff0c \u7ec6\u91c7\u6837\uff0c\u7c97\u91cf\u5316</li> </ol> </li> <li>\u6570\u5b57\u56fe\u50cf\u8868\u793a<ol> <li>\u5982\u679c\u539f\u56fe\u50cf\u662ff(s,t) \u8fde\u7eed\u51fd\u6570\uff0c\u5219\u901a\u8fc7\u53d6\u6837\u548c\u91cf\u5316\uff0c\u5f97\u5230\u4e8c\u7ef4\u9635\u5217 f(x,y).</li> <li>\u65b9\u5f0f<ol> <li>\u51fd\u6570\u56fe</li> <li>\u7070\u5ea6\u56fe</li> <li>\u77e9\u9635</li> </ol> </li> <li>\u6ce8\u610f:x\u8f74\u5411\u4e0b\uff0cy\u8f74\u5411\u53f3</li> <li>\u63cf\u8ff0\u672f\u8bed<ol> <li>\u52a8\u6001\u8303\u56f4\uff1a\u6700\u5927\u7070\u5ea6\u548c\u6700\u5c0f\u7070\u5ea6\u7684\u6bd4\u503c</li> <li>\u9971\u548c\u5ea6\uff1a\u6307\u8d85\u8fc7\u8be5\u503c\u7684\u7070\u5ea6\u503c\u5c06\u88ab\u526a\u5207\u6389</li> <li>\u5bf9\u6bd4\u5ea6\uff1a\u6700\u5927\u7070\u5ea6\u548c\u6700\u5c0f\u7070\u5ea6\u7684\u5dee\u503c</li> </ol> </li> <li>\u5206\u8fa8\u7387<ol> <li>\u5b9a\u4e49\uff1a\u63cf\u8ff0\u56fe\u50cf\u4e2d\u7269\u4f53\u7684\u7ec6\u8282\u7a0b\u5ea6</li> <li>\u5206\u7c7b<ol> <li>\u7a7a\u95f4\u5206\u8fa8\u7387\uff1a\u91c7\u6837\u51b3\u5b9a\uff0c\u662f\u56fe\u50cf\u53ef\u8fa8\u522b\u7684\u6700\u5c0f\u7ec6\u8282\u7684\u5ea6\u91cf</li> <li>\u7070\u5ea6\u5206\u8fa8\u7387\uff1a\u91cf\u5316\u51b3\u5b9a\uff0c\u662f\u56fe\u50cf\u7070\u5ea6\u7ea7\u7684\u53ef\u5206\u8fa8\u7684\u6700\u5c0f\u53d8\u5316</li> </ol> </li> <li>\u7a7a\u95f4\u5206\u8fa8\u7387\u56e0\u7d20<ol> <li>\u662f\u7531\u91c7\u6837\u70b9\u6570\u51b3\u5b9a</li> <li>\u7070\u5ea6\u4e00\u5b9a\uff0c\u5219\u70b9\u6570\u548c\u5206\u8fa8\u7387\u6210\u6b63\u6bd4</li> </ol> </li> </ol> </li> <li>\u56fe\u50cf\u5185\u63d2<ol> <li>\u5b9a\u4e49\uff1a\u4f7f\u7528\u5df2\u77e5\u6570\u636e\u4f30\u8ba1\u672a\u77e5\u6570\u636e\u7684\u4e00\u79cd\u6570\u503c\u5904\u7406\u3002\u5c5e\u4e8e\u56fe\u50cf\u91cd\u91c7\u6837</li> <li>\u5206\u7c7b\uff1a\u8ba1\u7b97\u9898<ol> <li>\u6700\u4e34\u8fd1\u5185\u63d2\u6cd5\uff1a\u5c06\u539f\u56fe\u50cf\u4e2d\u6700\u8fd1\u90bb\u7684\u7070\u5ea6\u8d4b\u7ed9\u6bcf\u4e2a\u65b0\u4f4d\u7f6e</li> <li>\u53cc\u7ebf\u6027\u5185\u63d2\u6cd5\uff1a\\(v(x,y) = ax + by +cxy + d\\),\u5176\u4e2d\u7cfb\u6570\u7531\u56db\u4e2a\u6700\u90bb\u8fd1\u5143\u7d20\u51b3\u5b9a</li> <li>\u4e09\u6b21\u5185\u63d2\u6cd5</li> </ol> </li> </ol> </li> </ol> </li> <li>\u56fe\u50cf\u8fd0\u7b97<ol> <li>\u5b9e\u8d28\uff1a\u662f\u5bf9\u5e94\u4f4d\u7f6e\u50cf\u7d20\u4e4b\u95f4\u7684\u8fd0\u7b97</li> <li>\u8981\u6c42\uff1a\u56fe\u50cf\u5927\u5c0f\u76f8\u540c</li> <li>\u4f5c\u7528<ol> <li>\u76f8\u52a0\uff1a\u505a\u5e73\u6ed1\u566a\u58f0\u5904\u7406</li> <li>\u76f8\u51cf\uff1a\u589e\u5f3a\u5dee\u522b</li> <li>\u76f8\u4e58\u3001\u76f8\u9664\uff1a\u53ef\u4ee5\u7528\u4e8e\u77eb\u6b63\u9634\u5f71\u548c\u6a21\u677f\u64cd\u4f5c</li> </ol> </li> </ol> </li> <li>\u51e0\u4f55\u7a7a\u95f4\u53d8\u6362<ol> <li>\u7ec4\u6210\u8981\u7d20<ol> <li>\u5750\u6807\u7684\u7a7a\u95f4\u53d8\u6362</li> <li>\u7070\u5ea6\u5185\u63d2\uff0c\u5c31\u662f\u5bf9\u53d8\u6362\u540e\u7684\u50cf\u7d20\u8d4b\u4e88\u7070\u5ea6\u503c</li> </ol> </li> <li>\u5750\u6807\u53d8\u6362<ol> <li>\u516c\u5f0f\uff1a\\((x,y) = T(v,w)\\)</li> <li>\u6b63\u5411\u6620\u5c04\uff1a\u76f4\u63a5\u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u5e94\u7528\u516c\u5f0f</li> <li>\u53cd\u5411\u6620\u5c04\uff1a\u626b\u63cf\u8f93\u51fa\u4f4d\u7f6e\uff0c\u5bf9\u6bcf\u4e2a\u56fe\u50cf\u4f7f\u7528\\((v,w) = T^{-1}\uff08x,y)\\)\u5f97\u5230\u8f93\u5165\u56fe\u50cf\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u4f7f\u7528\u51b3\u5b9a\u8f93\u51fa\u50cf\u7d20\u7684\u7070\u5ea6\u503c</li> </ol> </li> <li>\u7c7b\u578b<ol> <li>\u4f4d\u7f6e\u53d8\u6362<ol> <li>\u5e73\u79fb\u53d8\u6362</li> <li>\u955c\u50cf\u53d8\u6362\uff1a\u6c34\u5e73\u6216\u8005\u5782\u76f4</li> <li>\u65cb\u8f6c\u53d8\u6362</li> </ol> </li> <li>\u5f62\u72b6\u53d8\u6362<ol> <li>\u6bd4\u4f8b\u53d8\u6362</li> <li>\u9519\u5207\u53d8\u6362</li> </ol> </li> <li>\u590d\u5408\u53d8\u6362</li> </ol> </li> </ol> </li> <li>\u56fe\u50cf\u653e\u5927<ol> <li>\u5b9e\u8d28\uff1a\u5bf9\u4fe1\u606f\u7684\u4f30\u8ba1</li> <li>\u65b9\u5f0f\uff1a\u6700\u8fd1\u90bb\u57df\u6cd5\u548c\u7ebf\u6027\u63d2\u503c\u6cd5</li> <li>\u6700\u8fd1\u90bb\u57df\u6cd5<ol> <li>\u601d\u60f3\uff1a\u5982\u679c\u9700\u8981\u5c06\u539f\u56fe\u50cf\u653e\u5927k\u500d\uff0c\u5219\u5c06\u539f\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\uff0c\u653e\u5165\\(k*k\\)\u7684\u5b50\u5757\u4e2d\u3002\u4f1a\u51fa\u73b0\u9a6c\u8d5b\u514b\u6548\u5e94</li> </ol> </li> <li>\u7ebf\u6027\u5185\u63d2\u6cd5<ol> <li>\u601d\u60f3\uff1a\u5f53\u6c42\u51fa\u7684\u5206\u6570\u5730\u5740\u548c\u50cf\u7d20\u70b9\u4e0d\u4e00\u81f4\u7684\u65f6\u5019\uff0c\u6c42\u51fa\u5468\u56f4\u50cf\u7d20\u70b9\u7684\u8ddd\u79bb\u6bd4\u503c\uff0c\u7531\u56db\u4e2a\u90bb\u57df\u7684\u50cf\u7d20\u7070\u5ea6\u503c\u8fdb\u884c\u7ebf\u6027\u63d2\u503c</li> <li>\u5bf9\u4e8e\\((x,y)\\),\u5219\u5468\u56f4\u56db\u4e2a\u50cf\u7d20\u70b9\u662f\\(([x],[y]),([x]+1,[y]),([x],[y]+1),([x]+1,[y]+1)\\).\u8fd9\u91cc\u7684\u5750\u6807\u662fy\u5411\u4e0b\uff0cx\u5411\u53f3</li> <li>\u8ba1\u7b97\u516c\u5f0f\uff1a\u5982\u679c\u56fe\u50cf\u56db\u4e2a\u89d2\u5206\u522b\u662fa,b,c,d\uff0c\u5219\u7ed3\u679c\u4e3aq(pd + (1-p)c) + (1-q)(pb + (1-p)a)</li> <li>\u5176\u4e2d\u6a2a\u5411\u4e3ap,1-p.\u7ad6\u5411\u4e3aq,-1q</li> <li>\u590d\u5408\u65cb\u8f6c\uff0c\u7b49\u4e8e\u4e58\u4ee5\u4e24\u6b21\u7684\u65cb\u8f6c\u7684\u77e9\u9635\u7684\u4e58\u79ef\u3002\u5355\u6b21\u65cb\u8f6c\u7684\u77e9\u9635\u662f\u5de6\u4e0a\u89d2\u56db\u4e2a\u4f4d\u7f6e\u662f     cos, sin,-sin,cos</li> </ol> </li> </ol> </li> </ol> <p>\u9898\u76ee</p> <p>\u4e00\u3001\u586b\u7a7a</p> <p>1\u3001\u82e5\u67d0\u4e00\u70b9\u7684\u50cf\u7d20\u4f4d\u7f6e\u8868\u793a\u4e3a(x, y),\u8bf7\u5c06\u8be5\u50cf\u7d20\u7684 4 \u90bb\u57df\u7684\u5750\u6807\u70b9\u8868\u793a\u51fa\u6765\uff0c</p> <p>\uff08 x+1,y\uff09     \u3001 (x,y+1)          \u3001 (x-1,y)           \u3001   (x,y-1)          \u3002</p> <p>2\u3001\u56fe\u50cf\u7684\u51e0\u4f55\u53d8\u6362\u4e0d\u6539\u53d8\u56fe\u50cf\u7684     \u50cf\u7d20\u548c\u7070\u5ea6\u503c       \uff0c\u800c\u6539\u53d8\u50cf\u7d20\u6240\u5728\u7684    \u4f4d\u7f6e           \u3002</p> <p>3\u3001     \u63d2\u503c    \u662f\u4e00\u4e2a\u5e7f\u6cdb\u7528\u4e8e\u653e\u5927\u3001\u7f29\u5c0f\u3001\u65cb\u8f6c\u548c\u51e0\u4f55\u6821\u6b63\u7b49\u5de5\u4f5c\u4e2d\u7684\u57fa\u672c\u5de5\u5177\u3002</p> <p>4\u3001\u5e38\u7528\u7684\u7070\u5ea6\u5185\u63d2\u6cd5\u6709       \u6700\u8fd1\u90bb\u57df\u6cd5          \u3001      \u53cc\u7ebf\u6027\u5185\u63d2\u6cd5          \u548c     \u53cc\u4e09\u6b21\u5185\u63d2\u6cd5            \u3002</p> <p>5\u3001\u56fe\u50cf\u7684\u6570\u5b57\u5316\u4e3b\u8981\u5305\u542b    \u91c7\u6837         \u3001         \u91cf\u5316       \u4e24\u4e2a\u8fc7\u7a0b\u3002\u91cf\u5316\u53ef \u4ee5\u5206\u6210       \u5747\u5300\u91cf\u5316         \u3001    \u975e\u5747\u5300\u91cf\u5316          \u4e24\u5927\u7c7b\u3002</p> <p>6\u3001   \u7070\u5ea6\u56fe\u50cf        \u662f\u6307\u6bcf\u4e2a\u50cf\u7d20\u7684\u4fe1\u606f\u7531\u4e00\u4e2a\u91cf\u5316\u7684\u7070\u5ea6\u7ea7\u6765\u63cf\u8ff0\u7684\u56fe\u50cf\uff0c\u6ca1\u6709\u5f69 \u8272\u4fe1\u606f\u3002</p> <p>7\u3001\u5728\u4e8c\u503c\u56fe\u50cf\u4e2d\uff0c\u6bcf\u4e2a\u50cf\u7d20\u4e3a 1bit;1\u8868\u793a\u4e3a\u767d\u8272\uff0c0 \u8868\u793a    \u9ed1\u8272          \u3002</p> <p>\u4e8c\u3001\u540d\u8bcd\u89e3\u91ca</p> <p>1\u3001\u56fe\u50cf\u91c7\u6837\uff1a\u5c06\u56fe\u50cf\u7684\u8fde\u7eed\u5750\u6807\u503c\u8fdb\u884c\u79bb\u6563\u5316\u7684\u64cd\u4f5c\u79f0\u4e3a\u91c7\u6837</p> <p>2\u3001\u56fe\u50cf\u91cf\u5316\uff1a\u628a\u7ecf\u8fc7\u91c7\u6837\u5f97\u5230\u7684\u8fde\u7eed\u4eae\u5ea6\u79bb\u6563\u5316</p> <p>3\u3001\u7070\u5ea6\u56fe\u50cf\uff1a\u6bcf\u4e2a\u50cf\u7d20\u7684\u4fe1\u606f\u90fd\u4f7f\u7528\u4e00\u4e2a\u91cf\u5316\u7684\u7070\u5ea6\u7ea7\u6765\u63cf\u8ff0\u7684\u56fe\u50cf</p> <p>4\u3001\u56fe\u50cf\u7a7a\u95f4\u5206\u8fa8\u7387\uff1a\u56fe\u50cf\u53ef\u5206\u8fa8\u7684\u6700\u5c0f\u7ec6\u8282\u7a0b\u5ea6</p> <p>\u4e09\u3001\u7b80\u7b54\u9898</p> <p>1\u3001\u56fe\u50cf\u51e0\u4f55\u6821\u6b63\u4e00\u822c\u5305\u62ec\u54ea\u51e0\u6b65\uff1f</p> <p>1.\u7a7a\u95f4\u5750\u6807\u53d8\u6362\uff0c\u91cd\u65b0\u6392\u5217\u56fe\u50cf\u5e73\u9762\u7684\u50cf\u7d20\u4ee5\u6062\u590d\u539f\u6709\u7684\u7a7a\u95f4\u5173\u7cfb</p> <p>2.\u56fe\u50cf\u7070\u5ea6\u503c\u7684\u786e\u5b9a</p> <p>2\u3001\u56fe\u50cf\u91cd\u91c7\u6837\u6709\u54ea\u4e9b\u65b9\u6cd5\uff1f\u5404\u6709\u4ec0\u4e48\u7279\u70b9\uff1f</p> <p>1.\u6700\u8fd1\u90bb\u5185\u63d2\u6cd5\uff1a\u901f\u5ea6\u6700\u5feb\uff0c\u4f46\u662f\u53ef\u80fd\u51fa\u73b0\u9a6c\u8d5b\u514b</p> <p>2.\u53cc\u7ebf\u6027\u5185\u63d2\u6cd5\uff1a\u66f4\u7cbe\u81f4\uff0c\u4f46\u662f\u6709\u4f4e\u901a\u6ee4\u6ce2\u7684\u6027\u8d28\uff0c\u4f1a\u635f\u5931\u8fb9\u7f18\u4fe1\u606f</p> <p>3.\u53cc\u4e09\u6b21\u5185\u63d2\u6cd5\uff1a\u8ba1\u7b97\u91cf\u5927\uff0c\u4f46\u662f\u6548\u679c\u6700\u597d</p> <p>\u56db\u3001\u7efc\u5408\u8ba1\u7b97</p> <p>1\u3001\u82e5f (1,1) = 1, f (1,2) = 5, f (2,1) = 3, f (2,2) = 4\u8bd5\u5206\u522b\u7528\u6700\u8fd1\u90bb\u57df\u6cd5\u548c\u53cc\u7ebf\u6027\u5185 \u63d2\u6cd5\u786e\u5b9a\u70b9f (1.2,1.6) \u7684\u7070\u5ea6\u503c\u3002</p> <p>\u6700\u8fd1\u90bb\u57df\u6cd5\uff1a\u76f4\u63a5\u8ba1\u7b97\u8ddd\u79bb\u5224\u65ad\u5373\u53ef\u3002</p> <p>\u53cc\u7ebf\u6027\u5185\u63d2\u6cd5\uff1a\u516c\u5f0f\u8ba1\u7b97\uff0c\u6700\u540e\u53d6\u6574\uff0c\u4e3a3\u3002</p> <p>2\u3001\uff081\uff09\u7ed9\u51fa\u5c06\u56fe\u50cf\u987a\u65f6\u9488\u65cb\u8f6c 45 \u5ea6\u7684\u53d8\u6362\u77e9\u9635\u3002</p> <p>Cos,sin</p> <p>-sin,cos</p> <p>\uff082\uff09\u5982\u4f55\u5229\u7528\u4e0a\u8ff0\u77e9\u9635\u5b9e\u73b0\u56fe\u50cf\u65cb\u8f6c\uff1f</p>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_4","title":"\u7b2c\u4e09\u7ae0 \u7070\u5ea6\u53d8\u6362\u548c\u7a7a\u95f4\u6ee4\u6ce2","text":"<p>\u62cd\u96fe\u4e2d\u7684\u7167\u7247\uff0c\u6216\u8005\u9ed1\u591c\u7684\u7167\u7247\uff0c\u56e0\u4e3a\u4eae\u6697\u5dee\u522b\u4e0d\u662f\u5f88\u5927\uff0c\u5219\u753b\u9762\u6548\u679c\u4e0d\u597d</p> <p>\u6539\u6b63\u65b9\u6cd5\uff1a\u56fe\u50cf\u589e\u5f3a\u4e0e\u56fe\u50cf\u590d\u539f</p>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_5","title":"\u5e38\u89c1\u7684\u63cf\u8ff0\u672f\u8bed","text":"<ul> <li>\u56fe\u50cf\u52a8\u6001\u8303\u56f4\uff1a\u56fe\u50cf\u4e2d\u6700\u5927\u7070\u5ea6\u548c\u6700\u5c0f\u7070\u5ea6\u7684\u6bd4\u503c</li> <li>\u5bf9\u6bd4\u5ea6\uff1a\u56fe\u50cf\u4e2d\u6700\u5927\u7070\u5ea6\u548c\u6700\u5c0f\u7070\u5ea6\u7684\u5dee\u503c</li> <li>\u7a7a\u95f4\u5206\u8fa8\u7387\uff1a\u56fe\u50cf\u53ef\u8fa8\u522b\u7684\u6700\u5c0f\u7ec6\u8282\u7684\u5ea6\u91cf</li> <li>\u7070\u5ea6\u5206\u8fa8\u7387\uff1a\u7070\u5ea6\u7ea7\u4e2d\u53ef\u5206\u8fa8\u7684\u6700\u5c0f\u53d8\u5316</li> </ul>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_6","title":"\u56fe\u50cf\u589e\u5f3a","text":"<p>\u5b9a\u4e49\uff1a\u56fe\u50cf\u589e\u5f3a\u91c7\u7528\u4e00\u7cfb\u5217\u6280\u672f\u6539\u5584\u56fe\u50cf\u7684\u89c6\u89c9\u6548\u679c\uff0c\u6216\u8005\u8f6c\u6362\u4e3a\u9700\u8981\u7684\u4fbf\u4e8e\u5904\u7406\u7684\u5f62\u5f0f\u3002</p> <p>\u5206\u7c7b\uff1a\u4ece\u589e\u5f3a\u7684\u4f5c\u7528\u57df\u51fa\u53d1\uff0c\u5206\u4e3a\u7a7a\u95f4\u57df\u589e\u5f3a\u548c\u9891\u7387\u57df\u589e\u5f3a\u3002\u7a7a\u95f4\u57df\u589e\u5f3a\u662f\u76f4\u63a5\u5bf9\u56fe\u50cf\u5404\u50cf\u7d20\u8fdb\u884c\u5904\u7406\u3002\u800c\u9891\u7387\u57df\u589e\u5f3a\u662f\u5c06\u56fe\u50cf\u7ecf\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\u4e4b\u540e\uff0c\u4ece\u7a7a\u57df\u8f6c\u6362\u4e3a\u9891\u57df(\u5176\u4e2d\u6bcf\u4e2a\u70b9\u8868\u793a\u56fe\u50cf\u4e2d\u4e0d\u540c\u9891\u7387\u6210\u5206\u7684\u5e45\u5ea6\u548c\u76f8\u4f4d\u4fe1\u606f)\uff0c\u4ece\u800c\u53ef\u4ee5\u5bf9\u4e0d\u540c\u7684\u9891\u57df\u8fdb\u884c\u64cd\u4f5c\u6216\u8005\u8fc7\u6ee4\uff0c\u6700\u540e\u518d\u8f6c\u6362\u4e3a\u7a7a\u57df\u5373\u53ef\u3002</p>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_7","title":"\u7a7a\u95f4\u57df\u589e\u5f3a\uff1a\u7070\u5ea6\u76f4\u65b9\u56fe\u4e0e\u7a7a\u95f4\u6ee4\u6ce2","text":"<p>\u5206\u7c7b\uff1a\u4e3b\u8981\u5206\u4e3a\u7070\u5ea6\u53d8\u6362\u548c\u7a7a\u95f4\u6ee4\u6ce2\u4e24\u90e8\u5206\u3002\u5176\u4e2d\u7070\u5ea6\u53d8\u6362\u5728\u56fe\u50cf\u7684\u5355\u4e2a\u50cf\u7d20\u4e0a\u64cd\u4f5c\uff0c\u4e3b\u8981\u4ee5\u5bf9\u6bd4\u5ea6\u548c\u9608\u503c\u7684\u5904\u7406\u4e3a\u76ee\u7684\u3002\u800c\u7a7a\u95f4\u6ee4\u6ce2\u6d89\u53ca\u6539\u5584\u6027\u80fd\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u901a\u8fc7\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\u7684\u90bb\u57df\u6765\u9510\u5316\u56fe\u50cf\u3002</p> <p>\u7edf\u4e00\u516c\u5f0f\uff1a\\(g(x,y) = T(f(x,y)))\\)\uff0c\u5219\u5176\u4e2dT\u662f\u5bf9\u70b9\\((x,y)\\)\u7684\u90bb\u57df\u8fdb\u884c\u5904\u7406\u7684\u7b97\u5b50\u3002\u5982\u4e3a\u964d\u4f4e\u566a\u58f0\u800c\u5bf9\u56fe\u50cf\u5e8f\u5217\u6267\u884c\u6bcf\u4e2a\u50cf\u7d20\u6c42\u548c\u7684\u64cd\u4f5c\u3002\u5bf9\u8fb9\u754c\uff0c\u9700\u8981\u8fdb\u884cpedding\u6216\u8005\u5176\u4ed6\u64cd\u4f5c\uff0c\u8fd9\u5c31\u662f\u7a7a\u95f4\u6ee4\u6ce2\u7684\u5b9a\u4e49\u3002</p> <p>\u7070\u5ea6\u53d8\u6362\uff1a</p> <ul> <li>\u7ebf\u6027\u7070\u5ea6\u53d8\u6362\uff1a\u8f93\u5165\u56fe\u50cf\u7684\u7070\u5ea6\u8303\u56f4[a,b]\uff0c\u8f93\u51fa\u56fe\u50cf\u7684\u7070\u5ea6\u8303\u56f4\u4e3a[c,d]\u3002\u8d85\u51fa\u539f\u8303\u56f4\u7684\u503c\u5168\u90e8\u53d8\u4e3a\u8fb9\u754c\u503c\uff0c\u4e2d\u95f4\u7684\u90e8\u5206\u4f7f\u7528\u7ebf\u6027\u53d8\u6362\u3002</li> <li>\u53cd\u7ebf\u6027\u53d8\u6362\uff1as = L - 1 - r</li> </ul> <p>\u5bf9\u6570\u53d8\u6362\uff1a\u901a\u7528\u5f62\u5f0f\u4e3as = \\(c * log(1 + r)\\),\u5176\u4e2dc\u662f\u5e38\u6570\uff0c\u5047\u8bbe\\(r &gt;= 0\\).\u8be5\u53d8\u6362\u53ef\u4ee5\u6269\u5c55\u6697\u50cf\u7d20\u7684\u503c\uff0c\u540c\u65f6\u538b\u7f29\u66f4\u9ad8\u7070\u5ea6\u7ea7\u7684\u503c\u3002\u53cd\u5bf9\u6570\u53d8\u6362\u7684\u4f5c\u7528\u76f8\u53cd\u3002\u53ef\u4ee5\u67e5\u770b\u524d\u540e\u7684\u9891\u8c31\u3002</p> <p>\u4f3d\u9a6c\u53d8\u6362\uff1a\\(s = c  r^{z}\\)\uff0c\u5176\u4e2d\u5982\u679c z&lt;1\uff0c\u63d0\u5347\u7070\u5ea6\uff0c\u56fe\u50cf\u53d8\u4eae\u3002z&gt;1\uff0c\u5219\u964d\u4f4e\u7070\u5ea6\u7ea7\uff0c\u56fe\u50cf\u53d8\u6697</p>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_8","title":"\u65b9\u5f0f\u4e00\uff1a\u7070\u5ea6\u76f4\u65b9\u56fe\u5747\u8861","text":"<p>\u5b9a\u4e49\uff1a\u7070\u5ea6\u76f4\u65b9\u56fe\u662f\u8868\u8fbe\u56fe\u50cf\u7070\u5ea6\u5206\u5e03\u60c5\u51b5\u7684\u7edf\u8ba1\u56fe\u50cf\uff0c\u6a2a\u5750\u6807\u662f\u7070\u5ea6\u503c\uff0c\u7eb5\u5750\u6807\u662f\u6982\u7387\u5bc6\u5ea6(\u53ef\u7528\u6bd4\u503c\u8ba1\u7b97)\u3002\u5982\u679c\u8981\u5f52\u4e00\u5316\uff0c\u5c31\u662f\u9700\u8981\u9664\u4ee5\u603b\u50cf\u7d20\u6570\u91cfMN\u3002</p> <p>\u7070\u5ea6\u503c\u96c6\u4e2d\u504f\u5c0f\uff0c\u5219\u539f\u56fe\u50cf\u53d8\u6697\u3002\u7070\u5ea6\u503c\u96c6\u4e2d\u504f\u5927\uff0c\u5219\u539f\u56fe\u50cf\u53d8\u91cf\u3002\u5982\u679c\u8de8\u5ea6\u592a\u5927\uff0c\u5219\u52a8\u6001\u8303\u56f4\u5408\u9002</p> <p>\u76f4\u65b9\u56fe\u5747\u8861\uff1a\u76f4\u65b9\u56fe\u5747\u8861\u5316\u5df2\u7ecf\u662f\u5c06\u539f\u56fe\u50cf\u901a\u8fc7\u67d0\u79cd\u53d8\u6362\uff0c\u5f97\u5230\u4e00\u526f\u7070\u5ea6\u76f4\u65b9\u56fe\u4e3a\u5747\u5300\u5206\u5e03\u7684\u65b0\u56fe\u50cf\u7684\u65b9\u6cd5\u3002</p> <p>\u5bf9\u4e8e\u79bb\u6563\u503c\uff0c\u6211\u4eec\u7528\u6982\u7387\u548c\u6c42\u548c\u6765\u8ba1\u7b97\u3002\u5bf9\u4e8e\u4e00\u5e45\u56fe\u50cf\uff0c\u7070\u5ea6\u7ea7rk\u7684\u51fa\u73b0\u6982\u7387\u8fd1\u4f3c\u4e3a\\(nk / MN\\),\u4e5f\u5c31\u662f\u9891\u7387\u4ee3\u66ff\u6982\u7387\u3002\u5176\u4e2dMN\u662f\u56fe\u50cf\u7684\u603b\u50cf\u7d20\u6570\u91cf\uff0cnk\u4e3a\u7070\u5ea6\u503c\u4e3ark\u7684\u50cf\u7d20\u4e2a\u6570\u3002\u800csk\u7684\u8ba1\u7b97\u516c\u5f0f\u4e3a\\(s_{k}=T(r_{k})=(L-1)\\sum_{j=0}^{k}p_{r}(r_{j})=\\frac{(L-1)}{MN}\\sum_{j=0}^{k}n_{j},\\quad k=0,1,2,\\cdots,L-1\\)\uff0c\u8be5\u5f0f\u5b50\u5c06\u8f93\u5165\u7070\u5ea6\u7ea7\u4e3ark\u7684\u5404\u50cf\u7d20\u6620\u5c04\u5230\u8f93\u51fa\u56fe\u50cf\uff0c\u7070\u5ea6\u7ea7\u4e3ask\u3002\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u6c42\u548c\u903b\u8f91\u3002\u6700\u540e\u4e00\u4e2as\u5fc5\u7136\u662f1\u3002</p> <p>\u4f5c\u7528\uff1a\u9ad8\u6982\u7387\u589e\u5f3a\uff0c\u4f4e\u6982\u6291\u5236\uff0c\u7070\u5ea6\u7ea7\u7b80\u5355\u5408\u5e76\uff0c\u4e0d\u80fd\u4e25\u683c\u5747\u5300\uff0c\u5e76\u4e14\u91cd\u590d\u505a\u5c31\u65e0\u610f\u4e49</p>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_9","title":"\u65b9\u5f0f\u4e8c\uff1a\u7a7a\u95f4\u6ee4\u6ce2","text":"<p>\u57fa\u7840\u77e5\u8bc6</p> <p>\u7a7a\u95f4\u6ee4\u6ce2\u662f\u6307\u5229\u7528\u50cf\u7d20\u4ee5\u53ca\u50cf\u7d20\u90bb\u57df\u7ec4\u6210\u7684\u7a7a\u95f4\u8fdb\u884c\u56fe\u50cf\u589e\u5f3a\u7684\u65b9\u6cd5\u3002</p> <p>\u539f\u7406\u662f\u5bf9\u56fe\u50cf\u8fdb\u884c\u6a21\u7248\u8fd0\u7b97\u3002\u57fa\u672c\u601d\u8def\u662f\u8d4b\u4e88\u67d0\u4e2a\u50cf\u7d20\u7684\u503c\u4e3a\u672c\u8eab + \u90bb\u57df\u7684\u7070\u5ea6\u503c\u7684\u51fd\u6570\u3002</p> <p>\u662f\u5426pedding: \u5982\u679c\u9700\u8981\u8f93\u5165\u8f93\u51fa\u7684\u5927\u5c0f\u4e00\u76f4\uff0c\u5219\u9700\u8981pedding</p> <p>\u5377\u79ef\u6a21\u677f</p> <p>\u6838\u5fc3\uff1a\u6ed1\u52a8\u7a97\u53e3 + \u70b9\u4e58</p> <p>\u5206\u7c7b</p> <p>\u6309\u7167\u7ebf\u6027\u5206\uff0c\u5206\u4e3a\u57fa\u4e8e\u5085\u91cc\u53f6\u53d8\u6362\u7684\u7ebf\u6027\u6ee4\u6ce2\u5668\uff0c\u4ee5\u53ca\u76f4\u63a5\u90bb\u57df\u64cd\u4f5c\u7684\u975e\u7ebf\u6027\u6ee4\u6ce2\u5668\u3002</p> <p>\u6309\u7167\u529f\u80fd\u5206\uff0c\u4e3b\u8981\u5206\u6210\u5e73\u6ed1\u6ee4\u6ce2\u548c\u9510\u5316\u6ee4\u6ce2\u3002</p> <p>\u5e73\u6ed1\u7a7a\u95f4\u6ee4\u6ce2</p> <p>\u7ebf\u6027\u6ee4\u6ce2\u5668\uff1a\u5747\u503c\u6ee4\u6ce2\u5668</p> <p>\u975e\u7ebf\u6027\u6ee4\u6ce2\u5668\uff1a\u6700\u5927\u503c\uff0c\u4e2d\u503c\uff0c\u6700\u5c0f\u503c\u6ee4\u6ce2\u5668(\u90fd\u662f\u7edf\u8ba1\u6392\u5e8f(\u975e\u7ebf\u6027)\u6ee4\u6ce2\u5668)\u3002\u5176\u4e2d\u7684\u4e2d\u503c\u6ee4\u6ce2\u5668\u7528\u4e8e\u53bb\u9664\u566a\u58f0\uff0c\u6700\u5927\u503c\u7528\u4e8e\u5bfb\u627e\u6700\u4eae\u70b9\uff0c\u6700\u5c0f\u503c\u7528\u4e8e\u5bfb\u627e\u6700\u6697\u70b9</p> <p>\u4e2d\u503c\u6ee4\u6ce2\u5668\uff1a3*3\u7684\u6a21\u677f\uff0c\u5219\u7b2c5\u5927\u7684\u662f\u4e2d\u503c</p> <p>\u9510\u5316\u7a7a\u95f4\u6ee4\u6ce2\u5668</p> <p>\u4f5c\u7528\uff1a\u7a81\u51fa\u56fe\u50cf\u7ec6\u8282\uff0c\u589e\u5f3a\u88ab\u6a21\u7cca\u7684\u7ec6\u8282\u3002\u79ef\u5206\u4ea7\u751f\u7684\u662f\u949d\u5316\u6548\u679c\uff0c\u800c\u5fae\u5206\u4ea7\u751f\u7684\u662f\u9510\u5316\u6548\u679c\u3002\u6700\u5e38\u7528\u7684\u65b9\u5f0f\u662f\u8ba1\u7b97\u68af\u5ea6</p> <p>\u5206\u7c7b\uff1a</p> <ul> <li>\u4e8c\u9636\u5fae\u5206\u6ee4\u6ce2\u5668-\u62c9\u666e\u62c9\u65af\u7b97\u5b50</li> <li>\u516c\u5f0f\uff1a  \\(f(x+1,y) + f(x-1,y) + f(x,y+1) + f(x,y-1) - 4f(x,y)\\)</li> <li>\u5982\u679c\u6a21\u677f\u7cfb\u6570\u4e3a\u8d1f\u53f7\uff0c\u5219\u51cf\u53bb\u7b97\u5b50\u503c\uff0c\u5426\u5219\u52a0\u4e0a\u7b97\u5b50\u503c</li> <li>\u4e00\u9636\u5fae\u5206\u6ee4\u6ce2\u5668-\u68af\u5ea6\u7b97\u5b50</li> <li></li> <li>\u5982\u4e0a\u56fe\uff0c\u5219\u68af\u5ea6\u8fd1\u4f3c\u8ba1\u7b97\uff1a\\(G(x) =  z6 - z5\\),\u800c\\(G(y) = z8 - z5\\)</li> </ul> <p>\u4e0d\u540c\u6ee4\u6ce2\u5668\u7684\u5bf9\u6bd4</p> <ul> <li>\u5bf9\u4e8e\u6912\u76d0\u566a\u58f0\uff0c\u662f\u6307\u56fe\u50cf\u4e2d\u7684\u67d0\u4e9b\u50cf\u7d20\u88ab\u968f\u673a\u8bbe\u7f6e\u4e3a\u6700\u5927\u503c\uff08\u767d\u8272\uff0c\u5373\u201c\u76d0\u201d\uff09\u6216\u6700\u5c0f\u503c\uff08\u9ed1\u8272\uff0c\u5373\u201c\u6912\u201d\uff09\u3002\u901a\u5e38\u4ee5\u4e00\u5b9a\u7684\u6982\u7387p\u6765\u51b3\u5b9a\u54ea\u4e9b\u50cf\u7d20\u4f1a\u88ab\u66ff\u6362\u3002   \u4e2d\u503c\u6ee4\u6ce2\u5bf9\u7c7b\u4f3c\u8109\u51b2\u566a\u58f0\u66f4\u6709\u6548\u679c\u3002\u800c\u6912\u76d0\u566a\u58f0\u5747\u503c\u4e0d\u4e3a0\uff0c\u4f7f\u7528\u5747\u503c\u6ee4\u6ce2\u4e0d\u80fd\u5f88\u597d\u53bb\u9664\u3002</li> <li>\u9ad8\u65af\u566a\u58f0\uff1a\u4e5f\u5c31\u662f\u566a\u58f0\u7b26\u5408\u6b63\u6001\u5206\u5e03\u7684\u566a\u58f0\u3002\u566a\u58f0\u901a\u5e38\u662f\u8fde\u7eed\u7684\u3002\u5219\u4f7f\u7528\u5747\u503c\u6ee4\u6ce2\u521a\u597d\u53ef\u4ee5\u5904\u7406</li> </ul> <p>\u9898\u76ee</p> <p>1.\u8bbe\u6709\u4e00\u526f\u56fe\u50cf\u6709\u5982\u8868 1 \u6240\u793a\u76f4\u65b9\u56fe\uff0c\u5bf9\u8be5\u56fe\u50cf\u8fdb\u884c\u76f4\u65b9\u56fe\u5747\u8861\u5316\uff0c\u5199\u51fa\u5747\u8861\u5316\u8fc7\u7a0b\uff0c\u5e76\u753b \u51fa\u5747\u8861\u5316\u540e\u7684\u76f4\u65b9\u56fe\u3002\u82e5\u5728\u539f\u56fe\u50cf\u4e00\u884c\u76f8\u90bb 8 \u4e2a\u50cf\u7d20\u7684\u7070\u5ea6\u503c\u5206\u522b\u4e3a\uff1a0\u30011\u30012\u30013\u30014\u30015\u3001 6\u30017\uff0c\u5219\u5747\u8861\u540e\uff0c\u5b83\u4eec\u7684\u7070\u5ea6\u503c\u4e3a\u591a\u5c11\uff1f</p> \u7070\u5ea6\u503c 0 1 2 3 4 5 6 7 p 0.174 0.088 0.086 0.08 0.068 0.058 0.062 0.384 <p>\u8868-1.\u76f4\u65b9\u56fe\u5bf9\u5e94\u8868\u683c</p> <p>2.\u8868-2 \u8868\u793a\u4e00\u526f 16 \u7ea7\u7070\u5ea6\u7684\u56fe\u50cf\u3002\u5199\u51fa\u5747\u503c\u6ee4\u6ce2\u548c\u4e2d\u503c\u6ee4\u6ce2\u7684 3 x 3 \u6ee4\u6ce2\u5668\uff0c\u8bf4\u660e\u8fd9\u4e24\u79cd</p> <p>\u6ee4\u6ce2\u5668\u5404\u81ea\u7684\u7279\u70b9\uff0c\u5e76\u5199\u51fa\u4e24\u79cd\u6ee4\u6ce2\u5668\u5bf9\u56fe\u50cf\u7684\u6ee4\u6ce2\u7ed3\u679c\uff08\u4e0d\u586b\u5145\uff09\u3002</p> 1 2 2 2 3 1 15 1 2 2 2 1 2 0 3 0 2 2 3 1 3 2 0 2 2 <p>\u8868-2 16 \u7ea7\u7070\u5ea6\u56fe\u50cf\u5bf9\u5e94\u8868\u683c</p> <p>3.\u56fe\u50cf\u5927\u5c0f\u4e0d\u53d8\u7684\u5377\u79ef\u64cd\u4f5c</p> <p>4.\u5047\u8bbe\u67d0\u56fe\u50cf\u539f\u7070\u5ea6\u5206\u5e03\u8303\u56f4\u4e3a[50,150],\u91c7\u7528\u7ebf\u6027\u62c9\u4f38\u7684\u65b9\u6cd5\u5c06\u8be5\u8303\u56f4\u62c9\u4f38\u81f3[0,255],\u8bd5 \u8ba1\u7b97\u5728\u539f\u56fe\u4e2d\u7070\u5ea6\u7ea7r = 70 \u7684\u50cf\u7d20\uff0c\u5728\u62c9\u4f38\u540e\u7684\u8303\u56f4\u4e2d\u7070\u5ea6\u7ea7\u7684\u503cs(\u8bf7\u5199\u51fa\u63a8\u5bfc\u8fc7\u7a0b)\u3002</p> <p>6.\u5bf9\u4e8e\u6912\u76d0\u566a\u58f0\uff0c\u4e3a\u4ec0\u4e48\u4e2d\u503c\u6ee4\u6ce2\u6548\u679c\u6bd4\u5747\u503c\u6ee4\u6ce2\u6548\u679c\u597d\uff1f</p> <p>7.\u5747\u503c\u6ee4\u6ce2\u5668\u5bf9\u9ad8\u65af\u566a\u58f0\u7684\u6ee4\u6ce2\u6548\u679c\u5982\u4f55\uff1f\u8bd5\u5206\u6790\u5176\u4e2d\u7684\u539f\u56e0 8.\u8bf4\u660e\u4e00\u5e45\u7070\u5ea6\u56fe\u50cf\u7684\u76f4\u65b9\u56fe\u4e0e\u5bf9\u6bd4\u5ea6\u4e4b\u95f4\u7684\u5173\u7cfb</p> <p>9 \u8bd5\u8ff0\u5404\u79cd\u7a7a\u57df\u5e73\u6ed1\u65b9\u6cd5\u7684\u529f\u80fd\u3001\u8bd5\u7528\u6761\u4ef6\u53ca\u4f18\u7f3a\u70b9\u3002</p> <p>10.\u540d\u8bcd\u89e3\u91ca\uff1a\uff081\uff09\u56fe\u50cf\u589e\u5f3a\uff1b\uff082\uff09\u7070\u5ea6\u76f4\u65b9\u56fe\uff1b\uff083\uff09\u4e2d\u503c\u6ee4\u6ce2\uff084\uff09\u76f4\u65b9\u56fe\u5747\u8861\u5316</p> <p>11.\u586b\u7a7a</p> <p>\uff081\uff09\u5bf9\u4e8e     \u6912\u76d0           \u566a\u58f0\uff0c\u4e2d\u503c\u6ee4\u6ce2\u6548\u679c\u6bd4\u5747\u503c\u6ee4\u6ce2\u6548\u679c\u597d\uff1f</p> <p>\uff082\uff09      \u76f4\u65b9\u56fe\u5747\u8861\u5316         \u65b9\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\uff0c\u5bf9\u5728\u56fe\u50cf\u4e2d\u50cf\u7d20\u4e2a\u6570\u591a\u7684\u7070\u5ea6\u7ea7\u8fdb\u884c\u5c55\u5bbd\uff0c\u800c\u5bf9 \u50cf\u7d20\u4e2a\u6570\u5c11\u7684\u7070\u5ea6\u7ea7\u8fdb\u884c\u7f29\u51cf\uff0c\u4ece\u800c\u8fbe\u5230\u6e05\u6670\u56fe\u50cf\u7684\u76ee\u7684\u3002</p> <p>\uff083\uff09\u56fe\u50cf\u9510\u5316\u7684\u76ee\u7684\u662f\u52a0\u5f3a\u56fe\u50cf\u4e2d\u666f\u7269\u7684       \u7ec6\u8282\uff0c\u8fb9\u7f18   \uff0c\u8f6e\u5ed3          \u548c                 \u3002</p> <p>\uff084\uff09\u76f4\u65b9\u56fe\u4fee\u6b63\u65b9\u6cd5\u5305\u62ec       \u76f4\u65b9\u56fe\u5747\u8861\u5316                \u548c       \u76f4\u65b9\u56fe\u89c4\u5b9a\u5316                \u4e24\u79cd\u65b9\u6cd5\u3002</p> <p>\uff085\uff09\u56fe\u50cf\u6ee4\u6ce2\u64cd\u4f5c\u662f     \u90bb\u57df          \u64cd\u4f5c\uff0c\u901a\u8fc7\u56fe\u50cf\u7684      \u5377\u79ef\u8fd0\u7b97                \u5b9e\u73b0\u3002</p> <p>\uff086\uff09\u7070\u5ea6\u76f4\u65b9\u56fe\u7684\u6a2a\u5750\u6807\u662f   \u7070\u5ea6\u7ea7                 \uff0c\u7eb5\u5750\u6807\u662f   \u8be5\u7070\u5ea6\u51fa\u73b0\u7684\u9891\u7387             \u3002</p> <p>\uff087\uff09\u4e00\u5e45\u66dd\u5149\u8fc7\u5ea6\u7684\u56fe\u50cf\uff0c\u5176\u7070\u5ea6\u96c6\u4e2d\u5728  \u9ad8\u4eae\u5ea6             \u8303\u56f4\u5185\uff0c\u800c\u66dd\u5149\u4e0d\u8db3\u7684\u56fe\u7247\uff0c\u5176 \u7070\u5ea6\u96c6\u4e2d\u5728       \u4f4e\u4eae\u5ea6         \u8303\u56f4\u5185\u3002</p> <p>\uff088\uff09\u56fe\u50cf\u5fae\u5206   \u589e\u5f3a\u4e86        \u4e86\u8fb9\u7f18\u548c\u5176\u4ed6\u7a81\u53d8\u7684\u4fe1\u606f\uff0c \u51cf\u5f31\u4e86          \u4e86\u7070\u5ea6\u53d8\u5316\u7f13\u6162\u7684\u4fe1\u606f\u3002</p> <p>\uff089\uff09\u5bf9\u6570\u53d8\u6362\u7684\u4e00\u822c\u8868\u8fbe\u5f0f\u4e3a         s = c * log(1 + r)           \u3002</p> <p>\uff0810\uff09\u53cd\u7ebf\u6027\u53d8\u6362\u7684\u57fa\u672c\u5f62\u5f0f\u4e3a        s = L - 1 -r                                   \u3002</p> <p>\uff0811\uff09\u6211\u4eec\u901a\u5e38\u4f7f\u7528         \u5bf9\u6570\u53d8\u6362                          \u6765\u51cf\u5c0f\u52a8\u6001\u8303\u56f4\u3002</p> <p>\uff0812\uff09\u7a7a\u57df\u6ee4\u6ce2\u5305\u62ec    \u5e73\u6ed1\u6ee4\u6ce2        \u548c     \u9510\u5316\u6ee4\u6ce2        \u3002\u5176\u8ba1\u7b97\u65b9\u6cd5\u4e3a     \u5377\u79ef          \u8fd0\u7b97\u3002</p> <p>\uff0813\uff09\u4e00\u4e2a\u5f52\u4e00\u5316\u7684\u76f4\u65b9\u56fe\u6240\u6709\u5206\u91cf\u4e4b\u548c\u5e94\u7b49\u4e8e     1        \u3002 12. \u9009\u62e9\u9898</p> <p>\uff081\uff09\u76f4\u65b9\u56fe\u7684\u7b97\u672f\u8fd0\u7b97\u4e0d\u80fd\u6539\u53d8( A )</p> <p>A\uff0e\u50cf\u7d20\u5206\u5e03\u7684\u7a7a\u95f4\u4f4d\u7f6e\uff1b B. \u56fe\u50cf\u4eae\u5ea6\uff1b</p> <p>C. \u56fe\u50cf\u5bf9\u6bd4\u5ea6\uff1b         D. \u56fe\u50cf\u7ec6\u8282\u3002</p> <p>\uff082\uff09\u4e2d\u503c\u6ee4\u6ce2\u5668\u53ef\u4ee5(  A  )</p> <p>A. \u6d88\u9664\u5b64\u7acb\u566a\u58f0\uff1b       B.\u68c0\u51fa\u8fb9\u7f18\uff1b</p> <p>C\uff0e\u8fdb\u884c\u6a21\u7cca\u56fe\u50cf\u6062\u590d\uff1b   D.\u6a21\u7cca\u56fe\u50cf\u7ec6\u8282\u3002</p> <p>\uff083\uff09\u4e0b\u5217\u5c5e\u4e8e\u975e\u7ebf\u6027\u7684\u7a7a\u95f4\u6ee4\u6ce2\u7684\u662f( D )</p> <p>A. \u9ad8\u901a\u6ee4\u6ce2\uff1b B. \u5e26\u901a\u6ee4\u6ce2\uff1b  C. \u4f4e\u901a\u6ee4\u6ce2\uff1b D.\u4e2d\u503c\u6ee4\u6ce2\u3002</p> <p>(5) \u9ad8\u901a\u6ee4\u6ce2\u53ef\u4ee5\u7528\u6765( A  )</p> <p>A\uff0e\u9510\u5316\u8fb9\u7f18\uff1b  B.\u53bb\u9664\u566a\u58f0\uff1b  C. \u76ee\u6807\u8bc6\u522b\uff1b  D.\u63d0\u9ad8\u4eae\u5ea6\u3002</p> <p>(6) \u56fe\u50cf\u4e0e\u5176\u7070\u5ea6\u76f4\u65b9\u56fe\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\u662f( B )</p> <p>A\uff0e\u4e00\u4e00\u5bf9\u5e94\uff1b  B.\u591a\u5bf9\u4e00\uff1b    C.\u4e00\u5bf9\u591a\uff1b    D. \u90fd\u4e0d\u5bf9\u3002</p>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_10","title":"\u7b2c\u56db\u7ae0 \u9891\u57df\u6ee4\u6ce2","text":"<p>\u57fa\u672c\u6982\u5ff5</p> <p>\u6b63\u4ea4\u5411\u91cf\uff1a\u4e24\u5411\u91cf\u4e58\u4e3a0</p> <p>\u6b63\u4ea4\u77e9\u9635\uff1a\u662fN\u4e2a\u6b63\u4ea4\u5217\u5411\u91cf\u77e9\u9635\uff0c\u5fc5\u7136\u6ee1\u8db3\\(A^{T}A = I\\)</p> <p>\u4f7f\u7528\u6b63\u4ea4\u77e9\u9635\u5bf9\u4e00\u7ef4\u5411\u91cf\u8fdb\u884c\u53d8\u6362\u7684\u8fc7\u7a0b\u79f0\u4e3a\u6b63\u4ea4\u53d8\u6362\u3002\u4e5f\u5c31\u662f\\(g = Af\\)</p>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_11","title":"\u56fe\u50cf\u53d8\u6362","text":"<p>\u5b9a\u4e49</p> <p>\u5c06\u56fe\u50cf\u770b\u505a\u7ebf\u6027\u53e0\u52a0\u7cfb\u7edf\uff0c\u56fe\u50cf\u53d8\u6362\u662f\u5c06\u56fe\u50cf\u4ece\u7a7a\u57df\u8f6c\u6362\u4e3a\u9891\u57df\u7b49\u7684\u6570\u5b66\u53d8\u6362\u3002</p> <p>\u597d\u5904\uff1a\u501f\u52a9\u6b63\u4ea4\u53d8\u6362\u7b49\u7279\u6027\u4f7f\u5f97\u5728\u7a7a\u57df\u4e0a\u96be\u89e3\u7684\u95ee\u9898\u5728\u9891\u57df\u4e0a\u5f97\u5230\u7b80\u5316</p> <p>\u5b9e\u8d28\uff1a\u5176\u5b9e\u56fe\u50cf\u5728\u7a7a\u95f4\u57df\u4e0a\u7684\u7070\u5ea6\u53d8\u5316\u5267\u70c8\u7a0b\u5ea6\uff0c\u6216\u8005\u8bf4\u68af\u5ea6\uff0c\u5c31\u662f\u8f6c\u6362\u5230\u9891\u7387\u57df\u7684\u9891\u7387\u3002\u8fd9\u5c31\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u5e73\u6ed1\u5bf9\u5e94\u4f4e\u901a\u6ee4\u6ce2\uff0c\u800c\u9510\u5316\u5bf9\u5e94\u9ad8\u901a\u6ee4\u6ce2</p> <p>\u57fa\u672c\u6761\u4ef6</p> <p>\u6ee1\u8db3\u6b63\u4ea4\uff0c\u5b8c\u5907\u4e24\u4e2a\u6761\u4ef6\u7684\u51fd\u6570\u96c6\u5408\u6216\u8005\u77e9\u9635\u624d\u80fd\u7528\u4e8e\u56fe\u50cf\u7684\u5206\u6790</p> <p>\u5085\u91cc\u53f6\u53d8\u6362</p> <ul> <li>\u5b9a\u4e49\uff1a\u5c06\u6ee1\u8db3\u6761\u4ef6\u7684\u5468\u671f\u51fd\u6570\u4f7f\u7528\u4e0d\u540c\u9891\u7387\u7684\u6b63\u5f26\u548c\u4f59\u5f26\u51fd\u6570\u7684\u52a0\u6743\u548c\u6765\u8868\u793a\u3002\u975e\u5468\u671f\u51fd\u6570\u4e5f\u53ef\u4ee5\u5c55\u5f00\u4e3a\u5085\u91cc\u53f6\u7ea7\u6570\u3002</li> <li>\u6027\u8d28\uff1a</li> <li>\u5bf9\u51fd\u6570\\(f(x)\\),\u5219\u5176\u5085\u91cc\u53f6\u53d8\u6362\u662f\u5bf9\u79f0\u7684\uff0c\u4e5f\u5c31\u662f\\(F(u,v) = F(-u,-v)\\),\u9891\u8c31\u4e5f\u5bf9\u79f0\u7684</li> <li>\u5e73\u79fb\u4e0d\u5f71\u54cd\u5085\u91cc\u53f6\u53d8\u6362\u7684\u5e45\u503c</li> <li>\u7f29\u653e\u540c\u6b65</li> <li>\u65cb\u8f6c\u540c\u6b65</li> <li>\u53ea\u9700\u4e00\u4e2a\u5468\u671f\u7684\u53d8\u6362\u5c31\u53ef\u4ee5\u5168\u90e8\u786e\u5b9a</li> </ul>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_12","title":"\u9891\u57df\u5904\u7406","text":"<p>\u516c\u5f0f\uff1a\\(G(u,v) = H(u,v)F(u,v)\\)</p> <p>\u57fa\u672c\u4f8b\u5b50</p> <ul> <li>\u9677\u6ce2\u6ee4\u6ce2\u5668</li> <li>\u516c\u5f0f:\\(H(u,v) = 0,\u5f53(u,v) = (M/2,N/2)\u7684\u65f6\u5019\uff0c\u5176\u4ed6\u65f6\u5019\u7b49\u4e8e1\\)</li> <li>\u6574\u4f53\u7070\u5ea6\u7b49\u7ea7\u964d\u4f4e</li> <li>\u4f4e\u901a(\u5e73\u6ed1)\u6ee4\u6ce2\u5668</li> <li>\u4f4e\u9891\u901a\u8fc7\uff0c\u9ad8\u9891\u8870\u51cf</li> <li>\u5e73\u6ed1\u5904\u7406</li> <li>\u9ad8\u901a(\u9510\u5316)\u6ee4\u6ce2\u5668</li> <li>\u9ad8\u9891\u901a\u8fc7\uff0c\u4f4e\u9891\u51cf\u5f31</li> <li>\u9510\u5316\u5904\u7406</li> </ul> <p>\u7a7a\u95f4\u57df\u6ee4\u6ce2\u548c\u9891\u7387\u57df\u6ee4\u6ce2\u4e4b\u95f4\u7684\u5173\u7cfb</p> <ul> <li>\u7a7a\u95f4\u57df\u4e58\u6cd5\u53ef\u4ee5\u901a\u8fc7\u9891\u7387\u57df\u5377\u79ef\u5f97\u5230</li> <li>\u7a7a\u95f4\u57df\u548c\u9891\u7387\u57df\u7684\u6ee4\u6ce2\u5668\u7ec4\u6210\u4e86\u5085\u91cc\u53f6\u53d8\u6362\u5bf9</li> <li>\u4f4e\u901a\u548c\u5e73\u6ed1\u7b49\u4ef7\uff0c\u9ad8\u901a\u548c\u9510\u5316\u7b49\u4ef7</li> </ul> <p>\u9891\u7387\u57df\u5e73\u6ed1\u6ee4\u6ce2\u5668</p> <ul> <li>\u7406\u60f3\u4f4e\u901a\u6ee4\u6ce2\u5668</li> <li>\u539f\u7406\uff1a\u622a\u65ad\u5085\u91cc\u53f6\u53d8\u6362\u6240\u6709\u7684\u9ad8\u9891\u90e8\u5206\uff0c\u5904\u4e8e\u6307\u5b9a\u8ddd\u79bbd\u4e4b\u5916\uff0c\u4e3a\u4e00\u4e2a\u5706\u5f62</li> <li>\u534a\u5f84d\u8d8a\u5c0f\uff0c\u6a21\u7cca\u8d8a\u5927\uff1b\u534a\u5f84d\u8d8a\u5927\uff0c\u6a21\u7cca\u8d8a\u5c0f</li> <li>ILPF</li> <li>\u5df4\u7279\u6c83\u601d\u4f4e\u901a\u6ee4\u6ce2\u5668</li> <li>\u5e94\u7528\uff1a\u53ef\u7528\u4e8e\u5e73\u6ed1\u5904\u7406\uff0c\u5982\u56fe\u50cf\u7531\u4e8e\u91cf\u5316\u4e0d\u8db3\u4ea7\u751f\u7684\u865a\u5047\u8f6e\u5ed3\uff0c\u53ef\u4ee5\u51cf\u5f31\u632f\u94c3\u73b0\u8c61</li> <li>BLPF</li> <li>\u9ad8\u65af\u4f4e\u901a\u6ee4\u6ce2\u5668</li> <li>GLPF</li> <li>\u6ca1\u6709\u632f\u94c3\u6548\u679c</li> <li>\u5e94\u7528\u5b9e\u4f8b</li> </ul> <p>\u9891\u7387\u57df\u5c16\u9510\u6ee4\u6ce2\u5668</p> <ul> <li>\u7406\u60f3\u9ad8\u901a\u6ee4\u6ce2\u5668</li> <li>\u5df4\u7279\u6c83\u601d\u9ad8\u901a\u6ee4\u6ce2\u5668</li> <li>\u9ad8\u65af\u9ad8\u901a\u6ee4\u6ce2\u5668</li> <li>\u9891\u7387\u57df\u7684\u62c9\u666e\u62c9\u65af\u7b97\u5b50</li> </ul> <p>\u5e38\u89c1\u95ee\u9898</p> <ol> <li>\u7070\u5ea6\u56fe\u50cf\u8fdb\u884c\u5085\u91cc\u53f6\u53d8\u6362\u4e4b\u7684\u9891\u8c31\u56fe\u4e2d\uff0c\u6700\u4eae\u7684\u90e8\u5206\u662f\u5bf9\u5e94\u539f\u59cb\u56fe\u50cf\u7684\uff1a\u6162\u53d8\u5316\u91cf\u3002    \u56e0\u4e3a\u9891\u8c31\u56fe\u4e2d\u4e2d\u5fc3\u4ee3\u8868\u4e86\u4f4e\u9891\u6210\u5206\uff0c\u6700\u4eae\uff0c\u53cd\u6620\u4e86\u56fe\u50cf\u7684\u6574\u4f53\u7ed3\u6784\u548c\u5927\u8303\u56f4\u4fe1\u606f    \u800c\u9ad8\u9891\u6210\u5206\u5728\u8fdc\u79bb\u4e2d\u5fc3\u7684\u90e8\u5206\uff0c\u8f83\u6697\uff0c\u53cd\u6620\u4e86\u56fe\u50cf\u7684\u7ec6\u8282\u548c\u8fb9\u7f18\u4fe1\u606f\uff0c\u5982\u7eb9\u7406\uff0c\u7ebf\u6761\uff0c\u566a\u58f0</li> <li>\u4e3a\u4ec0\u4e48\u4e8c\u503c\u56fe\u50cf\u7684\u5085\u91cc\u53f6\u53d8\u6362\u9891\u8c31\u662f\u7070\u5ea6\u56fe\u50cf\uff1a    \u5085\u91cc\u53f6\u53d8\u6362\u7684\u672c\u8d28\uff1a\u5085\u91cc\u53f6\u53d8\u6362\u5c06\u7a7a\u95f4\u57df\u4e2d\u7684\u56fe\u50cf\u8f6c\u6362\u4e3a\u9891\u7387\u57df\u4e2d\u7684\u8868\u793a\u3002\u5728\u9891\u7387\u57df\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u7684\u503c\u4ee3\u8868\u4e86\u4e0d\u540c\u9891\u7387\u6210\u5206\u7684\u5e45\u5ea6\u548c\u76f8\u4f4d\u4fe1\u606f\u3002    \u5e45\u5ea6\u8c31\u4e0e\u76f8\u4f4d\u8c31\uff1a\u5085\u91cc\u53f6\u53d8\u6362\u7684\u7ed3\u679c\u901a\u5e38\u7531\u5e45\u5ea6\u8c31\u548c\u76f8\u4f4d\u8c31\u7ec4\u6210\u3002\u5e45\u5ea6\u8c31\u53cd\u6620\u4e86\u5404\u4e2a\u9891\u7387\u5206\u91cf\u7684\u5f3a\u5ea6\uff0c\u800c\u76f8\u4f4d\u8c31\u5219\u63cf\u8ff0\u4e86\u8fd9\u4e9b\u5206\u91cf\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5173\u7cfb\u3002\u5f53\u6211\u4eec\u53ef\u89c6\u5316\u5085\u91cc\u53f6\u53d8\u6362\u7684\u7ed3\u679c\u65f6\uff0c\u901a\u5e38\u662f\u663e\u793a\u5e45\u5ea6\u8c31\uff0c\u56e0\u4e3a\u5b83\u66f4\u5bb9\u6613\u89e3\u91ca\u5e76\u4e14\u5177\u6709\u76f4\u89c2\u7684\u610f\u4e49\u3002    \u7070\u5ea6\u8868\u793a\uff1a\u7531\u4e8e\u5e45\u5ea6\u8c31\u662f\u4e00\u4e2a\u975e\u8d1f\u5b9e\u6570\u77e9\u9635\uff0c\u5176\u503c\u8303\u56f4\u4ece0\u5230\u67d0\u4e2a\u6700\u5927\u503c\u4e0d\u7b49\uff0c\u56e0\u6b64\u9002\u5408\u7528\u7070\u5ea6\u6765\u8868\u793a\u3002\u7070\u5ea6\u56fe\u50cf\u662f\u901a\u8fc7\u4e0d\u540c\u7684\u4eae\u5ea6\u7ea7\u522b\uff08\u4ece\u9ed1\u5230\u767d\uff09\u6765\u8868\u793a\u6570\u503c\u5927\u5c0f\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u975e\u5e38\u9002\u5408\u7528\u6765\u5c55\u793a\u9891\u7387\u57df\u4e2d\u7684\u4fe1\u606f\u3002    \u4e8c\u503c\u56fe\u50cf\u7684\u7279\u70b9\uff1a\u867d\u7136\u539f\u59cb\u56fe\u50cf\u662f\u4e8c\u503c\u7684\uff08\u53ea\u6709\u9ed1\u767d\u4e24\u79cd\u989c\u8272\uff09\uff0c\u4f46\u5728\u9891\u7387\u57df\u4e2d\uff0c\u5b83\u5305\u542b\u4e86\u5404\u79cd\u9891\u7387\u7684\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u9700\u8981\u7528\u8fde\u7eed\u7684\u7070\u5ea6\u7ea7\u6765\u51c6\u786e\u8868\u793a\u3002\u5373\u4f7f\u8f93\u5165\u662f\u4e8c\u503c\u56fe\u50cf\uff0c\u7ecf\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\u540e\u5f97\u5230\u7684\u9891\u8c31\u4e5f\u4e0d\u662f\u7b80\u5355\u7684\u4e8c\u503c\u5206\u5e03\uff0c\u800c\u662f\u590d\u6742\u7684\u591a\u7ea7\u7070\u5ea6\u6a21\u5f0f\u3002</li> </ol> <p>\u9898\u76ee</p> <p>1.1 \u4e00\u5e45\u4e8c\u503c\u56fe\u50cf\u7684\u5085\u91cc\u53f6\u53d8\u6362\u9891\u8c31\u662f(B )</p> <p>A\uff0e\u4e00\u5e45\u4e8c\u503c\u56fe\u50cf\uff1b \u4e00\u5e45\u7070\u5ea6\u56fe\u50cf\uff1b \u4e00\u5e45\u590d\u6570\u56fe\u50cf\uff1b\u4e00\u5e45\u5f69\u8272\u56fe\u50cf\u3002 1.2 \u5bf9\u4e8e\u4f4e\u901a\u548c\u9ad8\u901a\u5df4\u7279\u6c83\u65af\u6ee4\u6ce2\u5668\u53d9\u8ff0\u4e0d\u6b63\u786e\u7684\u662f(A )</p> <p>\u5747\u6709\u76f8\u540c\u7684\u622a\u6b62\u9891\u7387\uff1b\u5747\u80fd\u51cf\u5f31\u632f\u94c3\u6548\u5e94\uff1b\u5904\u7406\u540e\u7684\u56fe\u50cf\u5747\u6bd4\u4f4e\u901a\u548c\u9ad8\u901a\u5904\u7406\u7684\u8981\u5149\u6ed1\u4e00\u4e9b ; \u90fd\u53ef\u4ee5\u6d88\u9664\u865a\u5047\u8f6e\u5ed3</p> <p>1.3 \u60f3\u8981\u964d\u4f4e\u56fe\u50cf\u4e2d\u7684\u566a\u58f0\uff0c\u4e0b\u5217\u9891\u57df\u8fd0\u7b97\u4e2d\u7684\uff08 C\uff09\u6548\u679c\u597d\u4e00\u4e9b\u3002</p> <p></p> <p>1.4 \u4e0b\u9762\u8bf4\u6cd5\u6b63\u786e\u7684\u662f (B )</p> <p>A.\u57fa\u4e8e\u50cf\u7d20\u7684\u56fe\u50cf\u589e\u5f3a\u65b9\u6cd5\u662f\u4e00\u79cd\u7ebf\u6027\u7070\u5ea6\u53d8\u6362</p> <p>B.\u57fa\u4e8e\u50cf\u7d20\u7684\u56fe\u50cf\u589e\u5f3a\u65b9\u6cd5\u662f\u57fa\u4e8e\u7a7a\u95f4\u57df\u7684\u56fe\u50cf\u589e\u5f3a\u65b9\u6cd5\u7684\u4e00\u79cd</p> <p>C.\u57fa\u4e8e\u9891\u57df\u7684\u56fe\u50cf\u589e\u5f3a\u662f\u7531\u4e8e\u5e38\u7528\u5230\u5085\u91cc\u53f6\u53d8\u6362\u548c\u5085\u91cc\u53f6\u53cd\u53d8\u6362\uff0c\u6240\u4ee5\u603b\u6bd4\u57fa\u4e8e\u56fe\u50cf\u57df\u7684\u65b9 \u6cd5\u8ba1\u7b97\u590d\u6742\u6027\u9ad8</p> <p>B.\u57fa\u4e8e\u9891\u57df\u7684\u56fe\u50cf\u589e\u5f3a\u65b9\u6cd5\u6bd4\u57fa\u4e8e\u7a7a\u57df\u7684\u56fe\u50cf\u589e\u5f3a\u6548\u679c\u597d</p> <p>1.5 \u4e00\u5e45\u7070\u5ea6\u56fe\u50cf\u8fdb\u884c\u4e8c\u7ef4\u7684\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362\u540e\u7684\u9891\u8c31\u56fe\u4e2d\uff0c\u6700\u4eae\u7684\u90e8\u5206\u5bf9\u5e94\u7740\u539f\u59cb\u56fe\u50cf\u7684 ( B )</p> <p>A.\u5feb\u53d8\u5316\u91cf;B. \u6162\u53d8\u5316\u91cf; C.\u6c34\u5e73\u53d8\u6362\u91cf; D.\u5782\u76f4\u53d8\u6362\u91cf</p> <p>1.6 \u56fe\u50cf\u6ee4\u6ce2\u7684\u65b9\u6cd5\u6309\u5904\u7406\u57df\u53ef\u5206\u4e3a         \u7a7a\u95f4\u6ee4\u6ce2              \u548c   \u65f6\u95f4\u6ee4\u6ce2                   \u3002</p> <p>1.7 \u56fe\u50cf\u9510\u5316\u9664\u4e86\u5728\u7a7a\u95f4\u57df\u8fdb\u884c\u5916\uff0c\u4e5f\u53ef\u4ee5\u5728        \u65f6\u95f4\u57df            \u8fdb\u884c\u3002</p> <p>1.8 \u6839\u636e\u5085\u91cc\u53f6\u53d8\u6362 \u7684       \u53ef\u5206\u79bb              \u7279\u6027 \uff0c\u53ef\u5c06\u4e8c\u7ef4\u5085\u91cc \u53f6\u53d8\u6362\u5206\u89e3\u6210 \u4e24\u4e2a\u4e00\u7ef4\u5085\u91cc\u53f6\u53d8\u6362 \u6765\u505a\u3002\u56fe\u50cf\u7684\u5085\u91cc\u53f6\u53d8\u6362\u9891\u8c31\u5b9a\u6027\u8868\u793a\u56fe\u50cf\u7684\u7eb9\u7406\u5206\u5e03\u7279\u5f81\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u82e5\u56fe\u50cf\u7684\u7eb9\u7406\u5206 \u5e03  \u7a00\u758f             \uff0c\u5219\u4f4e\u9891\u5206\u91cf\u591a\uff0c\u53cd\u4e4b\u82e5 \u5bc6\u96c6          \uff0c\u5219\u9ad8\u9891\u5206\u91cf\u591a\u3002</p> <p>1.9 \u4f4e\u901a\u6ee4\u6ce2\u662f\u4f7f   \u9ad8\u9891\u5206\u91cf           \u53d7\u5230\u6291\u5236\u800c\u8ba9\u4f4e\u9891\u5206\u91cf\u987a\u5229\u901a\u8fc7\uff0c\u4ece\u800c\u8ba9              \u987a\u5229\u901a\u8fc7\uff0c\u4ece \u800c\u5b9e\u73b0\u56fe\u50cf\u5e73\u6ed1\u3002</p> <p>1.10  \u5e38 \u7528 \u7684 \u4e09 \u79cd \u4f4e \u901a \u6ee4 \u6ce2 \u5668 \u4e3a           \u7406\u60f3\u4f4e\u901a\u6ee4\u6ce2\u5668\uff0c\u5df4\u7279\u6c83\u601d\u4f4e\u901a\u6ee4\u6ce2\u5668\uff0c\u9ad8\u65af\u4f4e\u901a\u6ee4\u6ce2\u5668</p> <p>1.11 \u5728\u9891\u57df\u6ee4\u6ce2\u4e2d\uff0c\u4fdd\u7559\u56fe\u50cf\u7684\u4f4e\u9891\u90e8\u5206\u6291\u5236\u9ad8\u9891\u90e8\u5206\u7684\u5904\u7406\u79f0\u4e3a       \u4f4e\u901a        \uff0c\u8d77\u5230 \u5e73\u6ed1\u4f5c\u7528\u3002</p> <p>1.12 \u4f7f\u7528\u6ee4\u6ce2\u5668  \u9ad8\u901a\u6ee4\u6ce2\u5668               \u53ef\u4ee5\u5b9e\u73b0\u56fe\u50cf\u7684\u9510\u5316\uff0c\u4f7f\u7528       \u4f4e\u901a        \u6ee4\u6ce2\u5668\u53ef\u4ee5 \u5b9e\u73b0\u56fe\u50cf\u7684\u5e73\u6ed1\u5904\u7406\u3002</p> <p>1.13 \u7a7a\u57df\u6ee4\u6ce2\u5668\u548c\u9891\u57df\u6ee4\u6ce2\u5668\u4e4b\u95f4\u6709\u4ec0\u4e48\u5bf9\u5e94\u5173\u7cfb\uff1f</p> <p>\u4f4e\u901a\u548c\u5e73\u6ed1\u7b49\u4ef7\uff0c\u9ad8\u901a\u548c\u9510\u5316\u7b49\u4ef7</p> <p>\u7a7a\u95f4\u57df\u4e58\u6cd5\u53ef\u4ee5\u901a\u8fc7\u9891\u7387\u57df\u5377\u79ef\u5f97\u5230</p> <p>\u7a7a\u95f4\u57df\u548c\u9891\u7387\u57df\u7684\u6ee4\u6ce2\u5668\u7ec4\u6210\u4e86\u5085\u91cc\u53f6\u53d8\u6362\u5bf9\uff0c\u53ef\u4ee5\u8fdb\u884c\u76f8\u4e92\u8f6c\u6362</p>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_13","title":"\u56fe\u50cf\u7684\u590d\u539f\u548c\u91cd\u5efa","text":""},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_14","title":"\u56fe\u50cf\u9000\u5316\u4e0e\u590d\u539f\u7684\u6a21\u578b","text":"<p>\u56fe\u50cf\u590d\u539f\u76ee\u7684\uff1a\u5728\u4e8e\u6d88\u9664\u548c\u51cf\u8f7b\u5728\u56fe\u50cf\u83b7\u53d6\u53ca\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u9020\u6210\u56fe\u50cf\u54c1\u8d28\u4e0b\u964d\u7684\u73b0\u8c61\uff0c\u6062\u590d\u56fe\u50cf\u672c\u6765\u9762\u76ee</p> <p>\u5178\u578b\u7684\u56fe\u50cf\u590d\u539f\u662f\u6839\u636e\u56fe\u50cf\u7684\u9000\u5316\u7684\u5148\u9a8c\u77e5\u8bc6\u5efa\u7acb\u4e00\u4e2a\u9000\u5316\u6a21\u578b\uff0c\u4ee5\u6b64\u6a21\u578b\u4e3a\u57fa\u7840\uff0c\u91c7\u7528\u5404\u79cd\u53cd\u9000\u5316\u5904\u7406\u65b9\u6cd5\uff0c\u4f7f\u5f97\u590d\u539f\u540e\u7684\u56fe\u50cf\u7b26\u5408\u67d0\u4e9b\u6807\u51c6\uff0c\u8d28\u91cf\u5f97\u5230\u6539\u5584\u3002</p> <p>\u548c\u56fe\u50cf\u589e\u5f3a\u7684\u4e0d\u540c\uff1a\u56fe\u50cf\u589e\u5f3a\u662f\u4e00\u4e2a\u4e3b\u89c2\u8fc7\u7a0b\uff0c\u800c\u56fe\u50cf\u590d\u539f\u662f\u4e00\u4e2a\u5ba2\u89c2\u8fc7\u7a0b\uff1b\u56fe\u50cf\u589e\u5f3a\u662f\u4e00\u79cd\u5bf9\u6bd4\u5ea6\u62c9\u4f38\uff0c\u800c\u56fe\u50cf\u590d\u539f\u8ffd\u6c42\u6062\u590d\u539f\u59cb\u56fe\u50cf\u7684\u6700\u4f18\u503c</p> <p>\u56fe\u50cf\u7684\u566a\u58f0\u9020\u6210\u4e86\u56fe\u50cf\u7684\u9000\u5316\uff0c\u5e38\u89c1\u7684\u566a\u58f0\u5982\u4e0b\uff1a</p> <p></p> <ul> <li>\u9ad8\u65af\u566a\u58f0\uff1a\u7b26\u5408\u9ad8\u65af\u5206\u5e03\uff0c\u6765\u6e90\u4e8e\u7535\u5b50\u7535\u8def\u566a\u58f0\uff0c\u6216\u8005\u4f4e\u7167\u660e\u5ea6\u6216\u8005\u9ad8\u6e29</li> <li>\u745e\u5229\u566a\u58f0\uff1a\u8ddd\u79bb\u539f\u70b9\u4f4d\u79fb\u662fa,\u51fd\u6570\u56fe\u50cf\u5411\u53f3\u53d8\u5f62\uff0c\u5bf9\u7279\u5f81\u5316\u566a\u58f0\u6709\u7528</li> <li>\u4f3d\u9a6c\u566a\u58f0\uff1a\u53c8\u79f0\u7231\u5c14\u5170\u566a\u58f0\uff0c\u7528\u4e8e\u6fc0\u5149\u6210\u50cf</li> <li>\u6307\u6570\u5206\u5e03\uff1a\u53cd\u51fd\u6570\u56fe\u50cf</li> <li>\u5747\u5300\u5206\u5e03\uff1a\u6a21\u62df\u968f\u673a\u6570\u751f\u6210\u5668</li> <li>\u8109\u51b2\u5206\u5e03\uff1a\u6709\u5355\u6781\u548c\u53cc\u6781\u4e4b\u5206\uff0c\u5176\u4e2d\u53cc\u6781\u79f0\u4e3a\u6912\u76d0\u566a\u58f0\u3002\u8d1f\u8109\u51b2\u662f\u9ed1\u70b9\uff0c\u6b63\u8109\u51b2\u662f\u767d\u70b9\u3002\u7528\u4e8e\u6210\u50cf\u7684\u77ed\u6682\u505c\u7559\uff0c\u5982\u9519\u8bef\u7684\u5f00\u5173\u64cd\u4f5c</li> <li>\u5468\u671f\u566a\u58f0\uff1a\u662f\u5728\u56fe\u50cf\u83b7\u53d6\u4e2d\u4ece\u7535\u529b\u6216\u8005\u673a\u7535\u5e72\u6270\u4e2d\u4ea7\u751f *</li> </ul>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_15","title":"\u56fe\u50cf\u590d\u539f","text":"<p>\u7a7a\u95f4\u6ee4\u6ce2</p> <ul> <li>\u5747\u503c\u6ee4\u6ce2\u5668</li> <li>\u987a\u5e8f\u7edf\u8ba1\u6ee4\u6ce2\u5668\uff1a\u6700\u503c\uff0c\u4e2d\u503c\u6ee4\u6ce2\u5668</li> <li>\u4e2d\u503c\u6ee4\u6ce2\u5668\uff1a\u5bf9\u8109\u51b2\u566a\u58f0\u6548\u679c\u5f88\u597d</li> <li>\u6700\u503c\u6ee4\u6ce2\u5668\uff1a\u5bf9\u6912\u76d0\u566a\u58f0\u6548\u679c\u5f88\u597d</li> <li>\u4e2d\u70b9\u6ee4\u6ce2\u5668\uff1a\u5bf9\u9ad8\u65af\u6216\u8005\u5747\u5300\u968f\u673a\u5206\u5e03\u566a\u58f0\u6548\u679c\u5f88\u597d</li> <li>\u81ea\u9002\u5e94\u6ee4\u6ce2\u5668</li> </ul> <p>\u9891\u57df\u6ee4\u6ce2</p> <ul> <li>\u5e26\u963b\u6ee4\u6ce2\u5668</li> <li>\u4e09\u79cd\uff1a\u7406\u60f3\u5e26\u963b\u6ee4\u6ce2\u5668\uff0c\u5df4\u7279\u6c83\u601d\u5e26\u963b\u6ee4\u6ce2\u5668\uff0c\u9ad8\u65af\u5e26\u963b\u6ee4\u6ce2\u5668</li> <li>\u5e26\u901a\u6ee4\u6ce2\u5668</li> <li>\u548c\u5e26\u963b\u6ee4\u6ce2\u5668\u5bf9\u5e94\u4f4d\u7f6e\u51fd\u6570\u548c\u4e3a1</li> <li>\u901a\u5e38\u4e0d\u4f1a\u76f4\u63a5\u6267\u884c\uff0c\u800c\u662f\u5728\u4e00\u5e45\u56fe\u50cf\u4e2d\u5c4f\u853d\u9009\u4e2d\u7684\u9891\u6bb5\u5bfc\u81f4\u7684\u6548\u679c\u65f6\u975e\u5e38\u6709\u7528</li> <li>\u9677\u6ce2\u6ee4\u6ce2\u5668</li> <li>\u5fc5\u987b\u5173\u4e8e\u539f\u70b9\u5bf9\u79f0</li> <li>\u6700\u4f73\u9677\u6ce2\u6ee4\u6ce2\u5668</li> </ul> <p>\u5e38\u89c1\u9000\u5316\u6a21\u578b</p> <ul> <li>\u7ebf\u6027\uff1a\\(h(m,n) = 1 / d\\), \u662f\u7531\u4e8e\u76ee\u6807\u548c\u6210\u50cf\u7cfb\u7edf\u4e4b\u95f4\u7684\u76f8\u5bf9\u5300\u901f\u76f4\u7ebf\u8fd0\u52a8\u800c\u9020\u6210</li> <li>\u6563\u7126\u9000\u5316\u51fd\u6570\uff1a\\(h(u,v) = 1 / (\\pi R^{2})\\), \u5747\u5300\u5206\u5e03\u7684\u5149\u6591</li> <li>\u9ad8\u65af\u9000\u5316\u51fd\u6570</li> </ul> <p>\u4e09\u79cd\u8bc6\u522b\u9000\u5316\u51fd\u6570\u7684\u65b9\u6cd5\uff1a\u56fe\u50cf\u89c2\u5bdf\u6cd5\uff0c\u5b9e\u9a8c\u4f30\u8ba1\u6cd5\uff0c\u6570\u5b66\u5efa\u6a21\u6cd5</p> <p>\u6a21\u578b\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p></p> <p>\u5982\u679c\\(H(u,v)\\)\u5f88\u5c0f\uff0c\u5219\u6062\u590d\u53ea\u80fd\u5728\u9891\u57df\u4e2d\u5fc3\u8303\u56f4\u8fdb\u884c\u3002\u4e5f\u5c31\u662f\u4e00\u822c\u60c5\u51b5\u4e0b\u9006\u5411\u6ee4\u6ce2\u5668\u5e76\u4e0d\u6b63\u597d\u662f\\(1/H(u,v)\\)\uff0c\u800c\u662f\u67d0\u4e2a\u51fd\u6570\\(M(u,v)\\)\uff0c\u79f0\u4e3a\u6062\u590d\u8f6c\u79fb\u51fd\u6570\uff0c\u901a\u5e38\uff0c\u53ef\u4ee5\u5c06\u5176\u8868\u793a\u4e3a\u7528H\u8868\u793a\u7684\u5206\u6bb5\u51fd\u6570\uff1a</p> \\[ M(u,v)=\\left\\{ \\begin{matrix}   k;if H(u,v) &lt; d\\\\   1/H(u,v);other \\end{matrix} \\right. \\] <p>\u9006\u6ee4\u6ce2(\u590d\u539f)\u7684\u75c5\u6001\u6027</p> <p>\u4e0a\u8ff0\u5f0f\u5b50\\(g(x,y) = H(x,y) * f(x,y),\\)\u539f\u7406\u4e0a\u6062\u590d\u8fc7\u7a0b\u76f4\u63a5\u9664\u4ee5H(x,y)\u5373\u53ef\uff0c\u4f46\u662fH(x,y)\u53ef\u80fd\u67090\u503c\uff0c\u5bfc\u81f4\u51fa\u73b0\u5947\u5f02\u3002\u6240\u4ee5\u9006\u5411\u6ee4\u6ce2\u5668\u5fc5\u987b\u52a0\u4e0a\u67d0\u79cd\u7ea6\u675f\uff0c\u4f7f\u5f97\u9006\u5411\u6ee4\u6ce2\u5668(\u6062\u590d\u8f6c\u79fb\u51fd\u6570)\u7684\u6027\u8d28\u6bd4\u8f83\u597d\uff0c \u4e5f\u79f0\u4e3a\u6709\u7ea6\u675f\u590d\u539f\u6cd5\uff0c\u53ef\u4ee5\u89e3\u51b3\u75c5\u6001\u95ee\u9898\u3002</p> <p>\u6709\u7ea6\u675f\u590d\u539f\u6cd5</p> <ul> <li>\u80fd\u91cf\u7ea6\u675f\u590d\u539f\uff1a\u80fd\u91cf\u4fdd\u6301\u4e0d\u53d8</li> <li>\u5e73\u6ed1\u7ea6\u675f\u590d\u539f</li> <li>\u5747\u65b9\u8bef\u5dee\u6700\u5c0f\u6ee4\u6ce2\uff1a\u7ef4\u7eb3\u6ee4\u6ce2</li> </ul> <p>\u9898\u76ee</p> <p>1\u3001 \u56fe\u50cf\u9000\u5316\u5b9a\u4e49 \u662f\u6307\u56fe\u50cf\u5728\u5f62\u6210\uff0c\u4f20\u8f93\u548c\u8bb0\u5f55\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u6210\u50cf\u7cfb\u7edf\uff0c\u4f20\u8f93\u4ecb\u8d28\u548c\u8bbe\u5907\u7684\u4e0d\u5b8c\u5584\uff0c\u4f7f\u5f97\u56fe\u50cf\u7684\u8d28\u91cf\u53d8\u574f</p> <p>2\u3001 \u56fe\u50cf\u9000\u5316\u7684\u5178\u578b\u8868\u73b0 \u7531\u4e8e\u6210\u50cf\u7cfb\u7edf\u7279\u6027\u9020\u6210\u7684\u7578\u53d8</p> <p>\u566a\u58f0\u548c\u76f8\u5bf9\u8fd0\u52a8\u9020\u6210\u7684\u6a21\u7cca \u6e90\u81ea\u7535\u8def\u548c\u5316\u5b66\u56e0\u7d20\u7684\u566a\u58f0</p> <p>3\u3001 \u56fe\u50cf\u9000\u5316\u7684\u539f\u56e0 \u3002\u3002\u3002</p> <p>4\u3001 \u56fe\u50cf\u590d\u539f\u7684\u5b9a\u4e49 \u6839\u636e\u56fe\u50cf\u9000\u5316\u7684\u5148\u9a8c\u77e5\u8bc6\uff0c\u5efa\u7acb\u4e00\u4e2a\u9000\u5316\u6a21\u578b\uff0c\u5e76\u4ee5\u6b64\u6a21\u578b\u4e3a\u57fa\u7840\uff0c\u91c7\u7528\u5404\u79cd\u9006\u5411\u9000\u5316\u6280\u672f\u5bf9\u7406\u60f3\u56fe\u50cf\u8fdb\u884c\u66f4\u65b0\uff0c\u4f7f\u5f97\u56fe\u50cf\u8d28\u91cf\u5f97\u5230\u6539\u5584</p> <p>5\u3001 \u56fe\u50cf\u589e\u5f3a\u4e0e\u56fe\u50cf\u590d\u539f\u7684\u8054\u7cfb\u4e0e\u533a\u522b \u56fe\u50cf\u589e\u5f3a\u662f\u4e00\u4e2a\u4e3b\u89c2\u8fc7\u7a0b\uff0c\u800c\u56fe\u50cf\u590d\u539f\u662f\u4e00\u4e2a\u5ba2\u89c2\u8fc7\u7a0b\uff1b\u56fe\u50cf\u589e\u5f3a\u662f\u4e00\u79cd\u5bf9\u6bd4\u5ea6\u62c9\u4f38\uff0c\u800c\u56fe\u50cf\u590d\u539f\u8ffd\u6c42\u6062\u590d\u539f\u59cb\u56fe\u50cf\u7684\u6700\u4f18\u503c \u5982\u679c\u56fe\u50cf\u5df2\u7ecf\u9000\u5316\uff0c\u5219\u9700\u8981\u5148\u590d\u539f\uff0c\u518d\u589e\u5f3a</p> <p>6\u3001 \u6839\u636e\u7edf\u8ba1\u7279\u6027\uff0c\u566a\u58f0\u6709\u54ea\u4e9b\u91cd\u8981\u7c7b\u578b\uff1f \u9ad8\u65af\uff0c\u745e\u5229\uff0c\u4f3d\u9a6c\uff0c\u6307\u6570\u5206\u5e03\uff0c\u5747\u5300\u5206\u5e03\uff0c\u8109\u51b2</p> <p>7\u3001 \u5982\u4f55\u786e\u5b9a\u566a\u58f0\u7c7b\u578b\uff1f \u5468\u671f\u6027\u566a\u58f0\u53ef\u4ee5\u901a\u8fc7\u68c0\u6d4b\u56fe\u50cf\u7684\u5085\u91cc\u53f6\u8c31\u6765\u4f30\u8ba1</p> <p>\u566a\u58f0\u7684PDF\u53c2\u6570\u4e00\u822c\u4ece\u4f20\u611f\u5668\u4e2d\u8bf4\u660e\u5f97\u5230 8\u3001 \u5468\u671f\u566a\u58f0\u7684\u53c2\u6570\u5982\u4f55\u786e\u5b9a \u5468\u671f\u6027\u566a\u58f0\u53ef\u4ee5\u901a\u8fc7\u68c0\u6d4b\u56fe\u50cf\u7684\u5085\u91cc\u53f6\u8c31\u6765\u4f30\u8ba1</p> <p>9\u3001 \u5982\u4f55\u4f30\u8ba1\u9000\u5316\u51fd\u6570 \u89c2\u5bdf\u6cd5\uff0c\u5b9e\u9a8c\u6cd5\uff0c\u6570\u5b66\u5efa\u6a21\u6cd5</p> <p>10\u3001\u7b80\u8ff0\u56fe\u50cf\u9000\u5316\u6a21\u578b \u753b\u56fe</p> <p>11\u3001\u5747\u503c\u6ee4\u6ce2\u5668\u90fd\u6709\u90a3\u4e9b\u7c7b\u578b\uff1f</p> <p>12\u3001\u7ef4\u7eb3\u6ee4\u6ce2\u5668\u901a\u5e38\u7528\u4e8e (B)</p> <p>A.\u53bb\u566a   B.\u590d\u539f\u56fe\u50cf  C.\u51cf\u5c0f\u56fe\u50cf\u52a8\u6001\u8303\u56f4  D.\u5e73\u6ed1\u56fe\u50cf</p> <p>13\u3001\u4e00\u5e45\u56fe\u50cf\u4e2d\uff0c\u6709\u4e00\u79cd\u566a\u58f0\u5728\u56fe\u50cf\u83b7\u53d6\u4e2d\u4ece\u7535\u529b\u6216\u673a\u7535\u5e72\u6270\u4e2d\u4ea7\u751f\u7684\uff0c\u800c\u4e14\u8fd9 \u662f\u552f\u4e00\u7684\u4e00\u79cd\u7a7a\u95f4\u4f9d\u8d56\u578b\u566a\u58f0\uff0c\u8fd9\u79cd\u566a\u58f0\u662f(C)</p> <p>A\uff0e\u9ad8\u65af\u566a\u58f0    B.\u4f3d\u9a6c\u566a\u58f0    C.\u5468\u671f\u566a\u58f0    D.\u8109\u51b2\u566a\u58f0</p> <p>14\u3001\u4f7f\u7528\u540c\u6001\u6ee4\u6ce2\u65b9\u6cd5\u8fdb\u884c\u56fe\u50cf\u589e\u5f3a\u65f6\uff0c\u4e0d\u5305\u542b\u4ee5\u4e0b\u54ea\u4e2a\u8fc7\u7a0b\uff1f(C)</p> <p>A\uff0e\u901a\u8fc7\u5bf9\u56fe\u50cf\u53d6\u5bf9\u6570\uff0c\u5c06\u56fe\u50cf\u6a21\u578b\u4e2d\u7684\u7167\u5ea6\u5206\u91cf\u4e0e\u53cd\u5c04\u5206\u91cf\u7684\u4e58\u79ef\u9879\u5206\u5f00</p> <p>B\uff0e\u5c06\u5bf9\u6570\u56fe\u50cf\u901a\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\u5230\u9891\u57df\uff0c\u5728\u9891\u57df\u9009\u62e9\u5408\u9002\u7684\u6ee4\u6ce2\u51fd\u6570\uff0c\u8fdb\u884c \u51cf\u5f31\u4f4e\u9891\u548c\u52a0\u5f3a\u9ad8\u9891\u7684\u6ee4\u6ce2</p> <p>C\uff0e\u8ba1\u7b97\u56fe\u50cf\u4e2d\u5404\u4e2a\u7070\u5ea6\u503c\u5f97\u7d2f\u79ef\u5206\u5e03\u6982\u7387</p> <p>D\uff0e\u5bf9\u6ee4\u6ce2\u7ed3\u679c\u8fdb\u884c\u5085\u91cc\u53f6\u9006\u53d8\u6362\u548c\u5bf9\u6570\u9006\u8fd0\u7b97</p>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_16","title":"\u5f69\u8272\u56fe\u50cf\u5904\u7406","text":"<p>\u4e3a\u4f55\u5f69\u8272\u56fe\u50cf\u8981RGB\u5230HSI\u7684\u6a21\u578b\u8f6c\u6362\u624d\u80fd\u5904\u7406</p> <p>\u5982\u679c\u76f4\u63a5\u5bf9RGB\u6a21\u578b\u4e2d\u7684RGB\u5206\u91cf\u8fdb\u884c\u5904\u7406\uff0c\u5f88\u53ef\u80fd\u76f4\u63a5\u5f15\u8d77\u4e09\u4e2a\u91cf\u4e0d\u540c\u7a0b\u5ea6\u7684\u53d8\u5316\uff0c\u7531RGB\u6a21\u578b\u63cf\u8ff0\u7684\u5904\u7406\u56fe\u50cf\u5c31\u4f1a\u51fa\u73b0\u8272\u5dee\u95ee\u9898\uff0c\u989c\u8272\u4e0a\u53ef\u80fd\u4f1a\u6709\u4e25\u91cd\u5931\u771f\u3002\u56e0\u6b64\uff0c\u4eba\u4eec\u5728\u6b64\u57fa\u7840\u4e0a\u63d0\u51fa\u4e86HSI\u6a21\u578b\uff0c\u5b83\u7684\u51fa\u73b0\u4f7f\u5f97\u4fdd\u6301\u5f69\u8272\u65e0\u5931\u771f\u60c5\u51b5\u4e0b\u7684\u5904\u7406\u56fe\u50cf\u53d8\u4e3a\u53ef\u80fd</p> <p>\u901a\u8fc7\u5148\u5c06RGB\u6a21\u578b\u8f6c\u6362\u4e3aHSI\u6a21\u578b\uff0c\u5f97\u5230\u76f8\u5173\u6027\u8f83\u5c0f\u7684\u8272\u8c03\uff0c\u9971\u548c\u5ea6\uff0c\u4eae\u5ea6\uff0c\u7136\u540e\u5bf9\u5176\u4e2d\u7684\u4eae\u5ea6\u5206\u91cf\u8fdb\u884c\u5904\u7406\uff0c\u518d\u8f6c\u5316\u4e3aRGB\uff0c\u5219\u53ef\u4ee5\u907f\u514d\u76f4\u63a5\u5bf9RGB\u5206\u91cf\u8fdb\u884c\u5904\u7406\u800c\u9020\u6210\u7684\u5931\u771f\u3002</p> <p>RGB\u5149\u6ed1\u548cHSI\u5149\u6ed1\u7684\u533a\u522b</p> <ul> <li>RGB\u5149\u6ed1\u548cHSI\u5149\u6ed1\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u5b83\u4eec\u6240\u57fa\u4e8e\u7684\u989c\u8272\u6a21\u578b\u4e0d\u540c\uff0c\u4ee5\u53ca\u5728\u56fe\u50cf\u5904\u7406\u4e2d\u7684\u5e94\u7528\u573a\u666f\u5dee\u5f02\uff1a   \u989c\u8272\u6a21\u578b\u4e0d\u540c\uff1a   RGB\u6a21\u578b\uff1a\u57fa\u4e8e\u7ea2\u3001\u7eff\u3001\u84dd\u4e09\u539f\u8272\u7684\u52a0\u8272\u6df7\u8272\u539f\u7406\u3002\u5b83\u76f4\u63a5\u5bf9\u5e94\u4e8e\u663e\u793a\u5668\u7684\u53d1\u5149\u7279\u6027\uff0c\u662f\u8bbe\u5907\u4f9d\u8d56\u7684\u989c\u8272\u6a21\u578b\u3002   HSI\u6a21\u578b\uff1a\u57fa\u4e8e\u8272\u8c03\uff08Hue\uff09\u3001\u9971\u548c\u5ea6\uff08Saturation\uff09\u548c\u5f3a\u5ea6\uff08Intensity\uff09\u3002\u66f4\u63a5\u8fd1\u4eba\u7c7b\u89c6\u89c9\u7cfb\u7edf\u5bf9\u989c\u8272\u7684\u611f\u77e5\u65b9\u5f0f\uff0c\u5176\u4e2d\u8272\u8c03\u8868\u793a\u989c\u8272\u7684\u79cd\u7c7b\uff0c\u9971\u548c\u5ea6\u8868\u793a\u989c\u8272\u7684\u7eaf\u5ea6\uff0c\u5f3a\u5ea6\u8868\u793a\u989c\u8272\u7684\u660e\u4eae\u7a0b\u5ea6\u3002   \u5149\u6ed1\u6548\u679c\u5dee\u5f02\uff1a   RGB\u5149\u6ed1\uff1a\u5728RGB\u7a7a\u95f4\u4e2d\u8fdb\u884c\u5149\u6ed1\u5904\u7406\u65f6\uff0c\u4e3b\u8981\u9488\u5bf9\u4e09\u4e2a\u5206\u91cf\uff08R\u3001G\u3001B\uff09\u5206\u522b\u6216\u8054\u5408\u8fdb\u884c\u6ee4\u6ce2\u64cd\u4f5c\u3002\u7531\u4e8eRGB\u5404\u5206\u91cf\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u8f83\u5f31\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u5bfc\u81f4\u989c\u8272\u5931\u771f\u3002   HSI\u5149\u6ed1\uff1a\u5728HSI\u7a7a\u95f4\u4e2d\u8fdb\u884c\u5149\u6ed1\u5904\u7406\u65f6\uff0c\u901a\u5e38\u53ea\u5bf9\u5f3a\u5ea6\uff08I\uff09\u5206\u91cf\u8fdb\u884c\u6ee4\u6ce2\uff0c\u800c\u4fdd\u6301\u8272\u8c03\uff08H\uff09\u548c\u9971\u548c\u5ea6\uff08S\uff09\u4e0d\u53d8\u3002\u8fd9\u6837\u53ef\u4ee5\u5728\u51cf\u5c11\u566a\u58f0\u7684\u540c\u65f6\u8f83\u597d\u5730\u4fdd\u7559\u989c\u8272\u4fe1\u606f\uff0c\u907f\u514d\u51fa\u73b0\u989c\u8272\u5931\u771f\u7684\u95ee\u9898\u3002   \u5e94\u7528\u573a\u666f\uff1a   RGB\u5149\u6ed1\uff1a\u9002\u7528\u4e8e\u9700\u8981\u4e25\u683c\u4fdd\u6301\u539f\u59cb\u8272\u5f69\u6bd4\u4f8b\u7684\u573a\u666f\uff0c\u5982\u533b\u5b66\u56fe\u50cf\u5904\u7406\u7b49\u3002   HSI\u5149\u6ed1\uff1a\u66f4\u9002\u5408\u4e8e\u81ea\u7136\u56fe\u50cf\u5904\u7406\uff0c\u5c24\u5176\u662f\u5f53\u5e0c\u671b\u5728\u53bb\u566a\u7684\u540c\u65f6\u5c3d\u91cf\u4fdd\u6301\u56fe\u50cf\u7684\u989c\u8272\u7279\u5f81\u65f6\u3002</li> </ul> <p>\u4e3a\u4ec0\u4e48\u8981\u7814\u7a76\u5f69\u8272\u56fe\u50cf\u5904\u7406</p> <ul> <li>\u7b26\u5408\u4eba\u7c7b\u7684\u89c6\u89c9\u7279\u70b9\uff0c\u4eba\u7c7b\u53ef\u4ee5\u5206\u522b\u51e0\u5343\u79cd\u989c\u8272\u8272\u8c03\u548c\u4eae\u5ea6\uff0c\u4f46\u662f\u53ea\u80fd\u5206\u8fa8\u51e0\u5341\u79cd\u7070\u5ea6\u5c42\u6b21</li> <li>\u4e0d\u4ec5\u53ef\u4ee5\u7b80\u5316\u76ee\u6807\u7269\u7684\u533a\u5206\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e\u76ee\u6807\u7684\u989c\u8272\u7279\u5f81\u8fdb\u884c\u76ee\u6807\u8bc6\u522b</li> </ul>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_17","title":"\u56fe\u50cf\u5206\u5272","text":""},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_18","title":"\u5b9a\u4e49\u548c\u4f9d\u636e","text":"<p>\u5b9a\u4e49\uff1a\u5c06\u56fe\u50cf\u533a\u57df\u5206\u5272\u4e3a\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u7684\u5b50\u533a\u57df</p> <p>\u7279\u6027\uff1a\u5b8c\u5907\u6027\uff0c\u72ec\u7acb\u6027\uff0c\u5355\u4e00\u6027\uff0c\u4e92\u65a5\u6027\uff0c\u8fde\u901a\u6027</p> <p>\u7070\u5ea6\u56fe\u50cf\u5206\u5272\u7684\u4f9d\u636e</p> <p>\u57fa\u4e8e\u50cf\u7d20\u7070\u5ea6\u503c\u7684\u4e24\u4e2a\u57fa\u672c\u7279\u6027</p> <ul> <li>\u4e0d\u8fde\u7eed\u6027\uff1a\u533a\u57df\u4e4b\u95f4\uff0c\u8fb9\u7f18\u50cf\u7d20\u5177\u6709\u4e0d\u8fde\u7eed\u6027\uff0c\u56e0\u6b64\u5148\u627e\u5230\u4ea4\u754c\u8fb9\u754c\uff0c\u518d\u786e\u5b9a\u533a\u57df\u3002</li> <li>\u76f8\u4f3c\u6027\uff1a\u533a\u57df\u5185\u90e8\uff0c\u540c\u4e00\u533a\u57df\u5185\u50cf\u7d20\u4e00\u822c\u5177\u6709\u7070\u5ea6\u76f8\u4f3c\u6027\uff0c\u636e\u6b64\u627e\u5230\u7070\u5ea6\u76f8\u4f3c\u533a\u57df\uff0c\u5916\u8f6e\u5ed3\u5c31\u662f\u5bf9\u8c61\u8fb9\u7f18</li> </ul>"},{"location":"TEST/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/#_19","title":"\u5206\u5272\u65b9\u6cd5","text":"<p>\u5206\u7c7b\uff1a\u6839\u636e\u7070\u5ea6\u7684\u4e0d\u8fde\u7eed\u6027\u548c\u76f8\u4f3c\u6027\uff0c\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ul> <li>\u8fb9\u7f18\u68c0\u6d4b\u6cd5</li> <li>\u533a\u57df\u751f\u6210\u6cd5</li> <li> <p>\u70b9\u68c0\u6d4b</p> </li> <li> <p>\u4f7f\u7528\u7a7a\u95f4\u57df\u7684\u9ad8\u901a\u6ee4\u6ce2\u5668\u6765\u68c0\u6d4b\u5b64\u7acb\u70b9</p> </li> <li>\u6bd4\u5982\u548c\u6a21\u677f\u8fdb\u884c\u8fd0\u7b97\u4e4b\u540e\uff0c\u67e5\u770b\u503c\u7684\u548c\u662f\u5426\u5927\u4e8e\u9608\u503c</li> <li> <p>\u7ebf\u68c0\u6d4b</p> </li> <li> <p>\u901a\u8fc7\u8ba1\u7b97\u6bd4\u8f83\u5178\u578b\u7684\u6a21\u677f\u7684\u8ba1\u7b97\u503c\uff0c\u786e\u5b9a\u67d0\u4e2a\u70b9\u662f\u5426\u5728\u67d0\u4e2a\u65b9\u5411\u7684\u7ebf\u4e0a</p> </li> <li>\u6a21\u677f\u7684\u7cfb\u6570\u548c\u4e3a0\uff0c\u800c\u611f\u5174\u8da3\u7684\u65b9\u5411\u7684\u7cfb\u6570\u503c\u8f83\u5927</li> <li> <p>\u8fb9\u7f18\u68c0\u6d4b</p> </li> <li> <p>\u57fa\u672c\u601d\u60f3\uff1a\u8ba1\u7b97\u5c40\u90e8\u5fae\u5206\u7b97\u5b50</p> </li> <li>\u53ef\u5206\u4e3a\u4e24\u6b65\uff1a<ul> <li>\u5bf9\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u50cf\u7d20\u65bd\u52a0\u68c0\u6d4b\u7b97\u5b50</li> <li>\u6839\u636e\u4e8b\u5148\u786e\u5b9a\u7684\u51c6\u5219\uff0c\u5bf9\u68c0\u6d4b\u7b97\u5b50\u7684\u8f93\u51fa\u8fdb\u884c\u5224\u5b9a\uff0c\u786e\u5b9a\u8be5\u50cf\u7d20\u70b9\u662f\u5426\u4e3a\u8fb9\u7f18\u70b9</li> </ul> </li> <li>\u5229\u7528\u4e00\u9636\u5bfc\u6570\u68c0\u6d4b\u8fb9\u7f18\u70b9\uff1a\u68af\u5ea6\u7b97\u5b50\u6cd5<ul> <li>Roberts\u68af\u5ea6\u7b97\u5b50\u6cd5(4\u70b9\u5dee\u5206\u6cd5)\uff1a\u7279\u70b9\u5c31\u662f\u75284\u70b9\u8fdb\u884c\u5dee\u5206\uff0c\u6c42\u5f97\u68af\u5ea6\uff0c\u65b9\u6cd5\u7b80\u5355\u3002\u7f3a\u70b9\u662f\u5bf9\u566a\u58f0\u654f\u611f\uff0c\u5e38\u7528\u4e8e\u4e0d\u542b\u566a\u58f0\u7684\u56fe\u50cf\u8fb9\u7f18\u70b9\u68c0\u6d4b</li> <li>\u5e73\u6ed1\u68af\u5ea6\u7b97\u5b50\u6cd5(\u5e73\u5747\u5dee\u5206\u6cd5)\uff1a</li> <li>Prewitt\u68af\u5ea6\u7b97\u5b50\u6cd5\uff1a\u5148\u6c42\u5e73\u5747\uff0c\u540e\u6c42\u68af\u5ea6</li> <li>Sobel\u7b97\u5b50\u6cd5\uff1a\u52a0\u6743\u5e73\u5747\u5dee\u5206\u6cd5</li> </ul> </li> <li>\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u6cd5<ul> <li>LoG\u7b97\u5b50\uff1a\u9ad8\u65af\u578b\u62c9\u666e\u62c9\u65af\u7b97\u5b50</li> </ul> </li> </ul> <p>\u56fe\u50cf\u5904\u7406\u6a21\u677f\u7684\u7279\u70b9\uff1a</p> <ol> <li>\u5e73\u6ed1\u6a21\u677f\u7279\u70b9\uff1a\u6a21\u677f\u5185\u7cfb\u6570\u5168\u4e3a\u6b63\uff0c\u7cfb\u6570\u548c\u4e3a1</li> <li>\u8fb9\u7f18\u68c0\u6d4b\u6a21\u677f\u7279\u70b9\uff1a\u7cfb\u6570\u6709\u6b63\u6709\u8d1f\uff0c\u8868\u793a\u5dee\u5206\u8fd0\u7b97\uff0c\u7cfb\u6570\u548c\u4e3a0\u3002\u5bf9\u4e00\u822c\u56fe\u50cf\uff0c\u5904\u7406\u4e4b\u540e\u662f\u8fb9\u7f18\u70b9</li> <li>\u9510\u5316\u6a21\u677f\u7279\u70b9\uff1a\u540c\u6837\u6709\u6b63\u6709\u8d1f\uff0c\u7cfb\u6570\u548c\u4e3a1</li> </ol> <p>\u970d\u592b\u53d8\u6362</p> <ul> <li>\u95ee\u9898\u63d0\u51fa\uff1a\u5728\u8fb9\u754c\u70b9\u96c6\u6536\u96c6\u4e4b\u540e\uff0c\u9700\u8981\u8fdb\u884c\u8fde\u63a5\uff0c\u5f62\u6210\u5b8c\u6574\u7684\u8fb9\u754c</li> <li>\u529f\u80fd\uff1a\u53ef\u4ee5\u5c06\u5f85\u68c0\u6d4b\u66f2\u7ebf\u5bf9\u5e94\u50cf\u7d20\u95f4\u7684\u6574\u4f53\u5173\u7cfb\u68c0\u6d4b\u51fa\u5df2\u77e5\u5f62\u72b6\u7684\u66f2\u7ebf\uff0c\u5e76\u7528\u53c2\u6570\u65b9\u7a0b\u63cf\u8ff0\u51fa\u6765</li> <li>\u539f\u7406\uff1a\u56fe\u50cf\u7a7a\u95f4\u5f85\u68c0\u6d4b\u76f4\u7ebf -&gt; \u53c2\u6570\u7a7a\u95f4\u5cf0\u503c\u70b9</li> <li>\u5bf9\u5e94\u5173\u7cfb\uff1a</li> <li>\u56fe\u50cf\u4e2d\u7684\u4e00\u6761\u76f4\u7ebf\uff0c\u5bf9\u5e94\u53c2\u6570\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9</li> <li>\u56fe\u50cf\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u5bf9\u5e94\u53c2\u6570\u7a7a\u95f4\u4e2d\u7684\u4e00\u6761\u6b63\u5f26\u66f2\u7ebf</li> <li>\u56fe\u50cf\u7a7a\u95f4\u4e2d\u7684\u4e00\u6761\u76f4\u7ebf\u7684\u591a\u4e2a\u5171\u7ebf\u70b9\uff0c\u6620\u5c04\u4e3a\u53c2\u6570\u7a7a\u95f4\u76f8\u4ea4\u4e8e\u4e00\u70b9\u7684\u591a\u6761\u6b63\u5f26\u66f2\u7ebf</li> <li>\u8fb9\u7f18\u8fde\u63a5\uff1a</li> <li>\u8ba1\u7b97\u56fe\u50cf\u68af\u5ea6-&gt;\u8bbe\u95e8\u9650-&gt;\u4e8c\u503c\u56fe\u50cf</li> <li>\u5728\u53c2\u6570\u5e73\u9762\u7ec6\u5206</li> <li>\u5bf9\u50cf\u7d20\u9ad8\u5ea6\u96c6\u4e2d\u7684\u5730\u65b9\uff0c\u68c0\u9a8c\u5176\u7d2f\u52a0\u5668\u5355\u5143\u6570\u76ee</li> <li>\u68c0\u9a8c\u9009\u62e9\u7684\u5355\u5143\u4e2d\u7684\u50cf\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5982\u679c\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u8d85\u8fc7\u67d0\u4e00\u95e8\u9650\uff0c\u5219\u4e0d\u8fde\u7eed</li> </ul> <p>\u95e8\u9650\u5316\u5206\u5272</p> <p>\u9996\u5148\u662f\u7b80\u5355\u7684\u5355\u503c\u9608\u503c\uff0c\u5728\u6570\u5b66\u4e0a\u63cf\u8ff0\u4e3a\\(g(x,y) = if(f(x,y)&gt;T) 1 else 0\\),\u5c06\u50cf\u7d20\u8fdb\u884c\u8f6c\u6362\uff0c\u4e3a\u4e8c\u503c\u56fe\u50cf</p> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7\u591a\u4e2a\u95e8\u65b9\u6cd5\u5c06\u56fe\u50cf\u5206\u5272\u4e3a\u4e0d\u540c\u7684\u76ee\u6807\u7269\u548c\u80cc\u666f\u533a\u57df</p> <p>\u533a\u57df\u5206\u5272\u6cd5</p> <p>\u539f\u7406\uff1a\u5229\u7528\u540c\u4e00\u533a\u57df\u5185\u7070\u5ea6\u503c\u76f8\u4f3c\u6027\uff0c\u5c06\u76f8\u4f3c\u7684\u533a\u57df\u5408\u5e76\uff0c\u628a\u4e0d\u76f8\u4f3c\u7684\u533a\u57df\u5408\u5e76\u3002\u5e38\u89c1\u7684\u5206\u7c7b\u6709\uff1a\u533a\u57df\u751f\u957f\u6cd5\uff0c\u5408\u5e76\u6cd5\uff0c\u7a7a\u95f4\u805a\u7c7b\u6cd5</p> <ul> <li>\u533a\u57df\u751f\u957f\u6cd5(\u7c7b\u4f3c\u805a\u7c7b)\uff1a</li> <li>\u539f\u7406\uff1a\u57fa\u4e8e\u76f8\u4f3c\u6027\u8fdb\u884c\u8d2a\u5fc3\u6269\u5f20\uff0c\u76f4\u5230\u4e0d\u80fd\u5408\u5e76\u5219\u505c\u6b62</li> <li>\u6b65\u9aa4\uff1a<ul> <li>\u786e\u5b9a\u8981\u5206\u5272\u533a\u57df\u7684\u6570\u76ee\uff0c\u5e76\u5728\u6bcf\u4e2a\u533a\u57df\u9009\u62e9\u4e00\u4e2a\u4ee3\u8868\u70b9</li> <li>\u9009\u62e9\u6709\u610f\u4e49\u7684\u7279\u5f81\u548c\u90bb\u57df\u65b9\u5f0f</li> <li>\u786e\u5b9a\u76f8\u4f3c\u6027\u51c6\u5219</li> </ul> </li> </ul> <p>\u76f4\u63a5\u770b\u9898</p> <ol> <li>\u5728\u5b9e\u9645\u91c7\u7528\u970d\u592b\u53d8\u6362\u68c0\u6d4b\u68c0\u6d4b\u76f4\u7ebf\u65f6\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u91c7\u7528y = kx+ b\u7684\u8868\u793a\u5f62\u5f0f\uff1f    \u4f7f\u7528y = kx + b\u8868\u793a\u4e00\u6761\u76f4\u7ebf\u5e26\u6765\u7684\u95ee\u9898\u662f\uff0c\u5f53\u76f4\u7ebf\u63a5\u8fd1\u4e8e\u5782\u76f4\u7684\u65f6\u5019\uff0c\u76f4\u7ebf\u659c\u7387\u4f1a\u6210\u4e3a\u65e0\u7a77\u5927\uff0c\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u3002\u53ef\u4ee5\u4f7f\u7528\u6781\u5750\u6807\u76f4\u7ebf\u65b9\u7a0b\u89e3\u51b3</li> <li>\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u8fb9\u7f18\u8ddf\u8e2a\uff1f    \u5728\u4e00\u4e9b\u573a\u5408\uff0c\u4ec5\u4ec5\u5f97\u5230\u8fb9\u7f18\u70b9\u662f\u4e0d\u591f\u7684\uff0c\u7531\u4e8e\u566a\u58f0\u548c\u5149\u7167\u7b49\u56e0\u7d20\u4f1a\u4f7f\u5f97\u539f\u672c\u7684\u8fb9\u7f18\u51fa\u73b0\u95f4\u65ad\u73b0\u8c61\u3002    \u56e0\u6b64\uff0c\u5728\u4f7f\u7528\u8fb9\u7f18\u68c0\u6d4b\u7b97\u6cd5\u540e\uff0c\u6709\u5fc5\u8981\u91c7\u7528\u8fb9\u7f18\u8ffd\u8e2a\u7b97\u6cd5\u6765\u8f6c\u6362\u4e3a\u6709\u7528\u4fe1\u606f</li> <li>\u9608\u503c\u5206\u5272\u6280\u672f\u9002\u7528\u4e8e\u4ec0\u4e48\u573a\u666f\u4e0b\u7684\u56fe\u50cf\u5206\u5272\uff1f    \u7070\u5ea6\u9608\u503c\u5206\u5272\u6982\u5ff5 + \u901a\u5e38\u7528\u4e8e\u56fe\u50cf\u4e2d\u76ee\u6807\u548c\u80cc\u666f\u5177\u6709\u4e0d\u540c\u7684\u7070\u5ea6\u96c6\u5408\uff1a\u76ee\u6807\u7070\u5ea6\u96c6\u5408\u548c\u80cc\u666f\u7070\u5ea6\u96c6\u5408</li> <li>\u8fb9\u7f18\u68c0\u6d4b\u7684\u7406\u8bba\u4f9d\u636e\u662f\u4ec0\u4e48\uff1f\u6709\u54ea\u4e9b\u65b9\u6cd5\uff1f    \u8fb9\u7f18\u68c0\u6d4b\u57fa\u4e8e\u5e45\u5ea6\u4e0d\u8fde\u7eed\u6027\u8fdb\u884c\u7684\u5206\u5272\u65b9\u6cd5\uff0c\u901a\u5e38\u91c7\u7528\u5dee\u5206\uff0c\u68af\u5ea6\uff0c\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u7b49\u9ad8\u901a\u6ee4\u6ce2\u65b9\u6cd5\u8fdb\u884c\u68c0\u6d4b</li> <li>\u6bd4\u8f83 Sobel \u7b97\u5b50\u3001Roberts \u7b97\u5b50\u3001LoG \u7b97\u5b50\u8fdb\u884c\u6027\u80fd\u6bd4\u8f83\u3002    \u5176\u4e2dRoberts\u7b97\u5b50\u7684\u5b9a\u4f4d\u7cbe\u5ea6\u9ad8\uff0c\u4f46\u5bb9\u6613\u4e22\u5931\u90e8\u5206\u8fb9\u7f18\uff0c\u6297\u566a\u80fd\u529b\u5dee\uff0c\u9002\u7528\u4e8e\u4f4e\u566a\u58f0\uff0c\u8fb9\u7f18\u9661\u5ced\u7684\u96c6\u5408    \u800cSobel\u7b97\u5b50\uff0c\u5bf9\u56fe\u50cf\u5148\u5e73\u6ed1\u518d\u6c42\u68af\u5ea6\uff0c\u6240\u4ee5\u53ef\u4ee5\u62b5\u6297\u4e00\u5b9a\u566a\u58f0\uff0c\u4f46\u662f\u4e0d\u80fd\u6392\u9664\u68c0\u6d4b\u7ed3\u679c\u7684\u865a\u62df\u8fb9\u7f18\uff0c\u5bb9\u6613\u5448\u73b0\u591a\u50cf\u7d20\u5bbd\u5ea6    LoG\u63d0\u9ad8\u4e86\u6297\u566a\u58f0\u80fd\u529b\uff0c\u4f46\u662f\u5c06\u9510\u5316\u7684\u8fb9\u7f18\u4fe1\u606f\u5e73\u6ed1\u4e86\uff0c\u751a\u81f3\u65e0\u6cd5\u68c0\u6d4b\u5230</li> <li>\u4e00\u4e2a\u597d\u7684\u8fb9\u7f18\u68c0\u6d4b\u7b97\u5b50\u5e94\u5177\u6709\u4e09\u4e2a\u6307\u6807?    \u4f4e\u5931\u8bef\u7387\uff1a\u51cf\u5c11\u8fb9\u7f18\u4e22\u5931\uff0c\u4e5f\u8981\u51cf\u5c11\u8bef\u5224    \u9ad8\u4f4d\u7f6e\u7cbe\u5ea6\uff1a\u8fb9\u7f18\u51fa\u73b0\u5728\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a    \u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u6709\u552f\u4e00\u76f8\u5e94</li> <li>\u970d\u592b\u53d8\u6362\u7684\u76ee\u7684\u3001\u601d\u60f3\u548c\u539f\u7406\u5206\u522b\u4e3a\u4ec0\u4e48\uff1f    \u539f\u7406\uff1a\u70b9-\u7ebf\u7684\u5bf9\u5076\u6027</li> <li>\u970d\u592b\u53d8\u6362\u7684\u6027\u8d28\uff1f    \u4e09\u4e2a\u6620\u5c04</li> <li>\u4ec0\u4e48\u662f\u533a\u57df\u5206\u5272\uff0c\u5e38\u7528\u7684\u533a\u57df\u5206\u5272\u65b9\u6cd5\u6709\u54ea\u4e9b\uff1f    \u6839\u636e\u4e8b\u5148\u786e\u5b9a\u7684\u76f8\u4f3c\u6027\u51c6\u5219\uff0c\u76f4\u63a5\u53d6\u51fa\u82e5\u5e72\u7279\u5f81\u76f8\u8fd1\u6216\u8005\u76f8\u540c\u7684\u50cf\u7d20\u7ec4\u6210\u533a\u57df\u3002\u5e38\u89c1\u7684\u5206\u7c7b\u6709\uff1a\u533a\u57df\u751f\u957f\u6cd5\uff0c\u5408\u5e76\u6cd5\uff0c\u7a7a\u95f4\u805a\u7c7b\u6cd5</li> <li>\u533a\u57df\u589e\u957f\u65b9\u6cd5\u7684\u539f\u7406\u548c\u6b65\u9aa4\uff1f     \u89c1\u4e0a</li> <li>\u57fa\u672c\u7684\u751f\u957f\u51c6\u5219\u548c\u65b9\u6cd5\u5305\u62ec\u54ea\u4e9b\uff1f     \u57fa\u4e8e\u533a\u57df\u7070\u5ea6\u5dee\uff0c\u57fa\u4e8e\u533a\u57df\u5185\u7070\u5ea6\u7edf\u8ba1\u5206\u5e03\u6027\u8d28\u548c\u57fa\u4e8e\u533a\u57df\u5f62\u72b6</li> </ol> <p>\u56fe\u50cf\u52a0\u51cf\u4e58\u9664\u7684matlab\u4f2a\u4ee3\u7801</p> ApacheConf<pre><code>% \u8bfb\u53d6\u4e24\u5f20\u76f8\u540c\u5927\u5c0f\u7684\u7070\u5ea6\u56fe\u50cf\nimg1 = imread('image1.jpg');\nimg2 = imread('image2.jpg');\n\n% \u5c06\u56fe\u50cf\u8f6c\u6362\u4e3a\u7070\u5ea6\u56fe\u50cf\uff08\u5982\u679c\u5b83\u4eec\u4e0d\u662f\u7070\u5ea6\u56fe\u50cf\uff09\nif size(img1, 3) == 3\n    img1 = rgb2gray(img1);\nend\nif size(img2, 3) == 3\n    img2 = rgb2gray(img2);\nend\n\n% \u786e\u4fdd\u4e24\u5f20\u56fe\u50cf\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\nif size(img1) ~= size(img2)\n    error('\u4e24\u5f20\u56fe\u50cf\u7684\u5927\u5c0f\u5fc5\u987b\u76f8\u540c');\nend\n\n% \u83b7\u53d6\u56fe\u50cf\u7684\u5c3a\u5bf8\n[rows, cols] = size(img1);\n\n% \u56fe\u50cf\u52a0\u6cd5\nimgAdd = zeros(rows, cols, 'uint8');\nfor i = 1:rows\n    for j = 1:cols\n        % \u9632\u6b62\u6ea2\u51fa\n        imgAdd(i, j) = min(255, img1(i, j) + img2(i, j));\n    end\nend\n% \u663e\u793a\u52a0\u6cd5\u7ed3\u679c\nfigure;\nimshow(imgAdd);\ntitle('\u56fe\u50cf\u52a0\u6cd5');\n\n% \u56fe\u50cf\u51cf\u6cd5\nimgSubtract = zeros(rows, cols, 'uint8');\nfor i = 1:rows\n    for j = 1:cols\n        % \u9632\u6b62\u4e0b\u6ea2\n        imgSubtract(i, j) = max(0, img1(i, j) - img2(i, j));\n    end\nend\n% \u663e\u793a\u51cf\u6cd5\u7ed3\u679c\nfigure;\nimshow(imgSubtract);\ntitle('\u56fe\u50cf\u51cf\u6cd5');\n\n% \u56fe\u50cf\u4e58\u6cd5\nimgMultiply = zeros(rows, cols, 'uint8');\nfor i = 1:rows\n    for j = 1:cols\n        % \u9632\u6b62\u6ea2\u51fa\n        imgMultiply(i, j) = min(255, round(img1(i, j) * img2(i, j) / 255));\n    end\nend\n% \u663e\u793a\u4e58\u6cd5\u7ed3\u679c\nfigure;\nimshow(imgMultiply);\ntitle('\u56fe\u50cf\u4e58\u6cd5');\n\n% \u56fe\u50cf\u9664\u6cd5\nimgDivide = zeros(rows, cols, 'uint8');\nfor i = 1:rows\n    for j = 1:cols\n        % \u907f\u514d\u9664\u4ee5\u96f6\n        if img2(i, j) == 0\n            imgDivide(i, j) = 255; % \u6216\u8005\u5176\u4ed6\u9002\u5f53\u7684\u503c\n        else\n            imgDivide(i, j) = round(img1(i, j) * 255 / img2(i, j));\n        end\n    end\nend\n% \u663e\u793a\u9664\u6cd5\u7ed3\u679c\nfigure;\nimshow(imgDivide);\ntitle('\u56fe\u50cf\u9664\u6cd5');\n</code></pre> ApacheConf<pre><code>% \u8bfb\u53d6\u56fe\u50cf\nimg = imread('image.jpg');\n\n% \u5c06\u56fe\u50cf\u8f6c\u6362\u4e3a\u7070\u5ea6\u56fe\u50cf\uff08\u5982\u679c\u5b83\u662f\u5f69\u8272\u56fe\u50cf\uff09\nif size(img, 3) == 3\n    img = rgb2gray(img);\nend\n\n% \u83b7\u53d6\u56fe\u50cf\u7684\u5c3a\u5bf8\n[rows, cols] = size(img);\n\n% \u5bf9\u6570\u53d8\u6362\nc_log = 255 / log(1 + max(img(:)));\nimgLog = zeros(rows, cols, 'uint8');\nfor i = 1:rows\n    for j = 1:cols\n        imgLog(i, j) = c_log * log(1 + img(i, j));\n    end\nend\n\n% \u663e\u793a\u5bf9\u6570\u53d8\u6362\u540e\u7684\u56fe\u50cf\nfigure;\nimshow(imgLog);\ntitle('\u5bf9\u6570\u53d8\u6362\u540e\u7684\u56fe\u50cf');\n\n% \u4f3d\u9a6c\u53d8\u6362\ngamma = 0.5; % \u4f3d\u9a6c\u503c\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8c03\u6574\nc_gamma = 1; % \u5e38\u6570\uff0c\u901a\u5e38\u4e3a1\nimgGamma = zeros(rows, cols, 'uint8');\nfor i = 1:rows\n    for j = 1:cols\n        imgGamma(i, j) = c_gamma * (img(i, j) / 255) ^ gamma * 255;\n    end\nend\n\n% \u663e\u793a\u4f3d\u9a6c\u53d8\u6362\u540e\u7684\u56fe\u50cf\nfigure;\nimshow(imgGamma);\ntitle('\u4f3d\u9a6c\u53d8\u6362\u540e\u7684\u56fe\u50cf');\n</code></pre>"},{"location":"TEST/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/","title":"\u8f6f\u4ef6\u5de5\u7a0b","text":""},{"location":"TEST/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_2","title":"\u7b2c\u4e00\u7ae0 \u8f6f\u4ef6\u5de5\u7a0b\u6982\u8ff0","text":"<ol> <li> <p>\u4ec0\u4e48\u662f\u8f6f\u4ef6\uff1f\u8f6f\u4ef6\u548c\u7a0b\u5e8f\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f</p> <ol> <li>\u8f6f\u4ef6\u5b9a\u4e49\uff1a\u7a0b\u5e8f\u3001\u6570\u636e\u4ee5\u53ca\u5f00\u53d1\u3001\u4f7f\u7528\u548c\u7ef4\u62a4\u7a0b\u5e8f\u9700\u8981\u7684\u6240\u6709\u6587\u6863\u7684\u96c6\u5408\uff0c\u4e5f\u6709\u5b9a\u4e49\u4e3a    \u8ba1\u7b97\u673a\u7a0b\u5e8f\u3001\u65b9\u6cd5\u3001\u89c4\u5219\u3001\u76f8\u5173\u7684\u6587\u6863\u8d44\u6599\u4ee5\u53ca\u5728\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7a0b\u5e8f\u65f6\u6240\u5fc5\u987b\u7684\u6570\u636e</li> <li>\u7a0b\u5e8f\uff1a\u9488\u5bf9\u67d0\u4e2a\u7279\u5b9a\u95ee\u9898\u800c\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u63cf\u8ff0\u7684\u9002\u5408\u8ba1\u7b97\u673a\u5904\u7406\u7684\u8bed\u53e5\u5e8f\u5217</li> <li>\u65b9\u6cd5\u548c\u89c4\u5219\uff1a\u901a\u5e38\u5728\u6587\u6863\u4e2d\u8bf4\u660e\uff0c\u5e76\u5728\u7a0b\u5e8f\u4e2d\u5b9e\u73b0</li> <li>\u6587\u6863\uff1a\u8f6f\u4ef6\u5f00\u53d1\u6d3b\u52a8\u7684\u8bb0\u5f55\uff0c\u4f9b\u4eba\u4eec\u4ea4\u6d41\u548c\u7814\u7a76</li> <li> <p>\u8003\u4ec0\u4e48\u662f\u8f6f\u4ef6\u751f\u5b58\u5468\u671f\uff1f\u5212\u5206\u751f\u5b58\u5468\u671f\u7684\u4e3b\u8981\u539f\u5219\u662f\u4ec0\u4e48\uff1f</p> </li> <li> <p>\u5b9a\u4e49:\u67d0\u4e2a\u8f6f\u4ef6\u4ece\u88ab\u63d0\u51fa\u6765\u5e76\u7740\u624b\u5b9e\u73b0\uff0c\u6700\u540e\u5230\u8be5\u8f6f\u4ef6\u62a5\u5e9f\u6216\u8005\u505c\u6b62\u4e3a\u6b62</p> </li> <li>\u6709\u4e09\u4e2a\u9636\u6bb5\uff1a\u8ba1\u5212\u65f6\u671f\uff0c\u5f00\u53d1\u65f6\u671f\uff0c\u8fd0\u7ef4\u65f6\u671f</li> <li>\u8ba1\u5212\u65f6\u671f\uff1a<ol> <li>\u95ee\u9898\u5b9a\u4e49</li> <li>\u53ef\u884c\u6027\u7814\u7a76</li> </ol> </li> <li>\u8f6f\u4ef6\u5f00\u53d1\u65f6\u671f\uff1a<ol> <li>\u9700\u6c42\u5206\u6790</li> <li>\u6574\u4f53\u8bbe\u8ba1</li> <li>\u8be6\u7ec6\u8bbe\u8ba1</li> <li>\u7f16\u7801</li> <li>\u6d4b\u8bd5</li> </ol> </li> <li>\u8f6f\u4ef6\u8fd0\u7ef4\u65f6\u671f</li> <li> <p>\u4f55\u8c13\u9762\u5411\u5bf9\u8c61\u8f6f\u4ef6\u5de5\u7a0b\uff1f\u7b80\u8ff0\u5b83\u548c\u4f20\u7edf\u8f6f\u4ef6\u5de5\u7a0b\u7684\u533a\u522b\u4e0e\u8054\u7cfb\u3002</p> </li> <li> <p>\u9762\u5411\u5bf9\u8c61\u7684\u5f00\u53d1\u91cd\u70b9\u653e\u5728\u8f6f\u4ef6\u7684\u751f\u5b58\u5468\u671f\u7684\u5206\u6790\u9636\u6bb5\uff0c\u5efa\u7acb\u4e86\u5bf9\u8c61\u6a21\u578b</p> </li> <li>\u7279\u70b9\uff1a\u5f00\u53d1\u9636\u6bb5\u6a21\u7cca\uff0c\u5f00\u53d1\u8fc7\u7a0b\u9010\u6b65\u6c42\u7cbe\uff0c\u5f00\u53d1\u6d3b\u52a8\u53cd\u590d\u8fed\u4ee3</li> <li>\u533a\u522b\u548c\u8054\u7cfb<ol> <li>\u533a\u522b\uff1a\u4f20\u7edf\u7684\u662f\u9762\u5411\u8fc7\u7a0b\uff0c\u800c\u9762\u5411\u5bf9\u8c61\u4e0d\u518d\u662f\u4ee5\u529f\u80fd\u5212\u5206\u4e3a\u5bfc\u5411\uff0c\u800c\u662f\u4ee5\u5bf9\u8c61\u4f5c\u4e3a\u6574\u4e2a\u95ee\u9898\u7684\u5206\u6790\u4e2d\u5fc3</li> <li>\u8054\u7cfb\uff1a\u4e24\u8005\u90fd\u6709\u5206\u6790\uff0c\u8bbe\u8ba1\uff0c\u7f16\u7801\uff0c\u6d4b\u8bd5\u7b49\u73af\u8282\uff0c\u4f46\u662f\u5404\u4e2a\u9636\u6bb5\u7684\u5177\u4f53\u4efb\u52a1\u4e0d\u540c</li> </ol> </li> <li>\u9762\u5411\u5bf9\u8c61\u7684\u4e3b\u8981\u5185\u5bb9\uff1a\u5bf9\u8c61 + \u7c7b + \u96c6\u6210 + \u901a\u8fc7\u6d88\u606f\u5f7c\u6b64\u901a\u4fe1</li> <li>\u4ec0\u4e48\u662f\u8f6f\u4ef6\u751f\u5b58\u5468\u671f\u6a21\u578b\uff1f\u8bd5\u6bd4\u8f83\u672c\u7ae0\u4ecb\u7ecd\u7684\u56db\u79cd\u6a21\u578b\u7684\u4f18\u7f3a\u70b9\uff0c\u8bf4\u660e\u6bcf\u79cd\u6a21\u578b\u7684\u4f7f\u7528\u8303\u56f4\u3002</li> </ol> </li> </ol> \u6a21\u578b \u5185\u5bb9 \u7279\u70b9 \u7011\u5e03\u6a21\u578b \u4e5f\u53eb\u751f\u5b58\u6a21\u578b\uff0c\u6216\u8005\u7ebf\u6027\u987a\u5e8f\u6a21\u578b\uff0c\u5c06\u8f6f\u4ef6\u751f\u5b58\u5468\u671f\u5404\u4e2a\u6d3b\u52a8\u89c4\u5b9a\u4e3a\u7ebf\u6027\u987a\u5e8f\u8fde\u63a5\u7684\u82e5\u5e72\u6a21\u578b\u3002\u662f\u4ee5\u6587\u6863\u4e3a\u9a71\u52a8\uff0c\u9002\u5408\u9700\u6c42\u5f88\u660e\u786e\u7684\u8f6f\u4ef6\u5f00\u53d1 \u7ecf\u5178\uff0c\u9700\u6c42\u53d8\u5316\u4e0d\u5927\uff0c\u65e0\u98ce\u9669\u7ba1\u63a7 \u5feb\u901f\u539f\u578b\u6a21\u578b \u9996\u5148\u5feb\u901f\u5efa\u7acb\u4e00\u4e2a\u6a21\u578b\uff0c\u7136\u540e\u518d\u7528\u6237\u4f7f\u7528\u57fa\u7840\u4e0a\u8fdb\u884c\u8fed\u4ee3\u6539\u8fdb \u5feb\u901f\u83b7\u53d6\u7528\u6237\u9700\u6c42 \u589e\u91cf\u6a21\u578b \u4e5f\u53eb\u6e10\u589e\u6a21\u578b\uff0c\u662f\u7011\u5e03\u6a21\u578b\u548c\u5feb\u901f\u539f\u578b\u6a21\u578b\u7684\u7ed3\u5408\uff0c\u662f\u4e00\u79cd\u975e\u6574\u4f53\u5f00\u53d1\u7684\u6a21\u578b\uff0c\u628a\u8f6f\u4ef6\u62c6\u5206\u4e3a\u4e00\u7cfb\u5217\u589e\u91cf\u7ec4\u4ef6\uff0c\u5f00\u53d1\u4e00\u90e8\u5206\uff0c\u4f7f\u7528\u4e00\u90e8\u5206 \u7075\u6d3b\uff0c\u5141\u8bb8\u8f6f\u4ef6\u53d8\u5316\uff0c\u65e0\u98ce\u9669\u7ba1\u63a7 \u87ba\u65cb\u6a21\u578b \u52a0\u5165\u4e86\u98ce\u9669\u5206\u6790\uff0c\u5c06\u7011\u5e03\u548c\u589e\u91cf\u4e24\u79cd\u6a21\u578b\u7ed3\u5408\u8d77\u6765\uff0c\u662f\u4e00\u79cd\u98ce\u9669\u9a71\u52a8\u7684\u6a21\u578b \u52a0\u5165\u98ce\u9669\u5206\u6790"},{"location":"TEST/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_3","title":"\u7b2c\u4e8c\u7ae0 \u53ef\u884c\u6027\u7814\u7a76","text":"<ol> <li> <p>\u5728\u8f6f\u4ef6\u5f00\u53d1\u65e9\u671f\u9636\u6bb5\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u53ef\u884c\u6027\u7814\u7a76\uff1f\u53ef\u884c\u6027\u7814\u7a76\u7684\u4efb\u52a1\u662f\u4ec0\u4e48\uff1f\u5e94\u8be5\u4ece\u54ea\u51e0\u4e2a\u65b9\u9762\u7814\u7a76\u76ee\u6807\u7cfb\u7edf\u7684\u53ef\u884c\u6027\uff1f</p> <ol> <li>\u76ee\u7684\uff1a\u5c31\u662f\u7528\u6700\u5c0f\u7684\u4ee3\u4ef7\u5728\u5c3d\u53ef\u80fd\u77ed\u7684\u65f6\u95f4\u5185\u786e\u5b9a\u95ee\u9898\u80fd\u5426\u89e3\u51b3\u3002 2. \u4efb\u52a1\uff1a\u9996\u5148\u8fdb\u884c\u6982\u8981\u7684\u5206\u6790\u7814\u7a76\uff0c\u521d\u6b65\u786e\u5b9a\u9879\u76ee\u7684\u89c4\u6a21\u548c\u76ee\u6807\uff0c\u786e\u5b9a\u9879\u76ee\u7684\u7ea6\u675f\u548c\u9650\u5236\uff0c\u5206\u6790\u51e0\u79cd\u53ef\u80fd\u89e3\u6cd5\u7684\u5229\u5f0a\uff0c\u4ece\u800c\u5224\u65ad\u539f\u5b9a\u7cfb\u7edf\u7684\u76ee\u6807\u548c\u89c4\u6a21\u662f\u5426\u73b0\u5b9e\uff0c\u7cfb\u7edf\u5b8c\u6210\u4e4b\u540e\u5e26\u6765\u7684\u6536\u76ca\u662f\u5426\u503c\u5f97\u6295\u8d44\u5f00\u53d1\u8fd9\u4e2a\u7cfb\u7edf( \u6982\u8981\u7814\u7a76\uff0c\u786e\u5b9a\u89c4\u6a21\uff0c\u786e\u5b9a\u7ea6\u675f\uff0c\u8def\u5f84\u5206\u6790\uff0c\u8fdb\u884c\u5224\u65ad\uff0c\u786e\u5b9aROI)</li> <li> <p>\u6210\u672c-\u6548\u76ca\u5206\u6790\u53ef\u7528\u54ea\u4e9b\u6307\u6807\u8fdb\u884c\u5ea6\u91cf\uff1f</p> </li> <li> <p>\u57fa\u672c\u6982\u5ff5\uff1a    \u6210\u672c\u6536\u76ca\u5206\u6790\uff1a\u4ece\u7ecf\u6d4e\u89d2\u5ea6\u8003\u8651\u8f6f\u4ef6\u662f\u5426\u53ef\u884c    \u6210\u672c\uff1a\u5f00\u53d1\u6210\u672c\u548c\u8fd0\u7ef4\u6210\u672c</p> </li> <li>\u8d27\u5e01\u7684\u65f6\u95f4\u4ef7\u503c\uff1a\u8bbe\u5b58\u5165\u8d27\u5e01\\(p\\)\u5143\uff0c\u5e74\u5229\u7387\\(i\\)\uff0c\u5219n\u5e74\u540e\u53ef\u4ee5\u5f97\u5230\u7684\u94b1\\(F = p (1 + ni)\\)    ,\u5176\u4e2d\u4e0d\u8ba1\u7b97\u590d\u5229\u3002\u5219\u73b0\u5728\u7684\u4ef7\u503c\u4e3a\\(p = F/(1 + ni)\\).</li> <li>\u6295\u8d44\u56de\u6536\u671f\uff1a\u5c31\u662f\u662f\u7d2f\u79ef\u7684\u7ecf\u6d4e\u6548\u76ca\u7b49\u4e8e\u6700\u521d\u7684\u6295\u8d44\u8d39\u7528\u6240\u9700\u8981\u7684\u65f6\u95f4\u3002\u8d8a\u77ed\u8d8a\u503c\u5f97\u6295\u8d44\u3002</li> <li>\u7eaf\u6536\u5165\uff1a\u5c31\u662f\u5728\u6574\u4e2a\u751f\u5b58\u5468\u671f\u5185\u7cfb\u7edf\u7684\u7d2f\u79ef\u7ecf\u6d4e\u6548\u76ca(\u6298\u5408\u4e3a\u73b0\u5728\u503c)\uff0c\u4e0e\u6295\u8d44\u4e4b\u5dee\u3002\u5982\u679c&lt;=0\uff0c\u5219\u4e0d\u503c\u5f97\u6295\u8d44\u5f00\u53d1\u3002</li> <li>\u4f8b\u5b50\uff1a\u5047\u8bbe\u4e00\u4e2a\u5e93\u5b58\u7cfb\u7edf\u5f00\u53d1\u6210\u672c5000\u5143\uff0c\u800c\u7cfb\u7edf\u5efa\u6210\u4e4b\u540e\u6bcf\u5e74\u53ef\u4ee5\u8282\u77012500\u5143\uff0c5\u5e74\u4e00\u5171\u8282\u770112500\u5143\u3002</li> <li> \u5e74 \u5c06\u6765\u503c \\((1 + ni)\\) \u73b0\u5728\u503c \u7d2f\u79ef\u73b0\u5728\u503c 1 2500 1.08 2314.81 2314.81 2 2500 1.16 2155.17 4469.98 3 2500 1.24 2016.12 6486.10 4 2500 1.32 1893.94 8380.04 5 2500 1.40 1785.71 10165.75 </li> </ol> </li> </ol> <p>\u5219\u6295\u8d44\u56de\u6536\u671f\uff1a\u7cfb\u7edf\u5728\u4e24\u5e74\u53ef\u4ee5\u8282\u77014469.98\u5143\uff0c\u5269\u4e0b\u7684530.03\u53ef\u4ee5\u5728\u7b2c\u4e09\u5e74\u7684\\(530.03/2016.12 = 0.26\\)\u5e74\u91cc\u5b8c\u6210\uff0c\u6240\u4ee5\u6295\u8d44\u56de\u6536\u671f\uff1a2.26\u5e74</p> <p>\u7eaf\u6536\u5165\uff1a10165.75 - 5000 = 5165.75\u5143\u3002\u6838\u5fc3\u8981\u70b9\uff1a\u5168\u90e8\u8f6c\u6362\u4e3a\u73b0\u5728\u503c\u6765\u8ba1\u7b97 3. \u6709\u4eba\u8ba4\u4e3a\uff0c\u53ea\u61c2\u6280\u672f\u7684\u5206\u6790\u5458\u4e0d\u4e00\u5b9a\u80fd\u5706\u6ee1\u5b8c\u6210\u53ef\u884c\u6027\u7814\u7a76\u7684\u4efb\u52a1\u3002\u4f60\u540c\u610f\u8fd9\u79cd\u770b\u6cd5\u5417\uff1f\u4e3a\u4ec0\u4e48\uff1f</p> Text Only<pre><code>1. \u540c\u610f\uff0c\u56e0\u4e3a\u9664\u4e86\u6280\u672f\u53ef\u884c\u6027\u4e4b\u5916\uff0c\u8fd8\u5305\u62ec\u7ecf\u6d4e\u53ef\u884c\u6027\uff0c\u64cd\u4f5c\u53ef\u884c\u6027\uff0c\u793e\u4f1a\u65b9\u9762\u7684\u53ef\u884c\u6027\u7814\u7a76\uff0c\u800c\u53ea\u61c2\u6280\u672f\u7684\u5206\u6790\u5458\u4e0d\u4e00\u5b9a\u80fd\u5706\u6ee1\u5b8c\u6210\u8fd9\u4e9b\u4efb\u52a1\u3002\n</code></pre> <ol> <li> <p>\u5728\u4f8b2.2\u4e2d\uff0c\u628a\u6295\u8d44\u6539\u4e3a6000\u5143\uff0c\u6bcf\u5e74\u8282\u7ea6\u91d1\u989d\u6539\u4e3a2000\u5143\uff0c\u5e74\u5229\u7387\u4e3a6%\uff0c\u8bd5\u8ba1\u7b97\u6295\u8d44\u56de\u6536\u671f\u548c\u7eaf\u6536\u5165\u3002</p> <ol> <li>\u6295\u8d44\u56de\u62a5\u671f\uff1a3.39\u5e74</li> <li>\u7eaf\u6536\u5165\uff1a2518.78\u5143</li> </ol> </li> </ol>"},{"location":"TEST/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_4","title":"\u7b2c\u4e09\u7ae0 \u9700\u6c42\u5206\u6790","text":"<p>\u8003\u5927\u9898\uff1a\u7ed9\u9700\u6c42\uff0c\u753b\u51fa\u6570\u636e\u6d41\u56fe\uff1b\u4f2a\u4ee3\u7801\u8f6c\u6362\u4e3a\u5224\u5b9a\u6811\uff0c\u5224\u5b9a\u8868</p> <ol> <li> <p>\u4e3a\u4ec0\u4e48\u8981\u8fdb\u884c\u9700\u6c42\u5206\u6790\uff1f\u9700\u6c42\u5206\u6790\u8981\u7ecf\u8fc7\u54ea\u4e9b\u6b65\u9aa4\uff1f</p> <ol> <li>\u76ee\u7684:\u786e\u5b9a\u7cfb\u7edf\u5fc5\u987b\u5b8c\u6210\u54ea\u4e9b\u5de5\u4f5c\uff0c\u662f\u4e00\u4e2a\u4e25\u683c\u63cf\u8ff0\u7cfb\u7edf\u505a\u4ec0\u4e48\u7684\u8fc7\u7a0b</li> <li>\u6b65\u9aa4\uff1a<ol> <li>\u786e\u5b9a\u5bf9\u7cfb\u7edf\u7684\u7efc\u5408\u9700\u6c42<ol> <li>\u529f\u80fd\u9700\u6c42</li> <li>\u6027\u80fd\u9700\u6c42</li> <li>......</li> </ol> </li> <li>\u5206\u6790\u7cfb\u7edf\u7684\u6570\u636e\u9700\u6c42<ol> <li>\u5efa\u7acb\u6570\u636e\u6a21\u578b\uff1a\u5b9e\u4f53\u5173\u7cfb\u56fe\uff1aE-R\u56fe</li> <li>\u63cf\u8ff0\u6570\u636e\u7ed3\u6784\uff1a\u5c42\u6b21\u65b9\u6846\u56fe</li> </ol> </li> <li>\u5efa\u7acb\u8f6f\u4ef6\u7684\u903b\u8f91\u6a21\u578b<ol> <li>\u6570\u636e\u6d41\u56fe</li> <li>\u6570\u636e\u5b57\u5178</li> <li>E-R\u56fe</li> <li>\u4e3b\u8981\u5904\u7406\u7b97\u6cd5</li> </ol> </li> <li>\u7f16\u5199\u8f6f\u4ef6\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66<ol> <li>\u76ee\u7684\uff1a\u660e\u786e\u5b9a\u4e49\u7cfb\u7edf\u5f97\u9700\u6c42\uff0c\u7cfb\u7edf\u6784\u6210\u4ee5\u53ca\u6709\u5173\u63a5\u53e3</li> <li>\u9700\u6c42\u8bf4\u660e\u76f8\u5f53\u4e8e\u4e00\u4efd\u6280\u672f\u5408\u540c\uff0c\u662f\u6d4b\u8bd5\u9a8c\u6536\u9636\u6bb5\u7684\u57fa\u51c6</li> </ol> </li> <li>\u9700\u6c42\u5206\u6790\u8bc4\u5ba1<ol> <li>\u53d1\u73b0\u9700\u6c42\u5206\u6790\u9636\u6bb5\u7684\u9519\u8bef\u548c\u7f3a\u9677\uff0c\u7136\u540e\u8fdb\u884c\u6539\u8fdb</li> </ol> </li> </ol> </li> <li> <p>\u9700\u6c42\u5206\u6790\u9636\u6bb5\u7684\u57fa\u672c\u4efb\u52a1\u662f\u4ec0\u4e48\uff1f\u600e\u6837\u7406\u89e3\u5206\u6790\u9636\u6bb5\u7684\u4efb\u52a1\u662f\u51b3\u5b9a\u201c\u505a\u4ec0\u4e48\u201d\uff0c\u800c\u4e0d\u662f\u201c\u600e\u6837\u505a\u201d\uff1f</p> </li> <li> <p>\u57fa\u672c\u4efb\u52a1\uff1a\u56de\u7b54\u7cfb\u7edf\u5fc5\u987b\u505a\u4ec0\u4e48</p> </li> <li>\u9700\u6c42\u5206\u6790\u5b9e\u9645\u4e0a\u662f\u8c03\u67e5\uff0c\u8bc4\u4ef7\u7528\u6237\u5bf9\u8f6f\u4ef6\u9700\u6c42\u7684\u8fc7\u7a0b\uff0c\u76ee\u7684\u5728\u4e8e\u51c0\u5316\u8f6f\u4ef6\u7684\u4f5c\u7528\u8303\u56f4\uff0c\u4e5f\u662f\u5206\u6790\u8f6f\u4ef6\u7cfb\u7edf\u6784\u6210\u7684\u8fc7\u7a0b\u3002\u56e0\u6b64\u9700\u6c42\u5206\u6790\u662f\u4e00\u4e2a\u5bf9\u7528\u6237\u610f\u56fe\u4e0d\u65ad\u8fdb\u884c\u63ed\u793a\u548c\u5224\u65ad\u7684\u8fc7\u7a0b\uff0c\u5b83\u5e76\u4e0d\u8003\u8651\u5177\u4f53\u5b9e\u73b0\uff0c\u800c\u662f\u5b8c\u6574\u5730\uff0c\u4e25\u5bc6\u5730\u63cf\u8ff0\u5e94\u8be5\u505a\u4ec0\u4e48\u7684\u8fc7\u7a0b\u3002</li> <li>\u5206\u6790\u4eba\u5458\uff1a\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u7531\u7528\u6237\u3001\u7cfb\u7edf\u5206\u6790\u5458\u548c\u9886\u57df\u4e13\u5bb6\u53c2\u52a0\u7684\u8054\u5408\u5206\u6790\u5c0f\u7ec4\uff0c\u7531\u9886\u57df\u4e13\u5bb6\u6765\u6c9f\u901a\u3002</li> <li>\u9700\u6c42\u5206\u6790\u89c4\u683c\u8bf4\u660e\u4e66\u5185\u5bb9<ol> <li>\u5f15\u8a00</li> <li>\u4efb\u52a1\u6982\u8ff0</li> <li>\u6570\u636e\u63cf\u8ff0</li> <li>\u529f\u80fd + \u6027\u80fd\u9700\u6c42 + \u8fd0\u884c\u9700\u6c42</li> <li>\u5176\u4ed6</li> </ol> </li> <li> <p>\u4ec0\u4e48\u662f\u7ed3\u6784\u5316\u5206\u6790\u65b9\u6cd5\uff1f\u8be5\u65b9\u6cd5\u4f7f\u7528\u4ec0\u4e48\u63cf\u8ff0\u5de5\u5177\uff1f</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u7ed3\u6784\u5316\u5206\u6790\u662f\u4e00\u79cd\u4ece\u95ee\u9898\u7a7a\u95f4 \u5230\u67d0\u79cd\u8868\u793a\u7684\u6620\u5c04\u65b9\u6cd5\uff0c\u8f6f\u4ef6\u529f\u80fd\u7531\u6570\u636e\u6d41\u56fe\u8868\u793a\uff0c\u662f\u7ed3\u6784\u5316\u65b9\u6cd5\u4e2d\u91cd\u8981\u7684\uff0c\u88ab\u666e\u904d\u91c7\u7528\u7684\u65b9\u6cd5\u3002</p> </li> <li>\u7531\u6570\u636e\u6d41\u56fe\u548c\u6570\u636e\u5b57\u5178 \u6784\u6210\u7684\u903b\u8f91\u6a21\u578b\u3002</li> <li> <p>\u4ec0\u4e48\u662f\u6570\u636e\u6d41\u56fe\uff1f\u5176\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f\u5176\u4e2d\u7684\u57fa\u672c\u7b26\u53f7\u5404\u8868\u793a\u4ec0\u4e48\u542b\u4e49\uff1f</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u662f\u4e00\u79cd\u56fe\u5f62\u5316\u6280\u672f\uff0c\u7528\u4e8e\u8868\u793a\u7cfb\u7edf\u903b\u8f91\u6a21\u578b\u3002\u7b80\u79f0DFD</p> </li> <li>\u4f5c\u7528\uff1a\u4ee5\u76f4\u89c2\u5730\u5f62\u5f0f\u6e05\u6670\u63cf\u8ff0\u4e86\u7cfb\u7edf\u6570\u636e\u6d41\u52a8\u548c\u5904\u7406\u8fc7\u7a0b</li> <li>\u57fa\u672c\u7b26\u53f7\uff1a<ol> <li>\u6570\u636e\u6d41\uff1a$ -&gt; $ + \u6570\u636e\u6d41\u540d</li> <li>\u6570\u636e\u5b58\u50a8\uff1a$ =$ + \u6587\u4ef6\u540d</li> <li>\u6570\u636e\u5904\u7406\uff1a\u5706\u5708 + \u52a0\u5de5\u540d</li> <li>\u6570\u636e\u6e90\u70b9\u6216\u8005\u7ec8\u70b9\uff1a\u65b9\u6846 + \u5b9e\u4f53\u540d</li> </ol> </li> <li> <p>\u753b\u6570\u636e\u6d41\u56fe\u7684\u6b65\u9aa4\u662f\u4ec0\u4e48\uff1f\u5e94\u8be5\u6ce8\u610f\u4ec0\u4e48\u4e8b\u9879\uff1f</p> </li> <li> <p>\u6b65\u9aa4</p> <ol> <li>\u627e\u5230\u5916\u90e8\u5b9e\u4f53\uff0c\u4e5f\u5c31\u627e\u5230\u4e86\u7cfb\u7edf\u5f97\u6e90\u70b9\u548c\u7ec8\u70b9</li> <li>\u627e\u51fa\u5916\u90e8\u5b9e\u4f53\u7684\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\u6d41</li> <li>\u5728\u56fe\u7684\u8fb9\u4e0a\u753b\u51fa\u7cfb\u7edf\u5f97\u5916\u90e8\u5b9e\u4f53</li> <li>\u4ece\u5916\u90e8\u5b9e\u4f53\u7684\u8f93\u51fa\u6d41\u5f00\u59cb\uff0c\u9010\u6b65\u753b\u51fa\u53d8\u6362\u6570\u636e\u7684\u52a0\u5de5\uff0c\u76f4\u5230\u5916\u90e8\u5b9e\u4f53\u6240\u9700\u7684\u8f93\u5165\u6d41\uff0c\u5f62\u6210\u6570\u636e\u6d41\u7684\u5c01\u95ed</li> <li>\u6309\u7167\u4e0a\u8ff0\u539f\u5219\u8fdb\u884c\u68c0\u67e5\uff0c\u4fee\u6539</li> <li>\u6309\u7167\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u753b\u51fa\u5b50\u56fe</li> </ol> </li> <li>\u6ce8\u610f\u4e8b\u9879\uff1a<ol> <li>\u53ea\u8003\u8651\u9759\u6001\uff0c\u5e76\u4e14\u6210\u529f\u7684\u60c5\u51b5</li> <li>\u53ea\u8003\u8651\u5e38\u89c4\u72b6\u6001</li> <li>\u4e0d\u540c\u4e8e\u7a0b\u5e8f\u6d41\u7a0b\u56fe\uff0c\u6570\u636e\u6d41\u56fe\u66f4\u7c97\u7c92\u5ea6</li> <li>\u7236\u56fe\u5b50\u56fe\u8981\u5e73\u8861</li> </ol> </li> <li> <p>\u63cf\u8ff0\u52a0\u5de5\u903b\u8f91\u6709\u51e0\u79cd\u5de5\u5177\uff1f\u5404\u662f\u4ec0\u4e48\uff1f\u5199\u51fa\u5176\u4f18\u7f3a\u70b9</p> </li> <li> <p>\u7ed3\u6784\u5316\u8bed\u8a00</p> <ol> <li>\u7279\u70b9\uff1a\u4ecb\u4e8e\u81ea\u7136\u8bed\u8a00\u548c\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e4b\u95f4</li> <li>\u65e2\u6709\u7ed3\u6784\u5316\u7a0b\u5e8f\u7684\u6e05\u6d17\u6613\u8bfb\u7684\u7279\u70b9\uff0c\u53c8\u6709\u81ea\u7136\u8bed\u8a00\u7b80\u5355\u6613\u61c2\u7684\u7279\u70b9</li> </ol> </li> <li>\u5224\u5b9a\u8868<ol> <li>\u4f7f\u7528\u573a\u666f\uff1a\u5f53\u7b97\u6cd5\u5305\u542b\u591a\u91cd\u5d4c\u5957\u7684\u6761\u4ef6\u9009\u62e9\u7684\u65f6\u5019\uff0c\u5224\u5b9a\u8868\u53ef\u4ee5\u6e05\u6670\u5730\u8868\u793a\u590d\u6742\u7684\u6761\u4ef6\u7ec4\u5408\u548c\u5bf9\u5e94\u52a8\u4f5c\u4e4b\u95f4\u7684\u5173\u7cfb</li> <li>\u7ec4\u6210\u90e8\u5206\uff1a\u6761\u4ef6\u7c7b\u522b\uff0c\u6761\u4ef6\u7ec4\u5408\uff0c\u64cd\u4f5c\u5b9a\u4e49\uff0c\u64cd\u4f5c\u6267\u884c</li> <li>\u5176\u4e2d\u6761\u4ef6\u7c7b\u522b\u548c\u6761\u4ef6\u7ec4\u5408\u53ef\u4ee5\u6253one-hot\u6765\u8fa8\u522b</li> </ol> </li> <li>\u5224\u5b9a\u6811<ol> <li>\u5b9a\u4e49\uff1a\u5224\u5b9a\u6811\u662f\u5224\u5b9a\u8868\u7684\u53d8\u79cd\uff0c\u4e5f\u80fd\u6e05\u6670\u7684\u8868\u793a\u590d\u6742\u6761\u4ef6\u7ec4\u5408\u4e0e\u5bf9\u5e94\u52a8\u4f5c\u4e4b\u95f4\u7684\u5173\u7cfb</li> <li>\u4e5f\u5c31\u662f\u4e0d\u540c\u6761\u4ef6\u8def\u5f84\u7ec4\u5408\u6210\u7684\u4ece\u6839\u5230\u53f6\u5b50\u7684\u8def\u5f84\uff0c\u5bf9\u5e94\u6bcf\u4e00\u6b65\u9009\u62e9</li> </ol> </li> <li> <p>\u67d0\u9ad8\u6821\u8ba1\u7b97\u673a\u6559\u6750\u8d2d\u9500\u7cfb\u7edf\u6709\u4ee5\u4e0b\u529f\u80fd</p> </li> <li> <p>\u76f4\u63a5\u770b\u7b54\u6848</p> </li> </ol> </li> </ol>"},{"location":"TEST/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_5","title":"\u7b2c\u56db\u7ae0 \u8f6f\u4ef6\u6574\u4f53\u8bbe\u8ba1","text":"<ol> <li> <p>\u7cfb\u7edf\u7684\u72ec\u7acb\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u9ad8\u5185\u805a\uff0c\u4f4e\u8026\u5408\u8fdb\u884c\u5224\u65ad\uff0c\u5177\u4f53\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u901a\u8fc7\u8026\u5408\u7a0b\u5ea6\u7684\u5ea6\u91cf\uff0c\u53ef\u4ee5\u628a\u8026\u5408\u7a0b\u5ea6\u5206\u4e3a</p> <ol> <li>\u65e0\u76f4\u63a5\u8026\u5408\uff0c\u4e5f\u5c31\u662f\u5b8c\u5168\u72ec\u7acb\uff0c\u4f46\u662f\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u4e0d\u53ef\u80fd\u6240\u6709\u7684\u6a21\u5757\u4e4b\u95f4\u7684\u6ca1\u6709\u4efb\u4f55\u8fde\u63a5</li> <li>\u6570\u636e\u8026\u5408\uff1a\u5982\u679c\u4e24\u4e2a\u6a21\u5757\u4e4b\u95f4\u5f7c\u6b64\u901a\u8fc7\u53c2\u6570\u4ea4\u6362\u4fe1\u606f\uff0c\u5e76\u4e14\u4ec5\u4ec5\u4ea4\u6362\u7684\u662f\u6570\u636e\uff0c\u5219\u8fd9\u79cd\u6210\u4e3a\u6570\u636e\u8026\u5408\u3002**\u6570\u636e\u8026\u5408\u662f\u7406\u60f3\u7684\u76ee\u6807    **</li> <li>\u7279\u5f81\u8026\u5408\uff1a\u5982\u679c\u628a\u6574\u4e2a\u6570\u636e\u7ed3\u6784\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u800c\u4f7f\u7528\u7684\u6a21\u5757\u5e76\u4e0d\u4f7f\u7528\u5168\u90e8\uff0c\u5219\u51fa\u73b0\u4e86\u7279\u5f81\u8026\u5408</li> <li>\u63a7\u5236\u8026\u5408\uff1a\u5982\u679c\u4e24\u4e2a\u6a21\u5757\u4e4b\u95f4\u5f7c\u6b64\u4f20\u9012\u7684\u4fe1\u606f\u6709\u63a7\u5236\u4fe1\u606f\uff0c\u5219\u79f0\u4e3a\u63a7\u5236\u8026\u5408\u3002 \u63a7\u5236\u8026\u5408\u5f80\u5f80\u662f\u591a\u4f59\u7684\uff0c\uff0c\u628a\u6a21\u5757\u8fdb\u884c\u5206\u89e3\u4e4b\u540e\u53ef\u4ee5\u7528\u6570\u636e\u8026\u5408\u8fdb\u884c\u4ee3\u66ff</li> <li>\u516c\u5171\u73af\u5883\u8026\u5408\uff1a\u4e24\u4e2a\u7cfb\u7edf\u901a\u8fc7\u516c\u5171\u6570\u636e\u73af\u5883\u76f8\u4e92\u4f5c\u7528\uff0c\u6bd4\u5982\u5171\u4eab\u7f13\u51b2\u533a\u3002\u5982\u679c\u662f\u5355\u5411\u7684\u6d88\u8d39\u8005-\u751f\u4ea7\u8005\u6a21\u5f0f\uff0c\u5219\u662f\u677e\u8026\u5408\uff0c\u5982\u679c\u4e3a\u53cc\u5411\uff0c\u5219\u662f\u7d27\u5bc6\u8026\u5408    \u6bd4\u8f83\u590d\u6742\uff0c\u6709\u98ce\u9669</li> <li> <p>\u5185\u5bb9\u8026\u5408\uff1a\u6700\u9ad8\u7a0b\u5ea6\u7684\u8026\u5408\u3002\u6bd4\u5982\u4e00\u4e2a\u6a21\u5757\u8bbf\u95ee\u53e6\u4e00\u4e2a\u6a21\u5757\u7684\u5185\u90e8\u6570\u636e\uff0c\u6709\u4ee3\u7801\u4e4b\u95f4\u7684\u91cd\u590d\u7b49\u3002\u5b8c\u5168\u4e0d\u8981\u5185\u5bb9\u8026\u5408</p> <ol> <li>\u5185\u805a\uff1a\u6807\u5fd7\u4e00\u4e2a\u6a21\u5757\u5185\u90e8\u7684\u5404\u4e2a\u5143\u7d20\u5f7c\u6b64\u7ed3\u5408\u7684\u7d27\u5bc6\u7a0b\u5ea6\uff0c\u662f\u4fe1\u606f\u9690\u85cf\u548c\u5c40\u90e8\u5316\u6982\u5ff5\u7684\u81ea\u7136\u6269\u5c55\u3002\u7406\u60f3\u5185\u805a\u6a21\u5757\u53ea\u505a\u4e00\u4ef6\u4e8b\u60c5</li> </ol> </li> <li> <p>\u5076\u7136\u5185\u805a\uff0c\u4e00\u7ec4\u4efb\u52a1\u5f7c\u6b64\u4e4b\u95f4\u7684\u5173\u7cfb\u6bd4\u8f83\u677e\u6563\u3002</p> </li> <li>\u903b\u8f91\u5185\u805a\uff1a\u5982\u679c\u4e00\u4e2a\u6a21\u5757\u5b8c\u6210\u7684\u4efb\u52a1\u5728\u903b\u8f91\u4e0a\u5c5e\u4e8e\u76f8\u540c\u6216\u8005\u76f8\u4f3c\u7684\u4e00\u7c7b\uff0c\u5219\u6210\u4e3a\u903b\u8f91\u5185\u805a</li> <li>\u65f6\u95f4\u5185\u805a\uff1a\u5982\u679c\u4e00\u4e2a\u6a21\u5757\u5305\u542b\u7684\u4efb\u52a1\u5fc5\u987b\u5728\u540c\u4e00\u4e2a\u65f6\u95f4\u6bb5\u5185\u6267\u884c\uff0c\u5c31\u662f\u65f6\u95f4\u5185\u805a\u3002\u6b64\u6a21\u5757\u4e0d\u592a\u53ef\u80fd\u91cd\u7528</li> <li>\u901a\u4fe1\u5185\u805a\uff1a\u5982\u679c\u6240\u6709\u6a21\u5757\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u4f7f\u7528\u540c\u4e00\u4e2a\u8f93\u5165\u548c\u8f93\u51fa\u6570\u636e\uff0c\u5219\u6210\u4e3a\u901a\u4fe1\u5185\u805a\uff0c\u5373\u5728\u540c\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u4e0a\u64cd\u4f5c\u3002\u4e0d\u80fd\u91cd\u7528\uff0c\u9700\u8981\u62c6\u5206</li> <li>\u987a\u5e8f\u5185\u805a\uff1a\u4e32\u884c\u6267\u884c</li> <li>\u529f\u80fd\u5185\u805a\uff1a\u6a21\u5757\u5185\u6240\u6709\u7684\u5904\u7406\u5143\u7d20\u5c5e\u4e8e\u4e00\u4e2a\u6574\u4f53\uff0c\u5b8c\u6210\u5355\u4e00\u7684\u529f\u80fd\u3002\u662f\u6700\u9ad8\u7a0b\u5ea6\u7684\u5185\u805a</li> <li>\u6df1\u5ea6\uff0c\u5bbd\u5ea6\uff0c\u6247\u5165\uff0c\u6247\u51fa\uff1a</li> </ol> </li> <li> <p>\u6df1\u5ea6\uff1a\u8f6f\u4ef6\u7ed3\u6784\u4e2d\u6a21\u5757\u7684\u5c42\u6570\uff0c\u5b83\u8868\u793a\u63a7\u5236\u7684\u5c42\u6570\uff0c\u5728\u4e00\u5b9a\u610f\u4e49\u80fd\u7c97\u7565\u5730\u53cd\u6620\u7cfb\u7edf\u7684\u89c4\u6a21\u548c\u590d\u6742\u7a0b\u5ea6</p> </li> <li>\u5bbd\u5ea6\uff1a\u540c\u4e00\u5c42\u6b21\u4e0a\u6a21\u5757\u7684\u6700\u5927\u4e2a\u6570</li> <li>\u6247\u5165\uff1a\u6709\u591a\u5c11\u4e2a\u4e0a\u7ea7\u6a21\u5757\u76f4\u63a5\u8c03\u7528\u5b83</li> <li>\u6247\u51fa\uff1a\u662f\u4e00\u4e2a\u6a21\u5757\u76f4\u63a5\u8c03\u7528\u7684\u6a21\u5757\u6570\u76ee\u3002\u7ecf\u9a8c\u8bc1\u660e\uff0c\u597d\u7684\u7cfb\u7edf\u7ed3\u6784\u7684\u5e73\u5747\u6247\u51fa\u6570\u4e00\u822c\u662f3-4\uff0c\u4e0d\u80fd\u8d85\u8fc75-9</li> <li>\u4e00\u822c\u8bbe\u8ba1\u7684\u6bd4\u8f83\u597d\u7684\u8f6f\u4ef6\u7ed3\u6784\uff0c\u9876\u5c42\u6247\u51fa\u9ad8\uff0c\u4e2d\u5c42\u6247\u51fa\u8f83\u5c11\uff0c\u5e95\u5c42\u6a21\u5757\u6709\u9ad8\u6247\u5165\u3002</li> <li>\u8f6f\u4ef6\u603b\u4f53\u8bbe\u8ba1\u8bf4\u660e\u4e66:    \u5f15\u8a00\uff0c\u4efb\u52a1\u6982\u8ff0\uff0c\u603b\u4f53\u8bbe\u8ba1\uff0c\u63a5\u53e3\u8bbe\u8ba1\uff0c\u6570\u636e\u7ed3\u6784\u8bbe\u8ba1\uff0c\u8fd0\u884c\u8bbe\u8ba1\uff0c\u51fa\u9519\u5904\u7406\u8bbe\u8ba1\uff0c\u5b89\u5168\u4fdd\u5bc6\u8bbe\u8ba1\uff0c\u7ef4\u62a4\u8bbe\u8ba1</li> </ol> </li> </ol>"},{"location":"TEST/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_6","title":"\u7b2c\u4e94\u7ae0 \u8f6f\u4ef6\u8be6\u7ec6\u8bbe\u8ba1","text":"<ol> <li>\u8f6f\u4ef6\u8be6\u7ec6\u8bbe\u8ba1\u7684\u57fa\u672c\u4efb\u52a1\u662f\u4ec0\u4e48\uff1f\u6709\u54ea\u51e0\u79cd\u63cf\u8ff0\u65b9\u6cd5\uff1f<ol> <li>\u4efb\u52a1\uff1a<ol> <li>\u786e\u5b9a\u6bcf\u4e2a\u6a21\u5757\u7684\u4f7f\u7528\u7684\u7b97\u6cd5</li> <li>\u6570\u636e\u7ed3\u6784</li> <li>\u63a5\u53e3\u7ec6\u8282</li> <li>\u6d4b\u8bd5\u7528\u4f8b</li> </ol> </li> <li>\u63cf\u8ff0\u65b9\u6cd5<ol> <li>\u56fe\u5f62\u5de5\u5177\uff1a\u7a0b\u5e8f\u6d41\u7a0b\u56fe\uff0c\u76d2\u56fe(N-S)\uff0c\u95ee\u9898\u5206\u6790\u56fe(PAD)</li> <li>\u8868\u683c\u5de5\u5177:  \u5224\u5b9a\u8868\uff0c\u5224\u5b9a\u6811</li> <li>\u8bed\u8a00\u5de5\u5177\uff1a\u8fc7\u7a0b\u8bbe\u8ba1\u8bed\u8a00\uff1aPDL</li> </ol> </li> </ol> </li> <li>\u7a0b\u5e8f\u7684\u4e09\u79cd\u57fa\u672c\u7ed3\u6784\uff1a\u987a\u5e8f\uff0c\u5faa\u73af\uff0c\u9009\u62e9</li> <li>\u4f2a\u4ee3\u7801\u8f6c\u6362\u4e3aN-S\u76d2\u56fe\uff0c\u4ee5\u53caPAD\u56fe<ol> <li>\u76d2\u56fe\uff1a<ol> <li>\u57fa\u672c\u6210\u5206\uff1a<ol> <li>\u987a\u5e8f</li> <li>if-then-else</li> <li>case\u578b\u591a\u5206\u652f</li> <li>\u5faa\u73af</li> <li>\u8c03\u7528\u5b50\u7a0b\u5e8f</li> </ol> </li> </ol> </li> <li>PAD\u56fe\uff1a<ol> <li>\u5b9a\u4e49\uff1a\u95ee\u9898\u5206\u6790\u56fe\uff0c\u4f7f\u7528\u4e8c\u7ef4\u6811\u5f62\u7ed3\u6784\uff0c\u53ea\u6709\u987a\u5e8f\uff0c\u5faa\u73af\uff0c\u9009\u62e9\u4e09\u90e8\u5206\u3002</li> <li>\u65b9\u5f0f\uff1a\u4f8b\u5982\u8fdb\u884c\u5012\u5e8f\u9009\u62e9\u6392\u5e8f\u7684\u65b9\u5f0f\uff1a\u9996\u5148\u628asort\u90e8\u5206\u5265\u79bb\u51fa\u6765\uff0c\u7136\u540e\u7528def\uff0c\u540c\u65f6\u628a\u5faa\u73af\u4e00\u5c42\u4e00\u5c42\u5206\u9694\u51fa\u6765\uff0c\u5c31\u662f\u7ed3\u679c\u3002</li> <li>\u65b9\u5411\uff1a\u4ece\u4e0a\u5230\u4e0b\uff0c\u4ece\u5de6\u5230\u53f3</li> </ol> </li> </ol> </li> </ol>"},{"location":"TEST/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_7","title":"\u7b2c\u4e03\u7ae0  \u8f6f\u4ef6\u6d4b\u8bd5","text":"<ol> <li> <p>\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u57fa\u672c\u4efb\u52a1\u662f\u4ec0\u4e48\uff1f\u7b80\u8ff0\u6d4b\u8bd5\u7684\u76ee\u6807\u548c\u57fa\u672c\u539f\u5219</p> <ol> <li>\u8f6f\u4ef6\u6d4b\u8bd5\u7684\u57fa\u672c\u4efb\u52a1\uff1a    \u6839\u636e\u8f6f\u4ef6\u5f00\u53d1\u5404\u9636\u6bb5\u7684\u6587\u6863\u8d44\u6599\u548c\u7a0b\u5e8f\u5185\u90e8\u7ed3\u6784\uff0c\u7cbe\u5fc3\u8bbe\u8ba1\u4e00\u7ec4\u201c\u9ad8\u4ea7\u201d\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5229\u7528\u8fd9\u4e9b\u7528\u4f8b\u6267\u884c\u7a0b\u5e8f\uff0c\u627e\u51fa\u8f6f\u4ef6\u4e2d\u6f5c\u5728\u7684\u5404\u79cd\u9519\u8bef\u7f3a\u9677</li> <li>\u6d4b\u8bd5\u4e00\u822c\u4e0d\u80fd\u53d1\u73b0\u5168\u90e8\u9519\u8bef\uff0c\u53ea\u80fd\u8bc1\u660e\u7a0b\u5e8f\u4e2d\u5b58\u5728\u9519\u8bef\uff0c\u4e0d\u80fd\u8bc1\u660e\u4e0d\u5b58\u5728\u9519\u8bef</li> <li>\u539f\u5219\uff1a\u8f93\u51fa\u8f93\u51fa\uff0c\u5408\u7406\u4e0d\u5408\u7406\u5168\u8986\u76d6\u3002\u7a0b\u5e8f\u5458\u5e94\u907f\u514d\u6d4b\u8bd5\u81ea\u5df1\u7684\u7a0b\u5e8f</li> <li> <p>\u7b80\u8ff0\u9759\u6001\u6d4b\u8bd5\u4e0e\u52a8\u6001\u6d4b\u8bd5\u7684\u542b\u4e49\u3002\u5b83\u4eec\u4e4b\u95f4\u6709\u4ec0\u4e48\u4e0d\u540c\u70b9\u548c\u76f8\u540c\u70b9</p> </li> <li> <p>\u9759\u6001\u6d4b\u8bd5\uff1a    \u6307\u88ab\u6d4b\u7a0b\u5e8f\u4e0d\u5728\u673a\u5668\u4e0a\u8fd0\u884c\uff0c\u5bf9\u6a21\u5757\u7684\u6e90\u4ee3\u7801\u8fdb\u884c\u7814\u8bfb\uff0c\u67e5\u627e\u9519\u8bef\u6216\u6536\u96c6\u4e00\u4e9b\u5ea6\u91cf\u6570\u636e\uff0c\u91c7\u7528\u4eba\u5de5\u68c0\u6d4b\u548c\u8ba1\u7b97\u673a\u8f85\u52a9\u9759\u6001\u5206\u6790\u624b\u6bb5    \u5bf9\u7a0b\u5e8f\u8fdb\u884c\u68c0\u6d4b\uff0c\u53ea\u8fdb\u884c\u7279\u6027\u5206\u6790</p> </li> <li>\u52a8\u6001\u6d4b\u8bd5\uff1a    \u901a\u8fc7\u8fd0\u884c\u7a0b\u5e8f\u53d1\u73b0\u9519\u8bef\uff0c\u4e00\u822c\u6240\u8bb2\u7684\u6d4b\u8bd5\u5927\u591a\u662f\u6307\u52a8\u6001\u6d4b\u8bd5\u3002\u4e00\u822c\u5305\u62ec\u9ed1\u76d2\u6d4b\u8bd5\u548c\u767d\u76d2\u6d4b\u8bd5</li> <li>\u5f02\u540c\u70b9<ol> <li>\u76f8\u540c\uff1a\u90fd\u53ef\u4ee5\u7528\u4e8e\u8fdb\u884c\u8f6f\u4ef6\u6d4b\u8bd5</li> <li>\u4e0d\u540c\uff1a\u4e00\u4e2a\u5728\u8fd0\u884c\u524d\uff0c\u4e00\u4e2a\u5728\u8fd0\u884c\u65f6\u3002\u524d\u8005\u7528\u4e8e\u9884\u9632\uff0c\u540e\u8005\u7528\u4e8e\u77eb\u6b63\u3002</li> </ol> </li> <li> <p>\u9ed1\u76d2\u6d4b\u8bd5\u7684\u6d4b\u8bd5\u65b9\u6cd5</p> </li> <li> <p>\u5b9a\u4e49\uff1a</p> <ol> <li>\u9ed1\u76d2\u6d4b\u8bd5\uff1a\u4e5f\u79f0\u529f\u80fd\u6d4b\u8bd5\u6216\u6570\u636e\u9a71\u52a8\u6d4b\u8bd5\uff0c\u5b83\u4e0d\u8003\u8651\u7a0b\u5e8f\u5185\u90e8\u7ed3\u6784\u548c\u5904\u7406\u8fc7\u7a0b\u3002\u628a\u88ab\u6d4b\u7a0b\u5e8f\u770b\u6210\u4e00\u4e2a\u9ed1\u76d2\u5b50\uff0c\u53ea\u5728\u8f6f\u4ef6\u63a5\u53e3\u5904\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4f9d\u636e\u9700\u6c42\u89c4\u683c\u8bf4\u660e\u4e66\uff0c\u68c0\u67e5\u7a0b\u5e8f\u662f\u5426\u6ee1\u8db3\u529f\u80fd\u8981\u6c42</li> <li>\u767d\u76d2\u6d4b\u8bd5\uff1a\u4e5f\u79f0\u7ed3\u6784\u6d4b\u8bd5\u6216\u903b\u8f91\u9a71\u52a8\u6d4b\u8bd5\u3002\u5b83\u9700\u4e86\u89e3\u7a0b\u5e8f\u7684\u5185\u90e8\u7ed3\u6784\u548c\u5904\u7406\u8fc7\u7a0b\uff0c\u8981\u6c42\u5bf9\u7a0b\u5e8f\u7684\u7ed3\u6784\u7279\u6027\u505a\u5230\u4e00\u5b9a\u7a0b\u5ea6\u7684\u8986\u76d6</li> <li>\u4e24\u8005\u90fd\u4e0d\u53ef\u80fd\u505a\u7a77\u5c3d\u6d4b\u8bd5\uff0c\u53ea\u80fd\u8fdb\u884c\u9009\u62e9\u6d4b\u8bd5\u3002\u9ed1\u76d2\u6d4b\u8bd5\u662f\u786e\u8ba4\u6027\u6280\u672f\uff0c\u767d\u76d2\u6d4b\u8bd5\u662f\u9a8c\u8bc1\u6027\u6280\u672f\u3002<ol> <li>\u9ed1\u76d2\u6d4b\u8bd5    \u65b9\u6cd5\u6709\u4e09\u79cd\uff0c\u7b49\u4ef7\u5206\u7c7b\u6cd5\uff0c\u8fb9\u503c\u5206\u6790\u6cd5\uff0c\u9519\u8bef\u63a8\u6d4b\u6cd5</li> </ol> </li> </ol> </li> </ol> <p>\u7b49\u4ef7\u5206\u7c7b\u6cd5\uff1a\u628a\u7a0b\u5e8f\u7684\u8f93\u5165\u57df\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u6570\u636e\u7c7b\uff0c\u636e\u6b64\u5bfc\u51fa\u6d4b\u8bd5\u7528\u4f8b\u3002\u4e5f\u5c31\u662f\u6bcf\u4e2a\u7b49\u4ef7\u8303\u56f4\u5185\uff0c\u53ea\u9009\u51e0\u4e2a\u7528\u4f8b\uff0c\u6700\u540e\u8986\u76d6\u5168\u90e8\u8303\u56f4\u3002\u9700\u8981\u7ecf\u5386\u5212\u5206\u7b49\u4ef7\u7c7b\uff0c\u9009\u62e9\u6d4b\u8bd5\u7528\u4f8b\u4e24\u6b65\u3002</p> <p>\u8fb9\u754c\u503c\u5206\u6790\u6cd5\uff1a\u9488\u5bf9\u5404\u79cd\u8fb9\u754c\u60c5\u51b5\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\uff0c\u53ef\u4ee5\u67e5\u51fa\u66f4\u591a\u9519\u8bef\u3002</p> <p>\u9519\u8bef\u63a8\u6d4b\u6cd5\uff1a\u8003\u76f4\u89c9\u548c\u7ecf\u9a8c\u63a8\u6d4b\u7a0b\u5e8f\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\uff0c\u4ece\u800c\u6709\u9488\u5bf9\u6027\u7684\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b 4. \u8f6f\u4ef6\u6d4b\u8bd5\u8981\u7ecf\u8fc7\u54ea\u4e9b\u6b65\u9aa4\uff1f\u8fd9\u4e9b\u6d4b\u8bd5\u4e0e\u8f6f\u4ef6\u5f00\u53d1\u5404\u9636\u6bb5\u4e4b\u95f4\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f</p> <ol> <li>\u5355\u5143\u6d4b\u8bd5\uff1a\u5bf9\u8f6f\u4ef6\u57fa\u672c\u7ec4\u6210\u5355\u5143\u7684\u6d4b\u8bd5\uff0c\u53d1\u73b0\u7684\u662f\u6a21\u5757\u5185\u7f16\u7801\u7684\u9519\u8bef\uff0c\u6d4b\u8bd5\u65b9\u6cd5\u4ee5\u767d\u76d2\u4e3a\u4e3b\uff0c\u4e5f\u5206\u9759\u6001\u548c\u52a8\u6001\u3002</li> <li>\u96c6\u6210\u6d4b\u8bd5\uff1a\u5c06\u5355\u5143\u6309\u7167\u8981\u6c42\u7ec4\u5408\u8d77\u6765\u8fdb\u884c\u6d4b\u8bd5\uff0c\u53d1\u73b0\u7684\u662f\u6a21\u5757\u7684\u9519\u8bef\uff0c\u5305\u62ec\u5b50\u7cfb\u7edf\u6d4b\u8bd5\u548c\u7cfb\u7edf\u6d4b\u8bd5\uff0c\u5206\u81ea\u9876\u5411\u4e0b\u548c\u81ea\u5e95\u5411\u4e0a\u3002</li> <li>\u786e\u8ba4\u6d4b\u8bd5\uff1a\u68c0\u67e5\u5f00\u53d1\u8f6f\u4ef6\u662f\u5426\u6ee1\u8db3\u89c4\u5219\u8bf4\u660e\u4e66\u6240\u786e\u5b9a\u7684\u529f\u80fd\u548c\u6027\u80fd\u9700\u6c42\uff0c\u53d1\u73b0\u7684\u662f\u9700\u6c42\u5206\u6790\u9636\u6bb5\u7684\u9519\u8bef</li> <li> <p>\u7ed9\u6d41\u7a0b\u56fe\uff0c\u8bbe\u8ba1\u767d\u76d2\u6d4b\u8bd5\u7528\u4f8b\u3002</p> </li> <li> <p>\u767d\u76d2\u6d4b\u8bd5\u5b9a\u4e49\uff1a\u6d4b\u8bd5\u7528\u4f8b\u662f\u6839\u636e\u7a0b\u5e8f\u7684\u5185\u90e8\u903b\u8f91\u6765\u8bbe\u8ba1\u7684\u3002\u5982\u679c\u60f3\u7528\u767d\u76d2\u6cd5\u53d1\u73b0\u7a0b\u5e8f\u4e2d\u6240\u6709\u7684\u9519\u8bef\uff0c\u5219\u81f3\u5c11\u5fc5\u987b\u4f7f\u7a0b\u5e8f\u4e2d\u6bcf\u79cd\u53ef\u80fd\u7684\u8def\u5f84\u90fd\u6267\u884c\u4e00\u6b21\u3002\u5bf9\u6240\u6709\u7684\u903b\u8f91\u5224\u5b9a\uff0c\u53d6\u201c\u771f\u201d\u4e0e\u53d6\u201c\u5047\u201d\u7684\u4e24\u79cd\u60c5\u51b5\u90fd\u81f3\u5c11\u6d4b\u8bd5\u4e00\u6b21</p> </li> <li>\u767d\u76d2\u6d4b\u8bd5\u5206\u4e24\u79cd\uff0c\u903b\u8f91\u8986\u76d6\u6d4b\u8bd5\uff0c\u4ee5\u53ca\u8def\u5f84\u6d4b\u8bd5\u3002\u524d\u8005\u628a\u6ce8\u610f\u529b\u653e\u5728\u6d41\u7a0b\u56fe\u7684\u5404\u4e2a\u5224\u5b9a\u6846\u4e0a\uff0c\u540e\u8005\u91cd\u89c6\u6d4b\u8bd5\u5bf9\u7a0b\u5e8f\u7684\u6267\u884c\u8def\u5f84\u7684\u8003\u5bdf</li> <li>\u903b\u8f91\u8986\u76d6\u6d4b\u8bd5\u6cd5\uff1a<ol> <li>\u5b9a\u4e49\uff1a\u903b\u8f91\u8986\u76d6\u6d4b\u8bd5\u6cd5\u7528\u6d41\u7a0b\u56fe\u6765\u8bbe\u8ba1\u6d4b\u8bd5\uff0c\u5b83\u8003\u5bdf\u7684\u91cd\u70b9\u662f\u56fe\u4e2d\u7684\u5224\u5b9a\u6846\uff08\u83f1\u5f62\u6846\uff09\u3002</li> <li>\u8986\u76d6\u5f3a\u5f31\uff1a<ol> <li>\u8bed\u53e5\u8986\u76d6\uff1a\u8981\u8d70\u8fc7\u6240\u6709\u7684\u83f1\u5f62\u548c\u77e9\u5f62\u3002\u5bf9\u6240\u6709\u53ef\u80fd\u6027\u7684\u8986\u76d6\u6700\u5c11</li> <li>\u5224\u5b9a\u8986\u76d6\uff1a\u4e5f\u5c31\u662f\u8d70\u8fc7\u6240\u6709\u7684\u83f1\u5f62\u548c\u77e9\u5f62\uff0c\u5e76\u4e14\u8981\u8d70\u904d\u6240\u6709\u7684\u83f1\u5f62\u5206\u652f\u3002\u4f46\u662f\u5bf9\u7a0b\u5e8f\u903b\u8f91\u7684\u8986\u76d6\u7a0b\u5ea6\u4ecd\u7136\u4e0d\u9ad8\u3002</li> <li>\u6761\u4ef6\u8986\u76d6\uff1a\u8981\u4f7f\u7528\u8db3\u591f\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f7f\u5f97\u8981\u8d70\u8fc7\u6240\u6709\u7684\u83f1\u5f62\u548c\u77e9\u5f62\uff0c\u5e76\u4e14\u5bf9\u83f1\u5f62\u6846\u4e2d\u7684\u6761\u4ef6\uff0c\u8981\u53d6\u5230\u5404\u79cd\u53ef\u80fd\u5f97\u7ed3\u679c</li> <li>\u5224\u5b9a\u6761\u4ef6\u8986\u76d6\uff1a\u540c\u65f6\u6ee1\u8db3\u5224\u5b9a\u8986\u76d6\u548c\u6761\u4ef6\u8986\u76d6</li> <li>\u6761\u4ef6\u7ec4\u5408\u8986\u76d6\uff1a\u4f7f\u7528\u8db3\u591f\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u4f7f\u5f97\u6bcf\u79cd\u83f1\u5f62\u7684\u6761\u4ef6\u7684\u5404\u79cd\u53ef\u80fd\u7ec4\u5408\u90fd\u51fa\u73b0\u81f3\u5c11\u4e00\u6b21\u3002**\u6761\u4ef6\u7ec4\u5408\u8986\u76d6\u4ecd\u7136\u4e0d\u80fd\u662f\u7a0b\u5e8f\u7684\u6240\u6709\u8def\u5f84\u90fd\u8986\u76d6\u5230    **</li> </ol> </li> </ol> </li> </ol> </li> </ol>"},{"location":"TEST/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_8","title":"\u7b2c\u516b\u7ae0 \u8f6f\u4ef6\u7ef4\u62a4","text":"<ol> <li>\u4e3a\u4ec0\u4e48\u8f6f\u4ef6\u9700\u8981\u7ef4\u62a4\uff1f\u7ef4\u62a4\u6709\u54ea\u51e0\u79cd\u7c7b\u578b\uff1f\u7b80\u8ff0\u5b83\u4eec\u7684\u7ef4\u62a4\u8fc7\u7a0b\u3002<ol> <li>\u539f\u56e0\uff1a\u6307\u8f6f\u4ef6\u7cfb\u7edf\u4ea4\u4ed8\u4f7f\u7528\u4ee5\u540e\uff0c\u4e3a\u4e86\u6539\u6b63\u8f6f\u4ef6\u8fd0\u884c\u9519\u8bef\uff0c\u6216\u8005\u56e0\u6ee1\u8db3\u65b0\u7684\u9700\u6c42\u800c\u52a0\u5165\u65b0\u529f\u80fd\u7684\u4fee\u6539\u8f6f\u4ef6\u7684\u8fc7\u7a0b\u3002</li> <li>\u7c7b\u578b\u548c\u8fc7\u7a0b\uff1a<ol> <li>\u6539\u6b63\u6027\u7ef4\u62a4\uff1a\u6539\u6b63\u8f6f\u4ef6\u6027\u80fd\u4e0a\u7684\u7f3a\u9677\uff0c\u800c\u8fdb\u884c\u8bca\u65ad\u548c\u6539\u6b63\u9519\u8bef\u7684\u8fc7\u7a0b\u5c31\u53eb\u505a\u6539\u6b63\u6027\u7ef4\u62a4</li> <li>\u9002\u5e94\u6027\u7ef4\u62a4\uff1a\u5916\u90e8\u73af\u5883\u53d1\u751f\u53d8\u5316\uff0c\u4e3a\u4f7f\u8f6f\u4ef6\u9002\u5e94\u8fd9\u79cd\u53d8\u5316\uff0c\u800c\u53bb\u4fee\u6539\u8f6f\u4ef6\u7684\u8fc7\u7a0b\u5c31\u53eb\u505a\u9002\u5e94\u6027\u7ef4\u62a4</li> <li>\u5b8c\u5584\u6027\u7ef4\u62a4\uff1a\u7528\u6237\u63d0\u51fa\u4e86\u65b0\u7684\u9700\u6c42\uff0c\u4e3a\u4e86\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\uff0c\u9700\u8981\u4fee\u6539\u6216\u518d\u5f00\u53d1\u8f6f\u4ef6\uff0c\u518d\u53bb\u4fee\u6539\u8f6f\u4ef6\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u8fdb\u884c\u7684\u7ef4\u62a4\u6d3b\u52a8\u53eb\u505a\u5b8c\u5584\u6027\u7ef4\u62a4</li> <li>\u9884\u9632\u6027\u7ef4\u62a4\uff1a\u4e3a\u4e86\u9632\u6b62\u8f6f\u4ef6\u5931\u6548\u800c\u628a\u8f6f\u4ef6\u8fdb\u884c\u4fee\u6539\u7684\u8fc7\u7a0b</li> </ol> </li> </ol> </li> </ol>"},{"location":"TEST/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_9","title":"\u7b2c\u4e5d\u7ae0 \u9762\u5411\u5bf9\u8c61","text":"<ol> <li>\u4f55\u8c13\u9762\u5411\u5bf9\u8c61\u8f6f\u4ef6\u5de5\u7a0b\uff1f\u7b80\u8ff0\u5b83\u548c\u4f20\u7edf\u8f6f\u4ef6\u5de5\u7a0b\u7684\u533a\u522b\u4e0e\u8054\u7cfb\u3002    1.5\u7b54\u6848</li> </ol>"},{"location":"TEST/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/#_10","title":"\u7b2c\u5341\u7ae0 \u9762\u5411\u5bf9\u8c61\u5206\u6790","text":"<ol> <li>\u9762\u5411\u5bf9\u8c61\u7684\u7528\u4f8b(\u529f\u80fd)\u6a21\u578b\u7684\u7528\u4f8b\u4e4b\u95f4\u7684\u5173\u7cfb(\u628a\u7528\u4f8b\u5168\u90e8\u7ffb\u8bd1\u6210\u529f\u80fd\u5c31\u53ef\u4ee5)<ol> <li>\u7528\u4f8b\u6a21\u578b\u7684\u5b9a\u4e49\uff1a\u7528\u4f8b\uff08\u529f\u80fd\uff09\u6a21\u578b\u5f80\u5f80\u662f\u4ece\u7528\u6237\u9700\u6c42\u7684\u89d2\u5ea6\u6765\u63cf\u8ff0\u7cfb\u7edf\uff0c\u6307\u660e\u7cfb\u7edf\u5e94\u8be5\u201c\u505a\u4ec0\u4e48\u201d\uff0c\u76f4\u63a5\u53cd\u6620\u7528\u6237\u5bf9\u76ee\u6807\u7cfb\u7edf\u7684\u9700\u6c42\uff0c\u63cf\u8ff0\u6570\u636e\u5728\u7cfb\u7edf\u4e2d\u7684\u53d8\u6362\u8fc7\u7a0b\u53ca\u7cfb\u7edf\u7684\u529f\u80fd\u3002</li> <li>\u4e00\u4e2a\u7528\u4f8b\u63cf\u8ff0\u7cfb\u7edf\u7684\u4e00\u9879\u529f\u80fd\uff0c\u662f\u53c2\u4e0e\u8005\u4f7f\u7528\u7cfb\u7edf\u6765\u8fbe\u6210\u76ee\u6807\u65f6\u4e00\u7ec4\u76f8\u5173\u7684\u6210\u529f\u573a\u666f\uff08Scenario\uff09\u548c\u5931\u8d25\u573a\u666f\u7684\u96c6\u5408</li> <li>\u7528\u4f8b(\u529f\u80fd)\u901a\u5e38\u662f\u7531\u67d0\u4e2a\u53c2\u4e0e\u8005\u6765\u9a71\u52a8\u6267\u884c\uff0c\u53ea\u6709\u5f53\u5916\u90e8\u7684\u53c2\u4e0e\u8005\u4e0e\u7cfb\u7edf\u4ea4\u4e92\u65f6\uff0c\u8be5\u529f\u80fd\u624d\u4f1a\u53d1\u751f\u4f5c\u7528</li> </ol> </li> <li>\u7528\u4f8b\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a<ol> <li>\u5305\u542b\uff1a\u628a\u5171\u540c\u7684\u529f\u80fd\u5206\u79bb\u51fa\u6765\uff0c\u79f0\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u88ab\u5305\u542b\u529f\u80fd\uff0c\u65b9\u4fbf\u88ab\u591a\u4e2a\u529f\u80fd\u590d\u7528</li> <li>\u6269\u5c55\uff1a\u4e5f\u5c31\u662f\u628a\u4e00\u4e2a\u529f\u80fd\u6dfb\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u529f\u80fd</li> <li>\u6cdb\u5316\uff1a\u5b50\u529f\u80fd\u7ee7\u627f\u7236\u529f\u80fd\u7684\u884c\u4e3a\u548c\u542b\u4e49\uff0c\u8fd8\u53ef\u4ee5\u589e\u52a0\u7236\u529f\u80fd\u6ca1\u6709\u7684\u884c\u4e3a</li> <li>\u4f7f\u7528\uff1a\u50cf\u8c03\u7528\u51fd\u6570\u4e00\u6837\uff0c\u4f7f\u7528\u5176\u4ed6\u7684\u62bd\u8c61\u529f\u80fd(\u7528\u4f8b)</li> </ol> </li> <li>UML\u7c7b\u56fe\u4e2d\uff0c\u52a8\u6001\u884c\u4e3a\u6a21\u578b\u901a\u5e38\u7528\u54ea\u4e9b\u56fe\u5efa\u6a21\uff0c\u54ea\u4e2a\u56fe\u7528\u5728\u54ea\u4e2a\u573a\u666f\u4e2d\uff1f<ol> <li>\u4ea4\u4e92\u56fe\u5305\u62ec\u987a\u5e8f\u56fe\u548c\u901a\u4fe1\u56fe\uff0c\u72b6\u6001\u673a\u5305\u62ec\u6d3b\u52a8\u56fe\u548c\u72b6\u6001\u56fe</li> <li>\u987a\u5e8f\u56fe(idea\u63d2\u4ef6\u5c31\u662f\u8fd9\u4e2a)\uff1a<ol> <li>\u5b9a\u4e49\uff1a\u6309\u65f6\u95f4\u987a\u5e8f\u7684\u6d88\u606f\u4ea4\u6362\u8fc7\u7a0b\uff0c\u4f53\u73b0\u51fa\u7cfb\u7edf\u7528\u4f8b\u7684\u884c\u4e3a\uff0c\u663e\u793a\u53c2\u4e0e\u8005\u5982\u4f55\u91c7\u7528\u82e5\u5e72\u987a\u5e8f\u6b65\u9aa4\u4e0e\u7cfb\u7edf\u5bf9\u8c61\u4ea4\u4e92\u7684\u6a21\u578b</li> <li>\u573a\u666f\uff1a\u5728\u987a\u5e8f\u56fe\u4e2d\uff0c\u6240\u6709\u7684\u7cfb\u7edf\u90fd\u88ab\u5f53\u4f5c\u9ed1\u76d2\u5b50\u770b\u5f85\uff0c\u987a\u5e8f\u56fe\u7684\u91cd\u70b9\u662f\u53c2\u4e0e\u8005\u53d1\u8d77\u7684\u8de8\u8d8a\u7cfb\u7edf\u8fb9\u754c\u7684\u4e8b\u4ef6\u3002\u7cfb\u7edf\u884c\u4e3a\u63cf\u8ff0\u7cfb\u7edf\u505a\u4ec0\u4e48\uff0c\u800c\u4e0d\u89e3\u91ca\u7cfb\u7edf\u600e\u4e48\u505a</li> </ol> </li> <li>\u901a\u4fe1\u56fe\uff1a<ol> <li>\u5b9a\u4e49\uff1a\u63cf\u8ff0\u7c7b\uff08\u5bf9\u8c61\uff09\u4e4b\u95f4\u7684\u5173\u8054\u53ca\u5176\u5f7c\u6b64\u4e4b\u95f4\u7684\u6d88\u606f\u901a\u4fe1</li> <li>\u573a\u666f\uff1a\u901a\u4fe1\u56fe\u4e3b\u8981\u5173\u5fc3\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92</li> </ol> </li> <li>\u6d3b\u52a8\u56fe\uff1a<ol> <li>\u5b9a\u4e49\uff1a\u6d3b\u52a8\u56fe\u5728\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u6d41\u7a0b\u56fe\uff0c\u662f\u5b83\u7684\u4e00\u79cd\u6269\u5c55\uff0c\u4f46\u662f\u4e0d\u662f\u5b8c\u5168\u4e00\u6837</li> <li>\u573a\u666f\uff1a<ol> <li>\u6d3b\u52a8\u56fe\u80fd\u591f\u8868\u793a\u5e76\u53d1\u6d3b\u52a8\u7684\u60c5\u5f62\uff0c\u800c\u6d41\u7a0b\u56fe\u4e0d\u80fd\u3002\u6d3b\u52a8\u56fe\u662f\u9762\u5411\u5bf9\u8c61\u7684\uff0c\u800c\u6d41\u7a0b\u56fe\u662f\u9762\u5411\u8fc7\u7a0b\u7684</li> <li>\u548c\u72b6\u6001\u56fe\u7684\u533a\u522b\uff1a<ol> <li>\u6d3b\u52a8\u56fe\u7740\u91cd\u8868\u73b0\u4ece\u4e00\u4e2a\u6d3b\u52a8\u5230\u53e6\u4e00\u4e2a\u6d3b\u52a8\u7684\u63a7\u5236\u6d41\uff0c\u662f\u5185\u90e8\u5904\u7406\u9a71\u52a8\u7684\u6d41\u7a0b\u3002\u5b83\u7684\u8f6c\u6362\u662f\u81ea\u53d1\u5730\uff0c\u4e0d\u9700\u8981\u5916\u90e8\u4e8b\u4ef6\u7684\u9a71\u52a8</li> <li>\u72b6\u6001\u56fe\u7740\u91cd\u63cf\u8ff0\u4ece\u4e00\u4e2a\u72b6\u6001\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u7684\u6d41\u7a0b\uff0c\u4e3b\u8981\u6709\u5916\u90e8\u4e8b\u4ef6\u7684\u53c2\u4e0e\u3002</li> </ol> </li> </ol> </li> </ol> </li> <li>\u72b6\u6001\u56fe\uff1a<ol> <li>\u5b9a\u4e49\uff1a</li> <li>\u573a\u666f\uff1a</li> </ol> </li> </ol> </li> </ol>"}]}